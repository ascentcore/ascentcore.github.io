!function(t){var n={};function e(r){if(n[r])return n[r].exports;var i=n[r]={i:r,l:!1,exports:{}};return t[r].call(i.exports,i,i.exports,e),i.l=!0,i.exports}e.m=t,e.c=n,e.d=function(t,n,r){e.o(t,n)||Object.defineProperty(t,n,{enumerable:!0,get:r})},e.r=function(t){"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(t,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(t,"__esModule",{value:!0})},e.t=function(t,n){if(1&n&&(t=e(t)),8&n)return t;if(4&n&&"object"==typeof t&&t&&t.__esModule)return t;var r=Object.create(null);if(e.r(r),Object.defineProperty(r,"default",{enumerable:!0,value:t}),2&n&&"string"!=typeof t)for(var i in t)e.d(r,i,function(n){return t[n]}.bind(null,i));return r},e.n=function(t){var n=t&&t.__esModule?function(){return t.default}:function(){return t};return e.d(n,"a",n),n},e.o=function(t,n){return Object.prototype.hasOwnProperty.call(t,n)},e.p="",e(e.s=3)}([function(t,n,e){"use strict";Object.defineProperty(n,"__esModule",{value:!0});var r=function(){return function(t,n){if(Array.isArray(t))return t;if(Symbol.iterator in Object(t))return function(t,n){var e=[],r=!0,i=!1,o=void 0;try{for(var a,u=t[Symbol.iterator]();!(r=(a=u.next()).done)&&(e.push(a.value),!n||e.length!==n);r=!0);}catch(t){i=!0,o=t}finally{try{!r&&u.return&&u.return()}finally{if(i)throw o}}return e}(t,n);throw new TypeError("Invalid attempt to destructure non-iterable instance")}}(),i=e(19);function o(t,n){var e=arguments.length>2&&void 0!==arguments[2]?arguments[2]:0;return[Math.round(100*(-Math.sqrt(3)/2*n+Math.sqrt(3)/2*t))/100,Math.round(100*(.5*n+.5*t-e))/100]}function a(t,n,e,r){t.attr("transform","translate("+o(n,e,r).join(",")+")")}function u(t){var n=r(t,3);return o(n[0],n[1],n[2])}function c(t){return t.reduce(function(t,n){return""+t+n[0]+", "+n[1]+" "},"")}function s(t){return c(t.reduce(function(t,n){return t.push(u(n)),t},[]))}n.default={debounce:function(t){var n=arguments.length>1&&void 0!==arguments[1]?arguments[1]:300,e=arguments.length>2&&void 0!==arguments[2]&&arguments[2],r=arguments.length>3&&void 0!==arguments[3]?arguments[3]:-1,i=void 0,o=r;return function(){var a=this,u=arguments,c=0==o--||e&&!i;clearTimeout(i),i=setTimeout(function(){i=null,e||(o=r,t.apply(a,u))},n),c&&(o=r,t.apply(a,u))}},iso:o,isoArr:u,generatePath:function(t){return"M"+t.map(function(t){return t.join(" ")}).join("L")+"z"},generatePoints:c,isoColor:function(t,n,e,r){var o={shadow:1!==r?"rgba(0,0,0,0)":"rgba(0,0,0,1)",face_left:(0,i.rgb)(t,n,e).darker(.5),face_right:(0,i.rgb)(t,n,e).darker(.7),face_top:(0,i.rgb)(t,n,e),outline:(0,i.rgb)(t,n,e).darker(.9),inline:(0,i.rgb)(t,n,e).darker(-.6)};return 1!==r&&(o.face_top.opacity=r,o.face_left.opacity=r,o.face_right.opacity=r),o},revIso:function(t,n){return o(n,-t,arguments.length>2&&void 0!==arguments[2]?arguments[2]:0)},createSvg:function(t,n){var e=document.createElementNS("http://www.w3.org/2000/svg","svg");return e.setAttributeNS(null,"viewBox","0 0 "+t+" "+n),e.setAttributeNS(null,"width",t),e.setAttributeNS(null,"height",n),e.style.display="block",e.innerHTML='\n    <defs>\n      <filter id="blur" x="-50%" y="-50%" width="200%" height="200%">\n        <feGaussianBlur in="SourceGraphic" stdDeviation="3" />\n      </filter>\n    </defs>',e},rect:function(t,n,e,r,i,a){var u=arguments.length>6&&void 0!==arguments[6]?arguments[6]:"#000",s=arguments.length>7&&void 0!==arguments[7]?arguments[7]:"none",l=o(n+i,e,r),f=o(n+i,e+a,r),h=o(n,e+a,r),d=[h,f,l,o(n,e,r),h];return t.append("polyline").attr("points",c(d)).attr("stroke",u).attr("stroke-width",1).attr("fill",s)},drawPoly:function(t,n){var e=arguments.length>2&&void 0!==arguments[2]?arguments[2]:"#000",r=arguments.length>3&&void 0!==arguments[3]?arguments[3]:"none";return t.append("polyline").attr("points",s(n)).attr("stroke",e).attr("stroke-width",1).attr("fill",r)},getIsoPoints:s,transform:a,getTranslate:function(t,n,e){return"translate("+o(t,n,e).join(",")+")"},text:function(t,n,e,r,i){var o=arguments.length>5&&void 0!==arguments[5]?arguments[5]:1,u=t.append("g"),c=u.append("text").text(n).attr("transform",1===o?"scale(1, 0.5773502691896258) rotate(45)":"scale(1, 0.5773502691896258) rotate(-45)");return a(u,e,r,i),{group:u,text:c}}},t.exports=n.default},function(t,n,e){!function(t){"use strict";function n(t,n){return t<n?-1:t>n?1:t>=n?0:NaN}function e(t){var e;return 1===t.length&&(e=t,t=function(t,r){return n(e(t),r)}),{left:function(n,e,r,i){for(null==r&&(r=0),null==i&&(i=n.length);r<i;){var o=r+i>>>1;t(n[o],e)<0?r=o+1:i=o}return r},right:function(n,e,r,i){for(null==r&&(r=0),null==i&&(i=n.length);r<i;){var o=r+i>>>1;t(n[o],e)>0?i=o:r=o+1}return r}}}var r=e(n),i=r.right,o=r.left;function a(t){return null===t?NaN:+t}function u(t,n){var e,r,i=t.length,o=0,u=0,c=-1,s=0;if(null==n)for(;++c<i;)isNaN(e=a(t[c]))||(o+=(r=e-o)/++s,u+=r*(e-o));else for(;++c<i;)isNaN(e=a(n(t[c],c,t)))||(o+=(r=e-o)/++s,u+=r*(e-o));if(s>1)return u/(s-1)}function c(t,n){var e=u(t,n);return e?Math.sqrt(e):e}function s(t,n){var e,r,i,o=-1,a=t.length;if(null==n){for(;++o<a;)if(null!=(r=t[o])&&r>=r){e=i=r;break}for(;++o<a;)null!=(r=t[o])&&(e>r&&(e=r),i<r&&(i=r))}else{for(;++o<a;)if(null!=(r=n(t[o],o,t))&&r>=r){e=i=r;break}for(;++o<a;)null!=(r=n(t[o],o,t))&&(e>r&&(e=r),i<r&&(i=r))}return[e,i]}var l=Array.prototype,f=l.slice,h=l.map;function d(t){return function(){return t}}function p(t){return t}function v(t,n,e){t=+t,n=+n,e=(i=arguments.length)<2?(n=t,t=0,1):i<3?1:+e;for(var r=-1,i=0|Math.max(0,Math.ceil((n-t)/e)),o=new Array(i);++r<i;)o[r]=t+r*e;return o}var g=Math.sqrt(50),y=Math.sqrt(10),_=Math.sqrt(2);function m(t,n,e){var r=x(t,n,e);return v(Math.ceil(t/r)*r,Math.floor(n/r)*r+r/2,r)}function x(t,n,e){var r=Math.abs(n-t)/Math.max(0,e),i=Math.pow(10,Math.floor(Math.log(r)/Math.LN10)),o=r/i;return o>=g?i*=10:o>=y?i*=5:o>=_&&(i*=2),n<t?-i:i}function b(t){return Math.ceil(Math.log(t.length)/Math.LN2)+1}function w(t,n,e){if(null==e&&(e=a),r=t.length){if((n=+n)<=0||r<2)return+e(t[0],0,t);if(n>=1)return+e(t[r-1],r-1,t);var r,i=(r-1)*n,o=Math.floor(i),u=+e(t[o],o,t),c=+e(t[o+1],o+1,t);return u+(c-u)*(i-o)}}function M(t){for(var n,e,r,i=t.length,o=-1,a=0;++o<i;)a+=t[o].length;for(e=new Array(a);--i>=0;)for(r=t[i],n=r.length;--n>=0;)e[--a]=r[n];return e}function k(t,n){var e,r,i=-1,o=t.length;if(null==n){for(;++i<o;)if(null!=(r=t[i])&&r>=r){e=r;break}for(;++i<o;)null!=(r=t[i])&&e>r&&(e=r)}else{for(;++i<o;)if(null!=(r=n(t[i],i,t))&&r>=r){e=r;break}for(;++i<o;)null!=(r=n(t[i],i,t))&&e>r&&(e=r)}return e}function S(t){if(!(i=t.length))return[];for(var n=-1,e=k(t,N),r=new Array(e);++n<e;)for(var i,o=-1,a=r[n]=new Array(i);++o<i;)a[o]=t[o][n];return r}function N(t){return t.length}function T(){}function A(t,n){var e=new T;if(t instanceof T)t.each(function(t,n){e.set(n,t)});else if(Array.isArray(t)){var r,i=-1,o=t.length;if(null==n)for(;++i<o;)e.set(i,t[i]);else for(;++i<o;)e.set(n(r=t[i],i,t),r)}else if(t)for(var a in t)e.set(a,t[a]);return e}function E(){return{}}function C(t,n,e){t[n]=e}function z(){return A()}function P(t,n,e){t.set(n,e)}function O(){}T.prototype=A.prototype={constructor:T,has:function(t){return"$"+t in this},get:function(t){return this["$"+t]},set:function(t,n){return this["$"+t]=n,this},remove:function(t){var n="$"+t;return n in this&&delete this[n]},clear:function(){for(var t in this)"$"===t[0]&&delete this[t]},keys:function(){var t=[];for(var n in this)"$"===n[0]&&t.push(n.slice(1));return t},values:function(){var t=[];for(var n in this)"$"===n[0]&&t.push(this[n]);return t},entries:function(){var t=[];for(var n in this)"$"===n[0]&&t.push({key:n.slice(1),value:this[n]});return t},size:function(){var t=0;for(var n in this)"$"===n[0]&&++t;return t},empty:function(){for(var t in this)if("$"===t[0])return!1;return!0},each:function(t){for(var n in this)"$"===n[0]&&t(this[n],n.slice(1),this)}};var q=A.prototype;function L(t,n){var e=new O;if(t instanceof O)t.each(function(t){e.add(t)});else if(t){var r=-1,i=t.length;if(null==n)for(;++r<i;)e.add(t[r]);else for(;++r<i;)e.add(n(t[r],r,t))}return e}function j(t,n){var e,r;return t=null==t?0:+t,n=null==n?1:+n,function(){var i;if(null!=e)i=e,e=null;else do{e=2*Math.random()-1,i=2*Math.random()-1,r=e*e+i*i}while(!r||r>1);return t+n*i*Math.sqrt(-2*Math.log(r)/r)}}function D(t){return function(){for(var n=0,e=0;e<t;++e)n+=Math.random();return n}}function R(t){return((t*=2)<=1?t*t:--t*(2-t)+1)/2}function U(t){return((t*=2)<=1?t*t*t:(t-=2)*t*t+2)/2}O.prototype=L.prototype={constructor:O,has:q.has,add:function(t){return this["$"+(t+="")]=t,this},remove:q.remove,clear:q.clear,values:q.keys,size:q.size,empty:q.empty,each:q.each};var I=function t(n){function e(t){return Math.pow(t,n)}return n=+n,e.exponent=t,e}(3),F=function t(n){function e(t){return 1-Math.pow(1-t,n)}return n=+n,e.exponent=t,e}(3),Y=function t(n){function e(t){return((t*=2)<=1?Math.pow(t,n):2-Math.pow(2-t,n))/2}return n=+n,e.exponent=t,e}(3),B=Math.PI,H=B/2;function X(t){return(1-Math.cos(B*t))/2}function $(t){return((t*=2)<=1?Math.pow(2,10*t-10):2-Math.pow(2,10-10*t))/2}function V(t){return((t*=2)<=1?1-Math.sqrt(1-t*t):Math.sqrt(1-(t-=2)*t)+1)/2}var W=4/11,Z=6/11,G=8/11,J=.75,Q=9/11,K=10/11,tt=.9375,nt=21/22,et=63/64,rt=1/W/W;function it(t){return(t=+t)<W?rt*t*t:t<G?rt*(t-=Z)*t+J:t<K?rt*(t-=Q)*t+tt:rt*(t-=nt)*t+et}var ot=function t(n){function e(t){return t*t*((n+1)*t-n)}return n=+n,e.overshoot=t,e}(1.70158),at=function t(n){function e(t){return--t*t*((n+1)*t+n)+1}return n=+n,e.overshoot=t,e}(1.70158),ut=function t(n){function e(t){return((t*=2)<1?t*t*((n+1)*t-n):(t-=2)*t*((n+1)*t+n)+2)/2}return n=+n,e.overshoot=t,e}(1.70158),ct=2*Math.PI,st=function t(n,e){var r=Math.asin(1/(n=Math.max(1,n)))*(e/=ct);function i(t){return n*Math.pow(2,10*--t)*Math.sin((r-t)/e)}return i.amplitude=function(n){return t(n,e*ct)},i.period=function(e){return t(n,e)},i}(1,.3),lt=function t(n,e){var r=Math.asin(1/(n=Math.max(1,n)))*(e/=ct);function i(t){return 1-n*Math.pow(2,-10*(t=+t))*Math.sin((t+r)/e)}return i.amplitude=function(n){return t(n,e*ct)},i.period=function(e){return t(n,e)},i}(1,.3),ft=function t(n,e){var r=Math.asin(1/(n=Math.max(1,n)))*(e/=ct);function i(t){return((t=2*t-1)<0?n*Math.pow(2,10*t)*Math.sin((r-t)/e):2-n*Math.pow(2,-10*t)*Math.sin((r+t)/e))/2}return i.amplitude=function(n){return t(n,e*ct)},i.period=function(e){return t(n,e)},i}(1,.3);function ht(t,n){return t[0]-n[0]||t[1]-n[1]}function dt(t){for(var n,e,r,i=t.length,o=[0,1],a=2,u=2;u<i;++u){for(;a>1&&(n=t[o[a-2]],e=t[o[a-1]],r=t[u],(e[0]-n[0])*(r[1]-n[1])-(e[1]-n[1])*(r[0]-n[0])<=0);)--a;o[a++]=u}return o.slice(0,a)}var pt=Math.PI,vt=2*pt,gt=vt-1e-6;function yt(){this._x0=this._y0=this._x1=this._y1=null,this._=[]}function _t(){return new yt}function mt(t,n,e,r){if(isNaN(n)||isNaN(e))return t;var i,o,a,u,c,s,l,f,h,d=t._root,p={data:r},v=t._x0,g=t._y0,y=t._x1,_=t._y1;if(!d)return t._root=p,t;for(;d.length;)if((s=n>=(o=(v+y)/2))?v=o:y=o,(l=e>=(a=(g+_)/2))?g=a:_=a,i=d,!(d=d[f=l<<1|s]))return i[f]=p,t;if(u=+t._x.call(null,d.data),c=+t._y.call(null,d.data),n===u&&e===c)return p.next=d,i?i[f]=p:t._root=p,t;do{i=i?i[f]=new Array(4):t._root=new Array(4),(s=n>=(o=(v+y)/2))?v=o:y=o,(l=e>=(a=(g+_)/2))?g=a:_=a}while((f=l<<1|s)==(h=(c>=a)<<1|u>=o));return i[h]=d,i[f]=p,t}function xt(t,n,e,r,i){this.node=t,this.x0=n,this.y0=e,this.x1=r,this.y1=i}function bt(t){return t[0]}function wt(t){return t[1]}function Mt(t,n,e){var r=new kt(null==n?bt:n,null==e?wt:e,NaN,NaN,NaN,NaN);return null==t?r:r.addAll(t)}function kt(t,n,e,r,i,o){this._x=t,this._y=n,this._x0=e,this._y0=r,this._x1=i,this._y1=o,this._root=void 0}function St(t){for(var n={data:t.data},e=n;t=t.next;)e=e.next={data:t.data};return n}yt.prototype=_t.prototype={constructor:yt,moveTo:function(t,n){this._.push("M",this._x0=this._x1=+t,",",this._y0=this._y1=+n)},closePath:function(){null!==this._x1&&(this._x1=this._x0,this._y1=this._y0,this._.push("Z"))},lineTo:function(t,n){this._.push("L",this._x1=+t,",",this._y1=+n)},quadraticCurveTo:function(t,n,e,r){this._.push("Q",+t,",",+n,",",this._x1=+e,",",this._y1=+r)},bezierCurveTo:function(t,n,e,r,i,o){this._.push("C",+t,",",+n,",",+e,",",+r,",",this._x1=+i,",",this._y1=+o)},arcTo:function(t,n,e,r,i){t=+t,n=+n,e=+e,r=+r,i=+i;var o=this._x1,a=this._y1,u=e-t,c=r-n,s=o-t,l=a-n,f=s*s+l*l;if(i<0)throw new Error("negative radius: "+i);if(null===this._x1)this._.push("M",this._x1=t,",",this._y1=n);else if(f>1e-6)if(Math.abs(l*u-c*s)>1e-6&&i){var h=e-o,d=r-a,p=u*u+c*c,v=h*h+d*d,g=Math.sqrt(p),y=Math.sqrt(f),_=i*Math.tan((pt-Math.acos((p+f-v)/(2*g*y)))/2),m=_/y,x=_/g;Math.abs(m-1)>1e-6&&this._.push("L",t+m*s,",",n+m*l),this._.push("A",i,",",i,",0,0,",+(l*h>s*d),",",this._x1=t+x*u,",",this._y1=n+x*c)}else this._.push("L",this._x1=t,",",this._y1=n)},arc:function(t,n,e,r,i,o){t=+t,n=+n;var a=(e=+e)*Math.cos(r),u=e*Math.sin(r),c=t+a,s=n+u,l=1^o,f=o?r-i:i-r;if(e<0)throw new Error("negative radius: "+e);null===this._x1?this._.push("M",c,",",s):(Math.abs(this._x1-c)>1e-6||Math.abs(this._y1-s)>1e-6)&&this._.push("L",c,",",s),e&&(f>gt?this._.push("A",e,",",e,",0,1,",l,",",t-a,",",n-u,"A",e,",",e,",0,1,",l,",",this._x1=c,",",this._y1=s):(f<0&&(f=f%vt+vt),this._.push("A",e,",",e,",0,",+(f>=pt),",",l,",",this._x1=t+e*Math.cos(i),",",this._y1=n+e*Math.sin(i))))},rect:function(t,n,e,r){this._.push("M",this._x0=this._x1=+t,",",this._y0=this._y1=+n,"h",+e,"v",+r,"h",-e,"Z")},toString:function(){return this._.join("")}};var Nt=Mt.prototype=kt.prototype;Nt.copy=function(){var t,n,e=new kt(this._x,this._y,this._x0,this._y0,this._x1,this._y1),r=this._root;if(!r)return e;if(!r.length)return e._root=St(r),e;for(t=[{source:r,target:e._root=new Array(4)}];r=t.pop();)for(var i=0;i<4;++i)(n=r.source[i])&&(n.length?t.push({source:n,target:r.target[i]=new Array(4)}):r.target[i]=St(n));return e},Nt.add=function(t){var n=+this._x.call(null,t),e=+this._y.call(null,t);return mt(this.cover(n,e),n,e,t)},Nt.addAll=function(t){var n,e,r,i,o=t.length,a=new Array(o),u=new Array(o),c=1/0,s=1/0,l=-1/0,f=-1/0;for(e=0;e<o;++e)isNaN(r=+this._x.call(null,n=t[e]))||isNaN(i=+this._y.call(null,n))||(a[e]=r,u[e]=i,r<c&&(c=r),r>l&&(l=r),i<s&&(s=i),i>f&&(f=i));for(l<c&&(c=this._x0,l=this._x1),f<s&&(s=this._y0,f=this._y1),this.cover(c,s).cover(l,f),e=0;e<o;++e)mt(this,a[e],u[e],t[e]);return this},Nt.cover=function(t,n){if(isNaN(t=+t)||isNaN(n=+n))return this;var e=this._x0,r=this._y0,i=this._x1,o=this._y1;if(isNaN(e))i=(e=Math.floor(t))+1,o=(r=Math.floor(n))+1;else{if(!(e>t||t>i||r>n||n>o))return this;var a,u,c=i-e,s=this._root;switch(u=(n<(r+o)/2)<<1|t<(e+i)/2){case 0:do{(a=new Array(4))[u]=s,s=a}while(o=r+(c*=2),t>(i=e+c)||n>o);break;case 1:do{(a=new Array(4))[u]=s,s=a}while(o=r+(c*=2),(e=i-c)>t||n>o);break;case 2:do{(a=new Array(4))[u]=s,s=a}while(r=o-(c*=2),t>(i=e+c)||r>n);break;case 3:do{(a=new Array(4))[u]=s,s=a}while(r=o-(c*=2),(e=i-c)>t||r>n)}this._root&&this._root.length&&(this._root=s)}return this._x0=e,this._y0=r,this._x1=i,this._y1=o,this},Nt.data=function(){var t=[];return this.visit(function(n){if(!n.length)do{t.push(n.data)}while(n=n.next)}),t},Nt.extent=function(t){return arguments.length?this.cover(+t[0][0],+t[0][1]).cover(+t[1][0],+t[1][1]):isNaN(this._x0)?void 0:[[this._x0,this._y0],[this._x1,this._y1]]},Nt.find=function(t,n,e){var r,i,o,a,u,c,s,l=this._x0,f=this._y0,h=this._x1,d=this._y1,p=[],v=this._root;for(v&&p.push(new xt(v,l,f,h,d)),null==e?e=1/0:(l=t-e,f=n-e,h=t+e,d=n+e,e*=e);c=p.pop();)if(!(!(v=c.node)||(i=c.x0)>h||(o=c.y0)>d||(a=c.x1)<l||(u=c.y1)<f))if(v.length){var g=(i+a)/2,y=(o+u)/2;p.push(new xt(v[3],g,y,a,u),new xt(v[2],i,y,g,u),new xt(v[1],g,o,a,y),new xt(v[0],i,o,g,y)),(s=(n>=y)<<1|t>=g)&&(c=p[p.length-1],p[p.length-1]=p[p.length-1-s],p[p.length-1-s]=c)}else{var _=t-+this._x.call(null,v.data),m=n-+this._y.call(null,v.data),x=_*_+m*m;if(x<e){var b=Math.sqrt(e=x);l=t-b,f=n-b,h=t+b,d=n+b,r=v.data}}return r},Nt.remove=function(t){if(isNaN(o=+this._x.call(null,t))||isNaN(a=+this._y.call(null,t)))return this;var n,e,r,i,o,a,u,c,s,l,f,h,d=this._root,p=this._x0,v=this._y0,g=this._x1,y=this._y1;if(!d)return this;if(d.length)for(;;){if((s=o>=(u=(p+g)/2))?p=u:g=u,(l=a>=(c=(v+y)/2))?v=c:y=c,n=d,!(d=d[f=l<<1|s]))return this;if(!d.length)break;(n[f+1&3]||n[f+2&3]||n[f+3&3])&&(e=n,h=f)}for(;d.data!==t;)if(r=d,!(d=d.next))return this;return(i=d.next)&&delete d.next,r?(i?r.next=i:delete r.next,this):n?(i?n[f]=i:delete n[f],(d=n[0]||n[1]||n[2]||n[3])&&d===(n[3]||n[2]||n[1]||n[0])&&!d.length&&(e?e[h]=d:this._root=d),this):(this._root=i,this)},Nt.removeAll=function(t){for(var n=0,e=t.length;n<e;++n)this.remove(t[n]);return this},Nt.root=function(){return this._root},Nt.size=function(){var t=0;return this.visit(function(n){if(!n.length)do{++t}while(n=n.next)}),t},Nt.visit=function(t){var n,e,r,i,o,a,u=[],c=this._root;for(c&&u.push(new xt(c,this._x0,this._y0,this._x1,this._y1));n=u.pop();)if(!t(c=n.node,r=n.x0,i=n.y0,o=n.x1,a=n.y1)&&c.length){var s=(r+o)/2,l=(i+a)/2;(e=c[3])&&u.push(new xt(e,s,l,o,a)),(e=c[2])&&u.push(new xt(e,r,l,s,a)),(e=c[1])&&u.push(new xt(e,s,i,o,l)),(e=c[0])&&u.push(new xt(e,r,i,s,l))}return this},Nt.visitAfter=function(t){var n,e=[],r=[];for(this._root&&e.push(new xt(this._root,this._x0,this._y0,this._x1,this._y1));n=e.pop();){var i=n.node;if(i.length){var o,a=n.x0,u=n.y0,c=n.x1,s=n.y1,l=(a+c)/2,f=(u+s)/2;(o=i[0])&&e.push(new xt(o,a,u,l,f)),(o=i[1])&&e.push(new xt(o,l,u,c,f)),(o=i[2])&&e.push(new xt(o,a,f,l,s)),(o=i[3])&&e.push(new xt(o,l,f,c,s))}r.push(n)}for(;n=r.pop();)t(n.node,n.x0,n.y0,n.x1,n.y1);return this},Nt.x=function(t){return arguments.length?(this._x=t,this):this._x},Nt.y=function(t){return arguments.length?(this._y=t,this):this._y};var Tt=[].slice,At={};function Et(t){if(!(t>=1))throw new Error;this._size=t,this._call=this._error=null,this._tasks=[],this._data=[],this._waiting=this._active=this._ended=this._start=0}function Ct(t){if(!t._start)try{!function(t){for(;t._start=t._waiting&&t._active<t._size;){var n=t._ended+t._active,e=t._tasks[n],r=e.length-1,i=e[r];e[r]=zt(t,n),--t._waiting,++t._active,e=i.apply(null,e),t._tasks[n]&&(t._tasks[n]=e||At)}}(t)}catch(n){t._tasks[t._ended+t._active-1]&&Pt(t,n)}}function zt(t,n){return function(e,r){t._tasks[n]&&(--t._active,++t._ended,t._tasks[n]=null,null==t._error&&(null!=e?Pt(t,e):(t._data[n]=r,t._waiting?Ct(t):Ot(t))))}}function Pt(t,n){var e,r=t._tasks.length;for(t._error=n,t._data=void 0,t._waiting=NaN;--r>=0;)if((e=t._tasks[r])&&(t._tasks[r]=null,e.abort))try{e.abort()}catch(n){}t._active=NaN,Ot(t)}function Ot(t){!t._active&&t._call&&t._call(t._error,t._data)}function qt(t){return new Et(arguments.length?+t:1/0)}function Lt(t){return function(){return t}}Et.prototype=qt.prototype={constructor:Et,defer:function(t){if("function"!=typeof t||this._call)throw new Error;if(null!=this._error)return this;var n=Tt.call(arguments,1);return n.push(t),++this._waiting,this._tasks.push(n),Ct(this),this},abort:function(){return null==this._error&&Pt(this,new Error("abort")),this},await:function(t){if("function"!=typeof t||this._call)throw new Error;return this._call=function(n,e){t.apply(null,[n].concat(e))},Ot(this),this},awaitAll:function(t){if("function"!=typeof t||this._call)throw new Error;return this._call=t,Ot(this),this}};var jt=1e-12,Dt=Math.PI,Rt=Dt/2,Ut=2*Dt;function It(t){return t.innerRadius}function Ft(t){return t.outerRadius}function Yt(t){return t.startAngle}function Bt(t){return t.endAngle}function Ht(t){return t&&t.padAngle}function Xt(t){return t>=1?Rt:t<=-1?-Rt:Math.asin(t)}function $t(t,n,e,r,i,o,a){var u=t-e,c=n-r,s=(a?o:-o)/Math.sqrt(u*u+c*c),l=s*c,f=-s*u,h=t+l,d=n+f,p=e+l,v=r+f,g=(h+p)/2,y=(d+v)/2,_=p-h,m=v-d,x=_*_+m*m,b=i-o,w=h*v-p*d,M=(m<0?-1:1)*Math.sqrt(Math.max(0,b*b*x-w*w)),k=(w*m-_*M)/x,S=(-w*_-m*M)/x,N=(w*m+_*M)/x,T=(-w*_+m*M)/x,A=k-g,E=S-y,C=N-g,z=T-y;return A*A+E*E>C*C+z*z&&(k=N,S=T),{cx:k,cy:S,x01:-l,y01:-f,x11:k*(i/b-1),y11:S*(i/b-1)}}function Vt(t){this._context=t}function Wt(t){return new Vt(t)}function Zt(t){return t[0]}function Gt(t){return t[1]}function Jt(){var t=Zt,n=Gt,e=Lt(!0),r=null,i=Wt,o=null;function a(a){var u,c,s,l=a.length,f=!1;for(null==r&&(o=i(s=_t())),u=0;u<=l;++u)!(u<l&&e(c=a[u],u,a))===f&&((f=!f)?o.lineStart():o.lineEnd()),f&&o.point(+t(c,u,a),+n(c,u,a));if(s)return o=null,s+""||null}return a.x=function(n){return arguments.length?(t="function"==typeof n?n:Lt(+n),a):t},a.y=function(t){return arguments.length?(n="function"==typeof t?t:Lt(+t),a):n},a.defined=function(t){return arguments.length?(e="function"==typeof t?t:Lt(!!t),a):e},a.curve=function(t){return arguments.length?(i=t,null!=r&&(o=i(r)),a):i},a.context=function(t){return arguments.length?(null==t?r=o=null:o=i(r=t),a):r},a}function Qt(){var t=Zt,n=null,e=Lt(0),r=Gt,i=Lt(!0),o=null,a=Wt,u=null;function c(c){var s,l,f,h,d,p=c.length,v=!1,g=new Array(p),y=new Array(p);for(null==o&&(u=a(d=_t())),s=0;s<=p;++s){if(!(s<p&&i(h=c[s],s,c))===v)if(v=!v)l=s,u.areaStart(),u.lineStart();else{for(u.lineEnd(),u.lineStart(),f=s-1;f>=l;--f)u.point(g[f],y[f]);u.lineEnd(),u.areaEnd()}v&&(g[s]=+t(h,s,c),y[s]=+e(h,s,c),u.point(n?+n(h,s,c):g[s],r?+r(h,s,c):y[s]))}if(d)return u=null,d+""||null}function s(){return Jt().defined(i).curve(a).context(o)}return c.x=function(e){return arguments.length?(t="function"==typeof e?e:Lt(+e),n=null,c):t},c.x0=function(n){return arguments.length?(t="function"==typeof n?n:Lt(+n),c):t},c.x1=function(t){return arguments.length?(n=null==t?null:"function"==typeof t?t:Lt(+t),c):n},c.y=function(t){return arguments.length?(e="function"==typeof t?t:Lt(+t),r=null,c):e},c.y0=function(t){return arguments.length?(e="function"==typeof t?t:Lt(+t),c):e},c.y1=function(t){return arguments.length?(r=null==t?null:"function"==typeof t?t:Lt(+t),c):r},c.lineX0=c.lineY0=function(){return s().x(t).y(e)},c.lineY1=function(){return s().x(t).y(r)},c.lineX1=function(){return s().x(n).y(e)},c.defined=function(t){return arguments.length?(i="function"==typeof t?t:Lt(!!t),c):i},c.curve=function(t){return arguments.length?(a=t,null!=o&&(u=a(o)),c):a},c.context=function(t){return arguments.length?(null==t?o=u=null:u=a(o=t),c):o},c}function Kt(t,n){return n<t?-1:n>t?1:n>=t?0:NaN}function tn(t){return t}Vt.prototype={areaStart:function(){this._line=0},areaEnd:function(){this._line=NaN},lineStart:function(){this._point=0},lineEnd:function(){(this._line||0!==this._line&&1===this._point)&&this._context.closePath(),this._line=1-this._line},point:function(t,n){switch(t=+t,n=+n,this._point){case 0:this._point=1,this._line?this._context.lineTo(t,n):this._context.moveTo(t,n);break;case 1:this._point=2;default:this._context.lineTo(t,n)}}};var nn=rn(Wt);function en(t){this._curve=t}function rn(t){function n(n){return new en(t(n))}return n._curve=t,n}function on(t){var n=t.curve;return t.angle=t.x,delete t.x,t.radius=t.y,delete t.y,t.curve=function(t){return arguments.length?n(rn(t)):n()._curve},t}en.prototype={areaStart:function(){this._curve.areaStart()},areaEnd:function(){this._curve.areaEnd()},lineStart:function(){this._curve.lineStart()},lineEnd:function(){this._curve.lineEnd()},point:function(t,n){this._curve.point(n*Math.sin(t),n*-Math.cos(t))}};var an={draw:function(t,n){var e=Math.sqrt(n/Dt);t.moveTo(e,0),t.arc(0,0,e,0,Ut)}},un={draw:function(t,n){var e=Math.sqrt(n/5)/2;t.moveTo(-3*e,-e),t.lineTo(-e,-e),t.lineTo(-e,-3*e),t.lineTo(e,-3*e),t.lineTo(e,-e),t.lineTo(3*e,-e),t.lineTo(3*e,e),t.lineTo(e,e),t.lineTo(e,3*e),t.lineTo(-e,3*e),t.lineTo(-e,e),t.lineTo(-3*e,e),t.closePath()}},cn=Math.sqrt(1/3),sn=2*cn,ln={draw:function(t,n){var e=Math.sqrt(n/sn),r=e*cn;t.moveTo(0,-e),t.lineTo(r,0),t.lineTo(0,e),t.lineTo(-r,0),t.closePath()}},fn=Math.sin(Dt/10)/Math.sin(7*Dt/10),hn=Math.sin(Ut/10)*fn,dn=-Math.cos(Ut/10)*fn,pn={draw:function(t,n){var e=Math.sqrt(.8908130915292852*n),r=hn*e,i=dn*e;t.moveTo(0,-e),t.lineTo(r,i);for(var o=1;o<5;++o){var a=Ut*o/5,u=Math.cos(a),c=Math.sin(a);t.lineTo(c*e,-u*e),t.lineTo(u*r-c*i,c*r+u*i)}t.closePath()}},vn={draw:function(t,n){var e=Math.sqrt(n),r=-e/2;t.rect(r,r,e,e)}},gn=Math.sqrt(3),yn={draw:function(t,n){var e=-Math.sqrt(n/(3*gn));t.moveTo(0,2*e),t.lineTo(-gn*e,-e),t.lineTo(gn*e,-e),t.closePath()}},_n=-.5,mn=Math.sqrt(3)/2,xn=1/Math.sqrt(12),bn=3*(xn/2+1),wn={draw:function(t,n){var e=Math.sqrt(n/bn),r=e/2,i=e*xn,o=r,a=e*xn+e,u=-o,c=a;t.moveTo(r,i),t.lineTo(o,a),t.lineTo(u,c),t.lineTo(_n*r-mn*i,mn*r+_n*i),t.lineTo(_n*o-mn*a,mn*o+_n*a),t.lineTo(_n*u-mn*c,mn*u+_n*c),t.lineTo(_n*r+mn*i,_n*i-mn*r),t.lineTo(_n*o+mn*a,_n*a-mn*o),t.lineTo(_n*u+mn*c,_n*c-mn*u),t.closePath()}},Mn=[an,un,ln,vn,pn,yn,wn];function kn(){}function Sn(t,n,e){t._context.bezierCurveTo((2*t._x0+t._x1)/3,(2*t._y0+t._y1)/3,(t._x0+2*t._x1)/3,(t._y0+2*t._y1)/3,(t._x0+4*t._x1+n)/6,(t._y0+4*t._y1+e)/6)}function Nn(t){this._context=t}function Tn(t){this._context=t}function An(t){this._context=t}function En(t,n){this._basis=new Nn(t),this._beta=n}Nn.prototype={areaStart:function(){this._line=0},areaEnd:function(){this._line=NaN},lineStart:function(){this._x0=this._x1=this._y0=this._y1=NaN,this._point=0},lineEnd:function(){switch(this._point){case 3:Sn(this,this._x1,this._y1);case 2:this._context.lineTo(this._x1,this._y1)}(this._line||0!==this._line&&1===this._point)&&this._context.closePath(),this._line=1-this._line},point:function(t,n){switch(t=+t,n=+n,this._point){case 0:this._point=1,this._line?this._context.lineTo(t,n):this._context.moveTo(t,n);break;case 1:this._point=2;break;case 2:this._point=3,this._context.lineTo((5*this._x0+this._x1)/6,(5*this._y0+this._y1)/6);default:Sn(this,t,n)}this._x0=this._x1,this._x1=t,this._y0=this._y1,this._y1=n}},Tn.prototype={areaStart:kn,areaEnd:kn,lineStart:function(){this._x0=this._x1=this._x2=this._x3=this._x4=this._y0=this._y1=this._y2=this._y3=this._y4=NaN,this._point=0},lineEnd:function(){switch(this._point){case 1:this._context.moveTo(this._x2,this._y2),this._context.closePath();break;case 2:this._context.moveTo((this._x2+2*this._x3)/3,(this._y2+2*this._y3)/3),this._context.lineTo((this._x3+2*this._x2)/3,(this._y3+2*this._y2)/3),this._context.closePath();break;case 3:this.point(this._x2,this._y2),this.point(this._x3,this._y3),this.point(this._x4,this._y4)}},point:function(t,n){switch(t=+t,n=+n,this._point){case 0:this._point=1,this._x2=t,this._y2=n;break;case 1:this._point=2,this._x3=t,this._y3=n;break;case 2:this._point=3,this._x4=t,this._y4=n,this._context.moveTo((this._x0+4*this._x1+t)/6,(this._y0+4*this._y1+n)/6);break;default:Sn(this,t,n)}this._x0=this._x1,this._x1=t,this._y0=this._y1,this._y1=n}},An.prototype={areaStart:function(){this._line=0},areaEnd:function(){this._line=NaN},lineStart:function(){this._x0=this._x1=this._y0=this._y1=NaN,this._point=0},lineEnd:function(){(this._line||0!==this._line&&3===this._point)&&this._context.closePath(),this._line=1-this._line},point:function(t,n){switch(t=+t,n=+n,this._point){case 0:this._point=1;break;case 1:this._point=2;break;case 2:this._point=3;var e=(this._x0+4*this._x1+t)/6,r=(this._y0+4*this._y1+n)/6;this._line?this._context.lineTo(e,r):this._context.moveTo(e,r);break;case 3:this._point=4;default:Sn(this,t,n)}this._x0=this._x1,this._x1=t,this._y0=this._y1,this._y1=n}},En.prototype={lineStart:function(){this._x=[],this._y=[],this._basis.lineStart()},lineEnd:function(){var t=this._x,n=this._y,e=t.length-1;if(e>0)for(var r,i=t[0],o=n[0],a=t[e]-i,u=n[e]-o,c=-1;++c<=e;)r=c/e,this._basis.point(this._beta*t[c]+(1-this._beta)*(i+r*a),this._beta*n[c]+(1-this._beta)*(o+r*u));this._x=this._y=null,this._basis.lineEnd()},point:function(t,n){this._x.push(+t),this._y.push(+n)}};var Cn=function t(n){function e(t){return 1===n?new Nn(t):new En(t,n)}return e.beta=function(n){return t(+n)},e}(.85);function zn(t,n,e){t._context.bezierCurveTo(t._x1+t._k*(t._x2-t._x0),t._y1+t._k*(t._y2-t._y0),t._x2+t._k*(t._x1-n),t._y2+t._k*(t._y1-e),t._x2,t._y2)}function Pn(t,n){this._context=t,this._k=(1-n)/6}Pn.prototype={areaStart:function(){this._line=0},areaEnd:function(){this._line=NaN},lineStart:function(){this._x0=this._x1=this._x2=this._y0=this._y1=this._y2=NaN,this._point=0},lineEnd:function(){switch(this._point){case 2:this._context.lineTo(this._x2,this._y2);break;case 3:zn(this,this._x1,this._y1)}(this._line||0!==this._line&&1===this._point)&&this._context.closePath(),this._line=1-this._line},point:function(t,n){switch(t=+t,n=+n,this._point){case 0:this._point=1,this._line?this._context.lineTo(t,n):this._context.moveTo(t,n);break;case 1:this._point=2,this._x1=t,this._y1=n;break;case 2:this._point=3;default:zn(this,t,n)}this._x0=this._x1,this._x1=this._x2,this._x2=t,this._y0=this._y1,this._y1=this._y2,this._y2=n}};var On=function t(n){function e(t){return new Pn(t,n)}return e.tension=function(n){return t(+n)},e}(0);function qn(t,n){this._context=t,this._k=(1-n)/6}qn.prototype={areaStart:kn,areaEnd:kn,lineStart:function(){this._x0=this._x1=this._x2=this._x3=this._x4=this._x5=this._y0=this._y1=this._y2=this._y3=this._y4=this._y5=NaN,this._point=0},lineEnd:function(){switch(this._point){case 1:this._context.moveTo(this._x3,this._y3),this._context.closePath();break;case 2:this._context.lineTo(this._x3,this._y3),this._context.closePath();break;case 3:this.point(this._x3,this._y3),this.point(this._x4,this._y4),this.point(this._x5,this._y5)}},point:function(t,n){switch(t=+t,n=+n,this._point){case 0:this._point=1,this._x3=t,this._y3=n;break;case 1:this._point=2,this._context.moveTo(this._x4=t,this._y4=n);break;case 2:this._point=3,this._x5=t,this._y5=n;break;default:zn(this,t,n)}this._x0=this._x1,this._x1=this._x2,this._x2=t,this._y0=this._y1,this._y1=this._y2,this._y2=n}};var Ln=function t(n){function e(t){return new qn(t,n)}return e.tension=function(n){return t(+n)},e}(0);function jn(t,n){this._context=t,this._k=(1-n)/6}jn.prototype={areaStart:function(){this._line=0},areaEnd:function(){this._line=NaN},lineStart:function(){this._x0=this._x1=this._x2=this._y0=this._y1=this._y2=NaN,this._point=0},lineEnd:function(){(this._line||0!==this._line&&3===this._point)&&this._context.closePath(),this._line=1-this._line},point:function(t,n){switch(t=+t,n=+n,this._point){case 0:this._point=1;break;case 1:this._point=2;break;case 2:this._point=3,this._line?this._context.lineTo(this._x2,this._y2):this._context.moveTo(this._x2,this._y2);break;case 3:this._point=4;default:zn(this,t,n)}this._x0=this._x1,this._x1=this._x2,this._x2=t,this._y0=this._y1,this._y1=this._y2,this._y2=n}};var Dn=function t(n){function e(t){return new jn(t,n)}return e.tension=function(n){return t(+n)},e}(0);function Rn(t,n,e){var r=t._x1,i=t._y1,o=t._x2,a=t._y2;if(t._l01_a>jt){var u=2*t._l01_2a+3*t._l01_a*t._l12_a+t._l12_2a,c=3*t._l01_a*(t._l01_a+t._l12_a);r=(r*u-t._x0*t._l12_2a+t._x2*t._l01_2a)/c,i=(i*u-t._y0*t._l12_2a+t._y2*t._l01_2a)/c}if(t._l23_a>jt){var s=2*t._l23_2a+3*t._l23_a*t._l12_a+t._l12_2a,l=3*t._l23_a*(t._l23_a+t._l12_a);o=(o*s+t._x1*t._l23_2a-n*t._l12_2a)/l,a=(a*s+t._y1*t._l23_2a-e*t._l12_2a)/l}t._context.bezierCurveTo(r,i,o,a,t._x2,t._y2)}function Un(t,n){this._context=t,this._alpha=n}Un.prototype={areaStart:function(){this._line=0},areaEnd:function(){this._line=NaN},lineStart:function(){this._x0=this._x1=this._x2=this._y0=this._y1=this._y2=NaN,this._l01_a=this._l12_a=this._l23_a=this._l01_2a=this._l12_2a=this._l23_2a=this._point=0},lineEnd:function(){switch(this._point){case 2:this._context.lineTo(this._x2,this._y2);break;case 3:this.point(this,this._x2,this._y2)}(this._line||0!==this._line&&1===this._point)&&this._context.closePath(),this._line=1-this._line},point:function(t,n){if(t=+t,n=+n,this._point){var e=this._x2-t,r=this._y2-n;this._l23_a=Math.sqrt(this._l23_2a=Math.pow(e*e+r*r,this._alpha))}switch(this._point){case 0:this._point=1,this._line?this._context.lineTo(t,n):this._context.moveTo(t,n);break;case 1:this._point=2;break;case 2:this._point=3;default:Rn(this,t,n)}this._l01_a=this._l12_a,this._l12_a=this._l23_a,this._l01_2a=this._l12_2a,this._l12_2a=this._l23_2a,this._x0=this._x1,this._x1=this._x2,this._x2=t,this._y0=this._y1,this._y1=this._y2,this._y2=n}};var In=function t(n){function e(t){return n?new Un(t,n):new Pn(t,0)}return e.alpha=function(n){return t(+n)},e}(.5);function Fn(t,n){this._context=t,this._alpha=n}Fn.prototype={areaStart:kn,areaEnd:kn,lineStart:function(){this._x0=this._x1=this._x2=this._x3=this._x4=this._x5=this._y0=this._y1=this._y2=this._y3=this._y4=this._y5=NaN,this._l01_a=this._l12_a=this._l23_a=this._l01_2a=this._l12_2a=this._l23_2a=this._point=0},lineEnd:function(){switch(this._point){case 1:this._context.moveTo(this._x3,this._y3),this._context.closePath();break;case 2:this._context.lineTo(this._x3,this._y3),this._context.closePath();break;case 3:this.point(this._x3,this._y3),this.point(this._x4,this._y4),this.point(this._x5,this._y5)}},point:function(t,n){if(t=+t,n=+n,this._point){var e=this._x2-t,r=this._y2-n;this._l23_a=Math.sqrt(this._l23_2a=Math.pow(e*e+r*r,this._alpha))}switch(this._point){case 0:this._point=1,this._x3=t,this._y3=n;break;case 1:this._point=2,this._context.moveTo(this._x4=t,this._y4=n);break;case 2:this._point=3,this._x5=t,this._y5=n;break;default:Rn(this,t,n)}this._l01_a=this._l12_a,this._l12_a=this._l23_a,this._l01_2a=this._l12_2a,this._l12_2a=this._l23_2a,this._x0=this._x1,this._x1=this._x2,this._x2=t,this._y0=this._y1,this._y1=this._y2,this._y2=n}};var Yn=function t(n){function e(t){return n?new Fn(t,n):new qn(t,0)}return e.alpha=function(n){return t(+n)},e}(.5);function Bn(t,n){this._context=t,this._alpha=n}Bn.prototype={areaStart:function(){this._line=0},areaEnd:function(){this._line=NaN},lineStart:function(){this._x0=this._x1=this._x2=this._y0=this._y1=this._y2=NaN,this._l01_a=this._l12_a=this._l23_a=this._l01_2a=this._l12_2a=this._l23_2a=this._point=0},lineEnd:function(){(this._line||0!==this._line&&3===this._point)&&this._context.closePath(),this._line=1-this._line},point:function(t,n){if(t=+t,n=+n,this._point){var e=this._x2-t,r=this._y2-n;this._l23_a=Math.sqrt(this._l23_2a=Math.pow(e*e+r*r,this._alpha))}switch(this._point){case 0:this._point=1;break;case 1:this._point=2;break;case 2:this._point=3,this._line?this._context.lineTo(this._x2,this._y2):this._context.moveTo(this._x2,this._y2);break;case 3:this._point=4;default:Rn(this,t,n)}this._l01_a=this._l12_a,this._l12_a=this._l23_a,this._l01_2a=this._l12_2a,this._l12_2a=this._l23_2a,this._x0=this._x1,this._x1=this._x2,this._x2=t,this._y0=this._y1,this._y1=this._y2,this._y2=n}};var Hn=function t(n){function e(t){return n?new Bn(t,n):new jn(t,0)}return e.alpha=function(n){return t(+n)},e}(.5);function Xn(t){this._context=t}function $n(t){return t<0?-1:1}function Vn(t,n,e){var r=t._x1-t._x0,i=n-t._x1,o=(t._y1-t._y0)/(r||i<0&&-0),a=(e-t._y1)/(i||r<0&&-0),u=(o*i+a*r)/(r+i);return($n(o)+$n(a))*Math.min(Math.abs(o),Math.abs(a),.5*Math.abs(u))||0}function Wn(t,n){var e=t._x1-t._x0;return e?(3*(t._y1-t._y0)/e-n)/2:n}function Zn(t,n,e){var r=t._x0,i=t._y0,o=t._x1,a=t._y1,u=(o-r)/3;t._context.bezierCurveTo(r+u,i+u*n,o-u,a-u*e,o,a)}function Gn(t){this._context=t}function Jn(t){this._context=new Qn(t)}function Qn(t){this._context=t}function Kn(t){this._context=t}function te(t){var n,e,r=t.length-1,i=new Array(r),o=new Array(r),a=new Array(r);for(i[0]=0,o[0]=2,a[0]=t[0]+2*t[1],n=1;n<r-1;++n)i[n]=1,o[n]=4,a[n]=4*t[n]+2*t[n+1];for(i[r-1]=2,o[r-1]=7,a[r-1]=8*t[r-1]+t[r],n=1;n<r;++n)e=i[n]/o[n-1],o[n]-=e,a[n]-=e*a[n-1];for(i[r-1]=a[r-1]/o[r-1],n=r-2;n>=0;--n)i[n]=(a[n]-i[n+1])/o[n];for(o[r-1]=(t[r]+i[r-1])/2,n=0;n<r-1;++n)o[n]=2*t[n+1]-i[n+1];return[i,o]}function ne(t,n){this._context=t,this._t=n}Xn.prototype={areaStart:kn,areaEnd:kn,lineStart:function(){this._point=0},lineEnd:function(){this._point&&this._context.closePath()},point:function(t,n){t=+t,n=+n,this._point?this._context.lineTo(t,n):(this._point=1,this._context.moveTo(t,n))}},Gn.prototype={areaStart:function(){this._line=0},areaEnd:function(){this._line=NaN},lineStart:function(){this._x0=this._x1=this._y0=this._y1=this._t0=NaN,this._point=0},lineEnd:function(){switch(this._point){case 2:this._context.lineTo(this._x1,this._y1);break;case 3:Zn(this,this._t0,Wn(this,this._t0))}(this._line||0!==this._line&&1===this._point)&&this._context.closePath(),this._line=1-this._line},point:function(t,n){var e=NaN;if(n=+n,(t=+t)!==this._x1||n!==this._y1){switch(this._point){case 0:this._point=1,this._line?this._context.lineTo(t,n):this._context.moveTo(t,n);break;case 1:this._point=2;break;case 2:this._point=3,Zn(this,Wn(this,e=Vn(this,t,n)),e);break;default:Zn(this,this._t0,e=Vn(this,t,n))}this._x0=this._x1,this._x1=t,this._y0=this._y1,this._y1=n,this._t0=e}}},(Jn.prototype=Object.create(Gn.prototype)).point=function(t,n){Gn.prototype.point.call(this,n,t)},Qn.prototype={moveTo:function(t,n){this._context.moveTo(n,t)},closePath:function(){this._context.closePath()},lineTo:function(t,n){this._context.lineTo(n,t)},bezierCurveTo:function(t,n,e,r,i,o){this._context.bezierCurveTo(n,t,r,e,o,i)}},Kn.prototype={areaStart:function(){this._line=0},areaEnd:function(){this._line=NaN},lineStart:function(){this._x=[],this._y=[]},lineEnd:function(){var t=this._x,n=this._y,e=t.length;if(e)if(this._line?this._context.lineTo(t[0],n[0]):this._context.moveTo(t[0],n[0]),2===e)this._context.lineTo(t[1],n[1]);else for(var r=te(t),i=te(n),o=0,a=1;a<e;++o,++a)this._context.bezierCurveTo(r[0][o],i[0][o],r[1][o],i[1][o],t[a],n[a]);(this._line||0!==this._line&&1===e)&&this._context.closePath(),this._line=1-this._line,this._x=this._y=null},point:function(t,n){this._x.push(+t),this._y.push(+n)}},ne.prototype={areaStart:function(){this._line=0},areaEnd:function(){this._line=NaN},lineStart:function(){this._x=this._y=NaN,this._point=0},lineEnd:function(){0<this._t&&this._t<1&&2===this._point&&this._context.lineTo(this._x,this._y),(this._line||0!==this._line&&1===this._point)&&this._context.closePath(),this._line>=0&&(this._t=1-this._t,this._line=1-this._line)},point:function(t,n){switch(t=+t,n=+n,this._point){case 0:this._point=1,this._line?this._context.lineTo(t,n):this._context.moveTo(t,n);break;case 1:this._point=2;default:if(this._t<=0)this._context.lineTo(this._x,n),this._context.lineTo(t,n);else{var e=this._x*(1-this._t)+t*this._t;this._context.lineTo(e,this._y),this._context.lineTo(e,n)}}this._x=t,this._y=n}};var ee=Array.prototype.slice;function re(t,n){if((r=t.length)>1)for(var e,r,i=1,o=t[n[0]],a=o.length;i<r;++i){e=o,o=t[n[i]];for(var u=0;u<a;++u)o[u][1]+=o[u][0]=isNaN(e[u][1])?e[u][0]:e[u][1]}}function ie(t){for(var n=t.length,e=new Array(n);--n>=0;)e[n]=n;return e}function oe(t,n){return t[n]}function ae(t){var n=t.map(ue);return ie(t).sort(function(t,e){return n[t]-n[e]})}function ue(t){for(var n,e=0,r=-1,i=t.length;++r<i;)(n=+t[r][1])&&(e+=n);return e}function ce(t,n,e){t.prototype=n.prototype=e,e.constructor=t}function se(t,n){var e=Object.create(t.prototype);for(var r in n)e[r]=n[r];return e}function le(){}var fe=1/.7,he=/^#([0-9a-f]{3})$/,de=/^#([0-9a-f]{6})$/,pe=/^rgb\(\s*([-+]?\d+)\s*,\s*([-+]?\d+)\s*,\s*([-+]?\d+)\s*\)$/,ve=/^rgb\(\s*([-+]?\d+(?:\.\d+)?)%\s*,\s*([-+]?\d+(?:\.\d+)?)%\s*,\s*([-+]?\d+(?:\.\d+)?)%\s*\)$/,ge=/^rgba\(\s*([-+]?\d+)\s*,\s*([-+]?\d+)\s*,\s*([-+]?\d+)\s*,\s*([-+]?\d+(?:\.\d+)?)\s*\)$/,ye=/^rgba\(\s*([-+]?\d+(?:\.\d+)?)%\s*,\s*([-+]?\d+(?:\.\d+)?)%\s*,\s*([-+]?\d+(?:\.\d+)?)%\s*,\s*([-+]?\d+(?:\.\d+)?)\s*\)$/,_e=/^hsl\(\s*([-+]?\d+(?:\.\d+)?)\s*,\s*([-+]?\d+(?:\.\d+)?)%\s*,\s*([-+]?\d+(?:\.\d+)?)%\s*\)$/,me=/^hsla\(\s*([-+]?\d+(?:\.\d+)?)\s*,\s*([-+]?\d+(?:\.\d+)?)%\s*,\s*([-+]?\d+(?:\.\d+)?)%\s*,\s*([-+]?\d+(?:\.\d+)?)\s*\)$/,xe={aliceblue:15792383,antiquewhite:16444375,aqua:65535,aquamarine:8388564,azure:15794175,beige:16119260,bisque:16770244,black:0,blanchedalmond:16772045,blue:255,blueviolet:9055202,brown:10824234,burlywood:14596231,cadetblue:6266528,chartreuse:8388352,chocolate:13789470,coral:16744272,cornflowerblue:6591981,cornsilk:16775388,crimson:14423100,cyan:65535,darkblue:139,darkcyan:35723,darkgoldenrod:12092939,darkgray:11119017,darkgreen:25600,darkgrey:11119017,darkkhaki:12433259,darkmagenta:9109643,darkolivegreen:5597999,darkorange:16747520,darkorchid:10040012,darkred:9109504,darksalmon:15308410,darkseagreen:9419919,darkslateblue:4734347,darkslategray:3100495,darkslategrey:3100495,darkturquoise:52945,darkviolet:9699539,deeppink:16716947,deepskyblue:49151,dimgray:6908265,dimgrey:6908265,dodgerblue:2003199,firebrick:11674146,floralwhite:16775920,forestgreen:2263842,fuchsia:16711935,gainsboro:14474460,ghostwhite:16316671,gold:16766720,goldenrod:14329120,gray:8421504,green:32768,greenyellow:11403055,grey:8421504,honeydew:15794160,hotpink:16738740,indianred:13458524,indigo:4915330,ivory:16777200,khaki:15787660,lavender:15132410,lavenderblush:16773365,lawngreen:8190976,lemonchiffon:16775885,lightblue:11393254,lightcoral:15761536,lightcyan:14745599,lightgoldenrodyellow:16448210,lightgray:13882323,lightgreen:9498256,lightgrey:13882323,lightpink:16758465,lightsalmon:16752762,lightseagreen:2142890,lightskyblue:8900346,lightslategray:7833753,lightslategrey:7833753,lightsteelblue:11584734,lightyellow:16777184,lime:65280,limegreen:3329330,linen:16445670,magenta:16711935,maroon:8388608,mediumaquamarine:6737322,mediumblue:205,mediumorchid:12211667,mediumpurple:9662683,mediumseagreen:3978097,mediumslateblue:8087790,mediumspringgreen:64154,mediumturquoise:4772300,mediumvioletred:13047173,midnightblue:1644912,mintcream:16121850,mistyrose:16770273,moccasin:16770229,navajowhite:16768685,navy:128,oldlace:16643558,olive:8421376,olivedrab:7048739,orange:16753920,orangered:16729344,orchid:14315734,palegoldenrod:15657130,palegreen:10025880,paleturquoise:11529966,palevioletred:14381203,papayawhip:16773077,peachpuff:16767673,peru:13468991,pink:16761035,plum:14524637,powderblue:11591910,purple:8388736,rebeccapurple:6697881,red:16711680,rosybrown:12357519,royalblue:4286945,saddlebrown:9127187,salmon:16416882,sandybrown:16032864,seagreen:3050327,seashell:16774638,sienna:10506797,silver:12632256,skyblue:8900331,slateblue:6970061,slategray:7372944,slategrey:7372944,snow:16775930,springgreen:65407,steelblue:4620980,tan:13808780,teal:32896,thistle:14204888,tomato:16737095,turquoise:4251856,violet:15631086,wheat:16113331,white:16777215,whitesmoke:16119285,yellow:16776960,yellowgreen:10145074};function be(t){var n;return t=(t+"").trim().toLowerCase(),(n=he.exec(t))?new Ne((n=parseInt(n[1],16))>>8&15|n>>4&240,n>>4&15|240&n,(15&n)<<4|15&n,1):(n=de.exec(t))?we(parseInt(n[1],16)):(n=pe.exec(t))?new Ne(n[1],n[2],n[3],1):(n=ve.exec(t))?new Ne(255*n[1]/100,255*n[2]/100,255*n[3]/100,1):(n=ge.exec(t))?Me(n[1],n[2],n[3],n[4]):(n=ye.exec(t))?Me(255*n[1]/100,255*n[2]/100,255*n[3]/100,n[4]):(n=_e.exec(t))?Te(n[1],n[2]/100,n[3]/100,1):(n=me.exec(t))?Te(n[1],n[2]/100,n[3]/100,n[4]):xe.hasOwnProperty(t)?we(xe[t]):"transparent"===t?new Ne(NaN,NaN,NaN,0):null}function we(t){return new Ne(t>>16&255,t>>8&255,255&t,1)}function Me(t,n,e,r){return r<=0&&(t=n=e=NaN),new Ne(t,n,e,r)}function ke(t){return t instanceof le||(t=be(t)),t?new Ne((t=t.rgb()).r,t.g,t.b,t.opacity):new Ne}function Se(t,n,e,r){return 1===arguments.length?ke(t):new Ne(t,n,e,null==r?1:r)}function Ne(t,n,e,r){this.r=+t,this.g=+n,this.b=+e,this.opacity=+r}function Te(t,n,e,r){return r<=0?t=n=e=NaN:e<=0||e>=1?t=n=NaN:n<=0&&(t=NaN),new Ee(t,n,e,r)}function Ae(t,n,e,r){return 1===arguments.length?function(t){if(t instanceof Ee)return new Ee(t.h,t.s,t.l,t.opacity);if(t instanceof le||(t=be(t)),!t)return new Ee;if(t instanceof Ee)return t;var n=(t=t.rgb()).r/255,e=t.g/255,r=t.b/255,i=Math.min(n,e,r),o=Math.max(n,e,r),a=NaN,u=o-i,c=(o+i)/2;return u?(a=n===o?(e-r)/u+6*(e<r):e===o?(r-n)/u+2:(n-e)/u+4,u/=c<.5?o+i:2-o-i,a*=60):u=c>0&&c<1?0:a,new Ee(a,u,c,t.opacity)}(t):new Ee(t,n,e,null==r?1:r)}function Ee(t,n,e,r){this.h=+t,this.s=+n,this.l=+e,this.opacity=+r}function Ce(t,n,e){return 255*(t<60?n+(e-n)*t/60:t<180?e:t<240?n+(e-n)*(240-t)/60:n)}ce(le,be,{displayable:function(){return this.rgb().displayable()},toString:function(){return this.rgb()+""}}),ce(Ne,Se,se(le,{brighter:function(t){return t=null==t?fe:Math.pow(fe,t),new Ne(this.r*t,this.g*t,this.b*t,this.opacity)},darker:function(t){return t=null==t?.7:Math.pow(.7,t),new Ne(this.r*t,this.g*t,this.b*t,this.opacity)},rgb:function(){return this},displayable:function(){return 0<=this.r&&this.r<=255&&0<=this.g&&this.g<=255&&0<=this.b&&this.b<=255&&0<=this.opacity&&this.opacity<=1},toString:function(){var t=this.opacity;return(1===(t=isNaN(t)?1:Math.max(0,Math.min(1,t)))?"rgb(":"rgba(")+Math.max(0,Math.min(255,Math.round(this.r)||0))+", "+Math.max(0,Math.min(255,Math.round(this.g)||0))+", "+Math.max(0,Math.min(255,Math.round(this.b)||0))+(1===t?")":", "+t+")")}})),ce(Ee,Ae,se(le,{brighter:function(t){return t=null==t?fe:Math.pow(fe,t),new Ee(this.h,this.s,this.l*t,this.opacity)},darker:function(t){return t=null==t?.7:Math.pow(.7,t),new Ee(this.h,this.s,this.l*t,this.opacity)},rgb:function(){var t=this.h%360+360*(this.h<0),n=isNaN(t)||isNaN(this.s)?0:this.s,e=this.l,r=e+(e<.5?e:1-e)*n,i=2*e-r;return new Ne(Ce(t>=240?t-240:t+120,i,r),Ce(t,i,r),Ce(t<120?t+240:t-120,i,r),this.opacity)},displayable:function(){return(0<=this.s&&this.s<=1||isNaN(this.s))&&0<=this.l&&this.l<=1&&0<=this.opacity&&this.opacity<=1}}));var ze=Math.PI/180,Pe=180/Math.PI,Oe=.95047,qe=1,Le=1.08883,je=4/29,De=6/29,Re=3*De*De,Ue=De*De*De;function Ie(t){if(t instanceof Ye)return new Ye(t.l,t.a,t.b,t.opacity);if(t instanceof We){var n=t.h*ze;return new Ye(t.l,Math.cos(n)*t.c,Math.sin(n)*t.c,t.opacity)}t instanceof Ne||(t=ke(t));var e=$e(t.r),r=$e(t.g),i=$e(t.b),o=Be((.4124564*e+.3575761*r+.1804375*i)/Oe),a=Be((.2126729*e+.7151522*r+.072175*i)/qe),u=Be((.0193339*e+.119192*r+.9503041*i)/Le);return new Ye(116*a-16,500*(o-a),200*(a-u),t.opacity)}function Fe(t,n,e,r){return 1===arguments.length?Ie(t):new Ye(t,n,e,null==r?1:r)}function Ye(t,n,e,r){this.l=+t,this.a=+n,this.b=+e,this.opacity=+r}function Be(t){return t>Ue?Math.pow(t,1/3):t/Re+je}function He(t){return t>De?t*t*t:Re*(t-je)}function Xe(t){return 255*(t<=.0031308?12.92*t:1.055*Math.pow(t,1/2.4)-.055)}function $e(t){return(t/=255)<=.04045?t/12.92:Math.pow((t+.055)/1.055,2.4)}function Ve(t,n,e,r){return 1===arguments.length?function(t){if(t instanceof We)return new We(t.h,t.c,t.l,t.opacity);t instanceof Ye||(t=Ie(t));var n=Math.atan2(t.b,t.a)*Pe;return new We(n<0?n+360:n,Math.sqrt(t.a*t.a+t.b*t.b),t.l,t.opacity)}(t):new We(t,n,e,null==r?1:r)}function We(t,n,e,r){this.h=+t,this.c=+n,this.l=+e,this.opacity=+r}ce(Ye,Fe,se(le,{brighter:function(t){return new Ye(this.l+18*(null==t?1:t),this.a,this.b,this.opacity)},darker:function(t){return new Ye(this.l-18*(null==t?1:t),this.a,this.b,this.opacity)},rgb:function(){var t=(this.l+16)/116,n=isNaN(this.a)?t:t+this.a/500,e=isNaN(this.b)?t:t-this.b/200;return t=qe*He(t),n=Oe*He(n),e=Le*He(e),new Ne(Xe(3.2404542*n-1.5371385*t-.4985314*e),Xe(-.969266*n+1.8760108*t+.041556*e),Xe(.0556434*n-.2040259*t+1.0572252*e),this.opacity)}})),ce(We,Ve,se(le,{brighter:function(t){return new We(this.h,this.c,this.l+18*(null==t?1:t),this.opacity)},darker:function(t){return new We(this.h,this.c,this.l-18*(null==t?1:t),this.opacity)},rgb:function(){return Ie(this).rgb()}}));var Ze=-.14861,Ge=1.78277,Je=-.29227,Qe=-.90649,Ke=1.97294,tr=Ke*Qe,nr=Ke*Ge,er=Ge*Je-Qe*Ze;function rr(t,n,e,r){return 1===arguments.length?function(t){if(t instanceof ir)return new ir(t.h,t.s,t.l,t.opacity);t instanceof Ne||(t=ke(t));var n=t.r/255,e=t.g/255,r=t.b/255,i=(er*r+tr*n-nr*e)/(er+tr-nr),o=r-i,a=(Ke*(e-i)-Je*o)/Qe,u=Math.sqrt(a*a+o*o)/(Ke*i*(1-i)),c=u?Math.atan2(a,o)*Pe-120:NaN;return new ir(c<0?c+360:c,u,i,t.opacity)}(t):new ir(t,n,e,null==r?1:r)}function ir(t,n,e,r){this.h=+t,this.s=+n,this.l=+e,this.opacity=+r}function or(t,n,e,r,i){var o=t*t,a=o*t;return((1-3*t+3*o-a)*n+(4-6*o+3*a)*e+(1+3*t+3*o-3*a)*r+a*i)/6}function ar(t){var n=t.length-1;return function(e){var r=e<=0?e=0:e>=1?(e=1,n-1):Math.floor(e*n),i=t[r],o=t[r+1],a=r>0?t[r-1]:2*i-o,u=r<n-1?t[r+2]:2*o-i;return or((e-r/n)*n,a,i,o,u)}}function ur(t){var n=t.length;return function(e){var r=Math.floor(((e%=1)<0?++e:e)*n),i=t[(r+n-1)%n],o=t[r%n],a=t[(r+1)%n],u=t[(r+2)%n];return or((e-r/n)*n,i,o,a,u)}}function cr(t){return function(){return t}}function sr(t,n){return function(e){return t+e*n}}function lr(t,n){var e=n-t;return e?sr(t,e>180||e<-180?e-360*Math.round(e/360):e):cr(isNaN(t)?n:t)}function fr(t){return 1==(t=+t)?hr:function(n,e){return e-n?function(t,n,e){return t=Math.pow(t,e),n=Math.pow(n,e)-t,e=1/e,function(r){return Math.pow(t+r*n,e)}}(n,e,t):cr(isNaN(n)?e:n)}}function hr(t,n){var e=n-t;return e?sr(t,e):cr(isNaN(t)?n:t)}ce(ir,rr,se(le,{brighter:function(t){return t=null==t?fe:Math.pow(fe,t),new ir(this.h,this.s,this.l*t,this.opacity)},darker:function(t){return t=null==t?.7:Math.pow(.7,t),new ir(this.h,this.s,this.l*t,this.opacity)},rgb:function(){var t=isNaN(this.h)?0:(this.h+120)*ze,n=+this.l,e=isNaN(this.s)?0:this.s*n*(1-n),r=Math.cos(t),i=Math.sin(t);return new Ne(255*(n+e*(Ze*r+Ge*i)),255*(n+e*(Je*r+Qe*i)),255*(n+e*(Ke*r)),this.opacity)}}));var dr=function t(n){var e=fr(n);function r(t,n){var r=e((t=Se(t)).r,(n=Se(n)).r),i=e(t.g,n.g),o=e(t.b,n.b),a=e(t.opacity,n.opacity);return function(n){return t.r=r(n),t.g=i(n),t.b=o(n),t.opacity=a(n),t+""}}return r.gamma=t,r}(1);function pr(t){return function(n){var e,r,i=n.length,o=new Array(i),a=new Array(i),u=new Array(i);for(e=0;e<i;++e)r=Se(n[e]),o[e]=r.r||0,a[e]=r.g||0,u[e]=r.b||0;return o=t(o),a=t(a),u=t(u),r.opacity=1,function(t){return r.r=o(t),r.g=a(t),r.b=u(t),r+""}}}var vr=pr(ar),gr=pr(ur);function yr(t,n){var e,r=n?n.length:0,i=t?Math.min(r,t.length):0,o=new Array(r),a=new Array(r);for(e=0;e<i;++e)o[e]=kr(t[e],n[e]);for(;e<r;++e)a[e]=n[e];return function(t){for(e=0;e<i;++e)a[e]=o[e](t);return a}}function _r(t,n){var e=new Date;return n-=t=+t,function(r){return e.setTime(t+n*r),e}}function mr(t,n){return n-=t=+t,function(e){return t+n*e}}function xr(t,n){var e,r={},i={};for(e in null!==t&&"object"==typeof t||(t={}),null!==n&&"object"==typeof n||(n={}),n)e in t?r[e]=kr(t[e],n[e]):i[e]=n[e];return function(t){for(e in r)i[e]=r[e](t);return i}}var br=/[-+]?(?:\d+\.?\d*|\.?\d+)(?:[eE][-+]?\d+)?/g,wr=new RegExp(br.source,"g");function Mr(t,n){var e,r,i,o=br.lastIndex=wr.lastIndex=0,a=-1,u=[],c=[];for(t+="",n+="";(e=br.exec(t))&&(r=wr.exec(n));)(i=r.index)>o&&(i=n.slice(o,i),u[a]?u[a]+=i:u[++a]=i),(e=e[0])===(r=r[0])?u[a]?u[a]+=r:u[++a]=r:(u[++a]=null,c.push({i:a,x:mr(e,r)})),o=wr.lastIndex;return o<n.length&&(i=n.slice(o),u[a]?u[a]+=i:u[++a]=i),u.length<2?c[0]?function(t){return function(n){return t(n)+""}}(c[0].x):function(t){return function(){return t}}(n):(n=c.length,function(t){for(var e,r=0;r<n;++r)u[(e=c[r]).i]=e.x(t);return u.join("")})}function kr(t,n){var e,r=typeof n;return null==n||"boolean"===r?cr(n):("number"===r?mr:"string"===r?(e=be(n))?(n=e,dr):Mr:n instanceof be?dr:n instanceof Date?_r:Array.isArray(n)?yr:isNaN(n)?xr:mr)(t,n)}function Sr(t,n){return n-=t=+t,function(e){return Math.round(t+n*e)}}var Nr,Tr,Ar,Er,Cr=180/Math.PI,zr={translateX:0,translateY:0,rotate:0,skewX:0,scaleX:1,scaleY:1};function Pr(t,n,e,r,i,o){var a,u,c;return(a=Math.sqrt(t*t+n*n))&&(t/=a,n/=a),(c=t*e+n*r)&&(e-=t*c,r-=n*c),(u=Math.sqrt(e*e+r*r))&&(e/=u,r/=u,c/=u),t*r<n*e&&(t=-t,n=-n,c=-c,a=-a),{translateX:i,translateY:o,rotate:Math.atan2(n,t)*Cr,skewX:Math.atan(c)*Cr,scaleX:a,scaleY:u}}function Or(t,n,e,r){function i(t){return t.length?t.pop()+" ":""}return function(o,a){var u=[],c=[];return o=t(o),a=t(a),function(t,r,i,o,a,u){if(t!==i||r!==o){var c=a.push("translate(",null,n,null,e);u.push({i:c-4,x:mr(t,i)},{i:c-2,x:mr(r,o)})}else(i||o)&&a.push("translate("+i+n+o+e)}(o.translateX,o.translateY,a.translateX,a.translateY,u,c),function(t,n,e,o){t!==n?(t-n>180?n+=360:n-t>180&&(t+=360),o.push({i:e.push(i(e)+"rotate(",null,r)-2,x:mr(t,n)})):n&&e.push(i(e)+"rotate("+n+r)}(o.rotate,a.rotate,u,c),function(t,n,e,o){t!==n?o.push({i:e.push(i(e)+"skewX(",null,r)-2,x:mr(t,n)}):n&&e.push(i(e)+"skewX("+n+r)}(o.skewX,a.skewX,u,c),function(t,n,e,r,o,a){if(t!==e||n!==r){var u=o.push(i(o)+"scale(",null,",",null,")");a.push({i:u-4,x:mr(t,e)},{i:u-2,x:mr(n,r)})}else 1===e&&1===r||o.push(i(o)+"scale("+e+","+r+")")}(o.scaleX,o.scaleY,a.scaleX,a.scaleY,u,c),o=a=null,function(t){for(var n,e=-1,r=c.length;++e<r;)u[(n=c[e]).i]=n.x(t);return u.join("")}}}var qr=Or(function(t){return"none"===t?zr:(Nr||(Nr=document.createElement("DIV"),Tr=document.documentElement,Ar=document.defaultView),Nr.style.transform=t,t=Ar.getComputedStyle(Tr.appendChild(Nr),null).getPropertyValue("transform"),Tr.removeChild(Nr),Pr(+(t=t.slice(7,-1).split(","))[0],+t[1],+t[2],+t[3],+t[4],+t[5]))},"px, ","px)","deg)"),Lr=Or(function(t){return null==t?zr:(Er||(Er=document.createElementNS("http://www.w3.org/2000/svg","g")),Er.setAttribute("transform",t),(t=Er.transform.baseVal.consolidate())?Pr((t=t.matrix).a,t.b,t.c,t.d,t.e,t.f):zr)},", ",")",")"),jr=Math.SQRT2,Dr=2,Rr=4,Ur=1e-12;function Ir(t){return((t=Math.exp(t))+1/t)/2}function Fr(t,n){var e,r,i=t[0],o=t[1],a=t[2],u=n[0],c=n[1],s=n[2],l=u-i,f=c-o,h=l*l+f*f;if(h<Ur)r=Math.log(s/a)/jr,e=function(t){return[i+t*l,o+t*f,a*Math.exp(jr*t*r)]};else{var d=Math.sqrt(h),p=(s*s-a*a+Rr*h)/(2*a*Dr*d),v=(s*s-a*a-Rr*h)/(2*s*Dr*d),g=Math.log(Math.sqrt(p*p+1)-p),y=Math.log(Math.sqrt(v*v+1)-v);r=(y-g)/jr,e=function(t){var n,e=t*r,u=Ir(g),c=a/(Dr*d)*(u*(n=jr*e+g,((n=Math.exp(2*n))-1)/(n+1))-function(t){return((t=Math.exp(t))-1/t)/2}(g));return[i+c*l,o+c*f,a*u/Ir(jr*e+g)]}}return e.duration=1e3*r,e}function Yr(t){return function(n,e){var r=t((n=Ae(n)).h,(e=Ae(e)).h),i=hr(n.s,e.s),o=hr(n.l,e.l),a=hr(n.opacity,e.opacity);return function(t){return n.h=r(t),n.s=i(t),n.l=o(t),n.opacity=a(t),n+""}}}var Br=Yr(lr),Hr=Yr(hr);function Xr(t){return function(n,e){var r=t((n=Ve(n)).h,(e=Ve(e)).h),i=hr(n.c,e.c),o=hr(n.l,e.l),a=hr(n.opacity,e.opacity);return function(t){return n.h=r(t),n.c=i(t),n.l=o(t),n.opacity=a(t),n+""}}}var $r=Xr(lr),Vr=Xr(hr);function Wr(t){return function n(e){function r(n,r){var i=t((n=rr(n)).h,(r=rr(r)).h),o=hr(n.s,r.s),a=hr(n.l,r.l),u=hr(n.opacity,r.opacity);return function(t){return n.h=i(t),n.s=o(t),n.l=a(Math.pow(t,e)),n.opacity=u(t),n+""}}return e=+e,r.gamma=n,r}(1)}var Zr=Wr(lr),Gr=Wr(hr),Jr={value:function(){}};function Qr(){for(var t,n=0,e=arguments.length,r={};n<e;++n){if(!(t=arguments[n]+"")||t in r)throw new Error("illegal type: "+t);r[t]=[]}return new Kr(r)}function Kr(t){this._=t}function ti(t,n){for(var e,r=0,i=t.length;r<i;++r)if((e=t[r]).name===n)return e.value}function ni(t,n,e){for(var r=0,i=t.length;r<i;++r)if(t[r].name===n){t[r]=Jr,t=t.slice(0,r).concat(t.slice(r+1));break}return null!=e&&t.push({name:n,value:e}),t}function ei(t){return new Function("d","return {"+t.map(function(t,n){return JSON.stringify(t)+": d["+n+"]"}).join(",")+"}")}function ri(t){var n=new RegExp('["'+t+"\n]"),e=t.charCodeAt(0);function r(t,n){var r,i,o={},a={},u=[],c=t.length,s=0,l=0;function f(){if(s>=c)return a;if(i)return i=!1,o;var n,r=s;if(34===t.charCodeAt(r)){for(var u=r;u++<c;)if(34===t.charCodeAt(u)){if(34!==t.charCodeAt(u+1))break;++u}return s=u+2,13===(n=t.charCodeAt(u+1))?(i=!0,10===t.charCodeAt(u+2)&&++s):10===n&&(i=!0),t.slice(r+1,u).replace(/""/g,'"')}for(;s<c;){var l=1;if(10===(n=t.charCodeAt(s++)))i=!0;else if(13===n)i=!0,10===t.charCodeAt(s)&&(++s,++l);else if(n!==e)continue;return t.slice(r,s-l)}return t.slice(r)}for(;(r=f())!==a;){for(var h=[];r!==o&&r!==a;)h.push(r),r=f();n&&null==(h=n(h,l++))||u.push(h)}return u}function i(n){return n.map(o).join(t)}function o(t){return null==t?"":n.test(t+="")?'"'+t.replace(/\"/g,'""')+'"':t}return{parse:function(t,n){var e,i,o=r(t,function(t,r){if(e)return e(t,r-1);i=t,e=n?function(t,n){var e=ei(t);return function(r,i){return n(e(r),i,t)}}(t,n):ei(t)});return o.columns=i,o},parseRows:r,format:function(n,e){return null==e&&(e=function(t){var n=Object.create(null),e=[];return t.forEach(function(t){for(var r in t)r in n||e.push(n[r]=r)}),e}(n)),[e.map(o).join(t)].concat(n.map(function(n){return e.map(function(t){return o(n[t])}).join(t)})).join("\n")},formatRows:function(t){return t.map(i).join("\n")}}}Kr.prototype=Qr.prototype={constructor:Kr,on:function(t,n){var e,r,i=this._,o=(r=i,(t+"").trim().split(/^|\s+/).map(function(t){var n="",e=t.indexOf(".");if(e>=0&&(n=t.slice(e+1),t=t.slice(0,e)),t&&!r.hasOwnProperty(t))throw new Error("unknown type: "+t);return{type:t,name:n}})),a=-1,u=o.length;if(!(arguments.length<2)){if(null!=n&&"function"!=typeof n)throw new Error("invalid callback: "+n);for(;++a<u;)if(e=(t=o[a]).type)i[e]=ni(i[e],t.name,n);else if(null==n)for(e in i)i[e]=ni(i[e],t.name,null);return this}for(;++a<u;)if((e=(t=o[a]).type)&&(e=ti(i[e],t.name)))return e},copy:function(){var t={},n=this._;for(var e in n)t[e]=n[e].slice();return new Kr(t)},call:function(t,n){if((e=arguments.length-2)>0)for(var e,r,i=new Array(e),o=0;o<e;++o)i[o]=arguments[o+2];if(!this._.hasOwnProperty(t))throw new Error("unknown type: "+t);for(r=this._[t],o=0,e=r.length;o<e;++o)r[o].value.apply(n,i)},apply:function(t,n,e){if(!this._.hasOwnProperty(t))throw new Error("unknown type: "+t);for(var r=this._[t],i=0,o=r.length;i<o;++i)r[i].value.apply(n,e)}};var ii=ri(","),oi=ii.parse,ai=ii.parseRows,ui=ii.format,ci=ii.formatRows,si=ri("\t"),li=si.parse,fi=si.parseRows,hi=si.format,di=si.formatRows;function pi(t,n){var e,r,i,o,a=Qr("beforesend","progress","load","error"),u=A(),c=new XMLHttpRequest,s=null,l=null,f=0;function h(t){var n,r=c.status;if(!r&&function(t){var n=t.responseType;return n&&"text"!==n?t.response:t.responseText}(c)||r>=200&&r<300||304===r){if(i)try{n=i.call(e,c)}catch(t){return void a.call("error",e,t)}else n=c;a.call("load",e,n)}else a.call("error",e,t)}if("undefined"==typeof XDomainRequest||"withCredentials"in c||!/^(http(s)?:)?\/\//.test(t)||(c=new XDomainRequest),"onload"in c?c.onload=c.onerror=c.ontimeout=h:c.onreadystatechange=function(t){c.readyState>3&&h(t)},c.onprogress=function(t){a.call("progress",e,t)},e={header:function(t,n){return t=(t+"").toLowerCase(),arguments.length<2?u.get(t):(null==n?u.remove(t):u.set(t,n+""),e)},mimeType:function(t){return arguments.length?(r=null==t?null:t+"",e):r},responseType:function(t){return arguments.length?(o=t,e):o},timeout:function(t){return arguments.length?(f=+t,e):f},user:function(t){return arguments.length<1?s:(s=null==t?null:t+"",e)},password:function(t){return arguments.length<1?l:(l=null==t?null:t+"",e)},response:function(t){return i=t,e},get:function(t,n){return e.send("GET",t,n)},post:function(t,n){return e.send("POST",t,n)},send:function(n,i,h){return c.open(n,t,!0,s,l),null==r||u.has("accept")||u.set("accept",r+",*/*"),c.setRequestHeader&&u.each(function(t,n){c.setRequestHeader(n,t)}),null!=r&&c.overrideMimeType&&c.overrideMimeType(r),null!=o&&(c.responseType=o),f>0&&(c.timeout=f),null==h&&"function"==typeof i&&(h=i,i=null),null!=h&&1===h.length&&(h=function(t){return function(n,e){t(null==n?e:null)}}(h)),null!=h&&e.on("error",h).on("load",function(t){h(null,t)}),a.call("beforesend",e,c),c.send(null==i?null:i),e},abort:function(){return c.abort(),e},on:function(){var t=a.on.apply(a,arguments);return t===a?e:t}},null!=n){if("function"!=typeof n)throw new Error("invalid callback: "+n);return e.get(n)}return e}function vi(t,n){return function(e,r){var i=pi(e).mimeType(t).response(n);if(null!=r){if("function"!=typeof r)throw new Error("invalid callback: "+r);return i.get(r)}return i}}var gi=vi("text/html",function(t){return document.createRange().createContextualFragment(t.responseText)}),yi=vi("application/json",function(t){return JSON.parse(t.responseText)}),_i=vi("text/plain",function(t){return t.responseText}),mi=vi("application/xml",function(t){var n=t.responseXML;if(!n)throw new Error("parse error");return n});function xi(t,n){return function(e,r,i){arguments.length<3&&(i=r,r=null);var o=pi(e).mimeType(t);return o.row=function(t){return arguments.length?o.response(function(t,n){return function(e){return t(e.responseText,n)}}(n,r=t)):r},o.row(r),i?o.get(i):o}}var bi,wi,Mi=xi("text/csv",oi),ki=xi("text/tab-separated-values",li),Si=0,Ni=0,Ti=0,Ai=1e3,Ei=0,Ci=0,zi=0,Pi="object"==typeof performance&&performance.now?performance:Date,Oi="function"==typeof requestAnimationFrame?Pi===Date?function(t){requestAnimationFrame(function(){t(Pi.now())})}:requestAnimationFrame:function(t){setTimeout(t,17)};function qi(){return Ci||(Oi(Li),Ci=Pi.now()+zi)}function Li(){Ci=0}function ji(){this._call=this._time=this._next=null}function Di(t,n,e){var r=new ji;return r.restart(t,n,e),r}function Ri(){qi(),++Si;for(var t,n=bi;n;)(t=Ci-n._time)>=0&&n._call.call(null,t),n=n._next;--Si}function Ui(t){Ci=(Ei=t||Pi.now())+zi,Si=Ni=0;try{Ri()}finally{Si=0,function(){for(var t,n,e=bi,r=1/0;e;)e._call?(r>e._time&&(r=e._time),t=e,e=e._next):(n=e._next,e._next=null,e=t?t._next=n:bi=n);wi=t,Fi(r)}(),Ci=0}}function Ii(){var t=Pi.now(),n=t-Ei;n>Ai&&(zi-=n,Ei=t)}function Fi(t){if(!Si){Ni&&(Ni=clearTimeout(Ni));var n=t-Ci;n>24?(t<1/0&&(Ni=setTimeout(Ui,n)),Ti&&(Ti=clearInterval(Ti))):(Ti||(Ti=setInterval(Ii,Ai)),Si=1,Oi(Ui))}}function Yi(t,n,e){var r=new ji;return n=null==n?0:+n,r.restart(function(e){r.stop(),t(e+n)},n,e),r}ji.prototype=Di.prototype={constructor:ji,restart:function(t,n,e){if("function"!=typeof t)throw new TypeError("callback is not a function");e=(null==e?qi():+e)+(null==n?0:+n),this._next||wi===this||(wi?wi._next=this:bi=this,wi=this),this._call=t,this._time=e,Fi()},stop:function(){this._call&&(this._call=null,this._time=1/0,Fi())}};var Bi=new Date,Hi=new Date;function Xi(t,n,e,r){function i(n){return t(n=new Date(+n)),n}return i.floor=i,i.ceil=function(e){return t(e=new Date(e-1)),n(e,1),t(e),e},i.round=function(t){var n=i(t),e=i.ceil(t);return t-n<e-t?n:e},i.offset=function(t,e){return n(t=new Date(+t),null==e?1:Math.floor(e)),t},i.range=function(e,r,o){var a=[];if(e=i.ceil(e),o=null==o?1:Math.floor(o),!(e<r&&o>0))return a;do{a.push(new Date(+e))}while(n(e,o),t(e),e<r);return a},i.filter=function(e){return Xi(function(n){for(;t(n),!e(n);)n.setTime(n-1)},function(t,r){for(;--r>=0;)for(;n(t,1),!e(t););})},e&&(i.count=function(n,r){return Bi.setTime(+n),Hi.setTime(+r),t(Bi),t(Hi),Math.floor(e(Bi,Hi))},i.every=function(t){return t=Math.floor(t),isFinite(t)&&t>0?t>1?i.filter(r?function(n){return r(n)%t==0}:function(n){return i.count(0,n)%t==0}):i:null}),i}var $i=Xi(function(){},function(t,n){t.setTime(+t+n)},function(t,n){return n-t});$i.every=function(t){return t=Math.floor(t),isFinite(t)&&t>0?t>1?Xi(function(n){n.setTime(Math.floor(n/t)*t)},function(n,e){n.setTime(+n+e*t)},function(n,e){return(e-n)/t}):$i:null};var Vi=$i.range,Wi=6e4,Zi=6048e5,Gi=Xi(function(t){t.setTime(1e3*Math.floor(t/1e3))},function(t,n){t.setTime(+t+1e3*n)},function(t,n){return(n-t)/1e3},function(t){return t.getUTCSeconds()}),Ji=Gi.range,Qi=Xi(function(t){t.setTime(Math.floor(t/Wi)*Wi)},function(t,n){t.setTime(+t+n*Wi)},function(t,n){return(n-t)/Wi},function(t){return t.getMinutes()}),Ki=Qi.range,to=Xi(function(t){var n=t.getTimezoneOffset()*Wi%36e5;n<0&&(n+=36e5),t.setTime(36e5*Math.floor((+t-n)/36e5)+n)},function(t,n){t.setTime(+t+36e5*n)},function(t,n){return(n-t)/36e5},function(t){return t.getHours()}),no=to.range,eo=Xi(function(t){t.setHours(0,0,0,0)},function(t,n){t.setDate(t.getDate()+n)},function(t,n){return(n-t-(n.getTimezoneOffset()-t.getTimezoneOffset())*Wi)/864e5},function(t){return t.getDate()-1}),ro=eo.range;function io(t){return Xi(function(n){n.setDate(n.getDate()-(n.getDay()+7-t)%7),n.setHours(0,0,0,0)},function(t,n){t.setDate(t.getDate()+7*n)},function(t,n){return(n-t-(n.getTimezoneOffset()-t.getTimezoneOffset())*Wi)/Zi})}var oo=io(0),ao=io(1),uo=io(2),co=io(3),so=io(4),lo=io(5),fo=io(6),ho=oo.range,po=ao.range,vo=uo.range,go=co.range,yo=so.range,_o=lo.range,mo=fo.range,xo=Xi(function(t){t.setDate(1),t.setHours(0,0,0,0)},function(t,n){t.setMonth(t.getMonth()+n)},function(t,n){return n.getMonth()-t.getMonth()+12*(n.getFullYear()-t.getFullYear())},function(t){return t.getMonth()}),bo=xo.range,wo=Xi(function(t){t.setMonth(0,1),t.setHours(0,0,0,0)},function(t,n){t.setFullYear(t.getFullYear()+n)},function(t,n){return n.getFullYear()-t.getFullYear()},function(t){return t.getFullYear()});wo.every=function(t){return isFinite(t=Math.floor(t))&&t>0?Xi(function(n){n.setFullYear(Math.floor(n.getFullYear()/t)*t),n.setMonth(0,1),n.setHours(0,0,0,0)},function(n,e){n.setFullYear(n.getFullYear()+e*t)}):null};var Mo=wo.range,ko=Xi(function(t){t.setUTCSeconds(0,0)},function(t,n){t.setTime(+t+n*Wi)},function(t,n){return(n-t)/Wi},function(t){return t.getUTCMinutes()}),So=ko.range,No=Xi(function(t){t.setUTCMinutes(0,0,0)},function(t,n){t.setTime(+t+36e5*n)},function(t,n){return(n-t)/36e5},function(t){return t.getUTCHours()}),To=No.range,Ao=Xi(function(t){t.setUTCHours(0,0,0,0)},function(t,n){t.setUTCDate(t.getUTCDate()+n)},function(t,n){return(n-t)/864e5},function(t){return t.getUTCDate()-1}),Eo=Ao.range;function Co(t){return Xi(function(n){n.setUTCDate(n.getUTCDate()-(n.getUTCDay()+7-t)%7),n.setUTCHours(0,0,0,0)},function(t,n){t.setUTCDate(t.getUTCDate()+7*n)},function(t,n){return(n-t)/Zi})}var zo=Co(0),Po=Co(1),Oo=Co(2),qo=Co(3),Lo=Co(4),jo=Co(5),Do=Co(6),Ro=zo.range,Uo=Po.range,Io=Oo.range,Fo=qo.range,Yo=Lo.range,Bo=jo.range,Ho=Do.range,Xo=Xi(function(t){t.setUTCDate(1),t.setUTCHours(0,0,0,0)},function(t,n){t.setUTCMonth(t.getUTCMonth()+n)},function(t,n){return n.getUTCMonth()-t.getUTCMonth()+12*(n.getUTCFullYear()-t.getUTCFullYear())},function(t){return t.getUTCMonth()}),$o=Xo.range,Vo=Xi(function(t){t.setUTCMonth(0,1),t.setUTCHours(0,0,0,0)},function(t,n){t.setUTCFullYear(t.getUTCFullYear()+n)},function(t,n){return n.getUTCFullYear()-t.getUTCFullYear()},function(t){return t.getUTCFullYear()});Vo.every=function(t){return isFinite(t=Math.floor(t))&&t>0?Xi(function(n){n.setUTCFullYear(Math.floor(n.getUTCFullYear()/t)*t),n.setUTCMonth(0,1),n.setUTCHours(0,0,0,0)},function(n,e){n.setUTCFullYear(n.getUTCFullYear()+e*t)}):null};var Wo,Zo=Vo.range;function Go(t,n){if((e=(t=n?t.toExponential(n-1):t.toExponential()).indexOf("e"))<0)return null;var e,r=t.slice(0,e);return[r.length>1?r[0]+r.slice(2):r,+t.slice(e+1)]}function Jo(t){return(t=Go(Math.abs(t)))?t[1]:NaN}function Qo(t,n){var e=Go(t,n);if(!e)return t+"";var r=e[0],i=e[1];return i<0?"0."+new Array(-i).join("0")+r:r.length>i+1?r.slice(0,i+1)+"."+r.slice(i+1):r+new Array(i-r.length+2).join("0")}var Ko={"":function(t,n){t:for(var e,r=(t=t.toPrecision(n)).length,i=1,o=-1;i<r;++i)switch(t[i]){case".":o=e=i;break;case"0":0===o&&(o=i),e=i;break;case"e":break t;default:o>0&&(o=0)}return o>0?t.slice(0,o)+t.slice(e+1):t},"%":function(t,n){return(100*t).toFixed(n)},b:function(t){return Math.round(t).toString(2)},c:function(t){return t+""},d:function(t){return Math.round(t).toString(10)},e:function(t,n){return t.toExponential(n)},f:function(t,n){return t.toFixed(n)},g:function(t,n){return t.toPrecision(n)},o:function(t){return Math.round(t).toString(8)},p:function(t,n){return Qo(100*t,n)},r:Qo,s:function(t,n){var e=Go(t,n);if(!e)return t+"";var r=e[0],i=e[1],o=i-(Wo=3*Math.max(-8,Math.min(8,Math.floor(i/3))))+1,a=r.length;return o===a?r:o>a?r+new Array(o-a+1).join("0"):o>0?r.slice(0,o)+"."+r.slice(o):"0."+new Array(1-o).join("0")+Go(t,Math.max(0,n+o-1))[0]},X:function(t){return Math.round(t).toString(16).toUpperCase()},x:function(t){return Math.round(t).toString(16)}},ta=/^(?:(.)?([<>=^]))?([+\-\( ])?([$#])?(0)?(\d+)?(,)?(\.\d+)?([a-z%])?$/i;function na(t){return new ea(t)}function ea(t){if(!(n=ta.exec(t)))throw new Error("invalid format: "+t);var n,e=n[1]||" ",r=n[2]||">",i=n[3]||"-",o=n[4]||"",a=!!n[5],u=n[6]&&+n[6],c=!!n[7],s=n[8]&&+n[8].slice(1),l=n[9]||"";"n"===l?(c=!0,l="g"):Ko[l]||(l=""),(a||"0"===e&&"="===r)&&(a=!0,e="0",r="="),this.fill=e,this.align=r,this.sign=i,this.symbol=o,this.zero=a,this.width=u,this.comma=c,this.precision=s,this.type=l}ea.prototype.toString=function(){return this.fill+this.align+this.sign+this.symbol+(this.zero?"0":"")+(null==this.width?"":Math.max(1,0|this.width))+(this.comma?",":"")+(null==this.precision?"":"."+Math.max(0,0|this.precision))+this.type};var ra,ia=["y","z","a","f","p","n","µ","m","","k","M","G","T","P","E","Z","Y"];function oa(t){return t}function aa(t){var n,e,r=t.grouping&&t.thousands?(n=t.grouping,e=t.thousands,function(t,r){for(var i=t.length,o=[],a=0,u=n[0],c=0;i>0&&u>0&&(c+u+1>r&&(u=Math.max(1,r-c)),o.push(t.substring(i-=u,i+u)),!((c+=u+1)>r));)u=n[a=(a+1)%n.length];return o.reverse().join(e)}):oa,i=t.currency,o=t.decimal;function a(t){var n=(t=na(t)).fill,e=t.align,a=t.sign,u=t.symbol,c=t.zero,s=t.width,l=t.comma,f=t.precision,h=t.type,d="$"===u?i[0]:"#"===u&&/[boxX]/.test(h)?"0"+h.toLowerCase():"",p="$"===u?i[1]:/[%p]/.test(h)?"%":"",v=Ko[h],g=!h||/[defgprs%]/.test(h);function y(t){var i,u,y,_=d,m=p;if("c"===h)m=v(t)+m,t="";else{var x=((t=+t)<0||1/t<0)&&(t*=-1,!0);if(t=v(t,f),x)for(i=-1,u=t.length,x=!1;++i<u;)if(48<(y=t.charCodeAt(i))&&y<58||"x"===h&&96<y&&y<103||"X"===h&&64<y&&y<71){x=!0;break}if(_=(x?"("===a?a:"-":"-"===a||"("===a?"":a)+_,m=m+("s"===h?ia[8+Wo/3]:"")+(x&&"("===a?")":""),g)for(i=-1,u=t.length;++i<u;)if(48>(y=t.charCodeAt(i))||y>57){m=(46===y?o+t.slice(i+1):t.slice(i))+m,t=t.slice(0,i);break}}l&&!c&&(t=r(t,1/0));var b=_.length+t.length+m.length,w=b<s?new Array(s-b+1).join(n):"";switch(l&&c&&(t=r(w+t,w.length?s-m.length:1/0),w=""),e){case"<":return _+t+m+w;case"=":return _+w+t+m;case"^":return w.slice(0,b=w.length>>1)+_+t+m+w.slice(b)}return w+_+t+m}return f=null==f?h?6:12:/[gprs]/.test(h)?Math.max(1,Math.min(21,f)):Math.max(0,Math.min(20,f)),y.toString=function(){return t+""},y}return{format:a,formatPrefix:function(t,n){var e=a(((t=na(t)).type="f",t)),r=3*Math.max(-8,Math.min(8,Math.floor(Jo(n)/3))),i=Math.pow(10,-r),o=ia[8+r/3];return function(t){return e(i*t)+o}}}}function ua(n){return ra=aa(n),t.format=ra.format,t.formatPrefix=ra.formatPrefix,ra}function ca(t){return Math.max(0,-Jo(Math.abs(t)))}function sa(t,n){return Math.max(0,3*Math.max(-8,Math.min(8,Math.floor(Jo(n)/3)))-Jo(Math.abs(t)))}function la(t,n){return t=Math.abs(t),n=Math.abs(n)-t,Math.max(0,Jo(n)-Jo(t))+1}function fa(t){if(0<=t.y&&t.y<100){var n=new Date(-1,t.m,t.d,t.H,t.M,t.S,t.L);return n.setFullYear(t.y),n}return new Date(t.y,t.m,t.d,t.H,t.M,t.S,t.L)}function ha(t){if(0<=t.y&&t.y<100){var n=new Date(Date.UTC(-1,t.m,t.d,t.H,t.M,t.S,t.L));return n.setUTCFullYear(t.y),n}return new Date(Date.UTC(t.y,t.m,t.d,t.H,t.M,t.S,t.L))}function da(t){return{y:t,m:0,d:1,H:0,M:0,S:0,L:0}}function pa(t){var n=t.dateTime,e=t.date,r=t.time,i=t.periods,o=t.days,a=t.shortDays,u=t.months,c=t.shortMonths,s=wa(i),l=Ma(i),f=wa(o),h=Ma(o),d=wa(a),p=Ma(a),v=wa(u),g=Ma(u),y=wa(c),_=Ma(c),m={a:function(t){return a[t.getDay()]},A:function(t){return o[t.getDay()]},b:function(t){return c[t.getMonth()]},B:function(t){return u[t.getMonth()]},c:null,d:Ra,e:Ra,H:Ua,I:Ia,j:Fa,L:Ya,m:Ba,M:Ha,p:function(t){return i[+(t.getHours()>=12)]},S:Xa,U:$a,w:Va,W:Wa,x:null,X:null,y:Za,Y:Ga,Z:Ja,"%":hu},x={a:function(t){return a[t.getUTCDay()]},A:function(t){return o[t.getUTCDay()]},b:function(t){return c[t.getUTCMonth()]},B:function(t){return u[t.getUTCMonth()]},c:null,d:Qa,e:Qa,H:Ka,I:tu,j:nu,L:eu,m:ru,M:iu,p:function(t){return i[+(t.getUTCHours()>=12)]},S:ou,U:au,w:uu,W:cu,x:null,X:null,y:su,Y:lu,Z:fu,"%":hu},b={a:function(t,n,e){var r=d.exec(n.slice(e));return r?(t.w=p[r[0].toLowerCase()],e+r[0].length):-1},A:function(t,n,e){var r=f.exec(n.slice(e));return r?(t.w=h[r[0].toLowerCase()],e+r[0].length):-1},b:function(t,n,e){var r=y.exec(n.slice(e));return r?(t.m=_[r[0].toLowerCase()],e+r[0].length):-1},B:function(t,n,e){var r=v.exec(n.slice(e));return r?(t.m=g[r[0].toLowerCase()],e+r[0].length):-1},c:function(t,e,r){return k(t,n,e,r)},d:za,e:za,H:Oa,I:Oa,j:Pa,L:ja,m:Ca,M:qa,p:function(t,n,e){var r=s.exec(n.slice(e));return r?(t.p=l[r[0].toLowerCase()],e+r[0].length):-1},S:La,U:Sa,w:ka,W:Na,x:function(t,n,r){return k(t,e,n,r)},X:function(t,n,e){return k(t,r,n,e)},y:Aa,Y:Ta,Z:Ea,"%":Da};function w(t,n){return function(e){var r,i,o,a=[],u=-1,c=0,s=t.length;for(e instanceof Date||(e=new Date(+e));++u<s;)37===t.charCodeAt(u)&&(a.push(t.slice(c,u)),null!=(i=ga[r=t.charAt(++u)])?r=t.charAt(++u):i="e"===r?" ":"0",(o=n[r])&&(r=o(e,i)),a.push(r),c=u+1);return a.push(t.slice(c,u)),a.join("")}}function M(t,n){return function(e){var r=da(1900),i=k(r,t,e+="",0);if(i!=e.length)return null;if("p"in r&&(r.H=r.H%12+12*r.p),"W"in r||"U"in r){"w"in r||(r.w="W"in r?1:0);var o="Z"in r?ha(da(r.y)).getUTCDay():n(da(r.y)).getDay();r.m=0,r.d="W"in r?(r.w+6)%7+7*r.W-(o+5)%7:r.w+7*r.U-(o+6)%7}return"Z"in r?(r.H+=r.Z/100|0,r.M+=r.Z%100,ha(r)):n(r)}}function k(t,n,e,r){for(var i,o,a=0,u=n.length,c=e.length;a<u;){if(r>=c)return-1;if(37===(i=n.charCodeAt(a++))){if(i=n.charAt(a++),!(o=b[i in ga?n.charAt(a++):i])||(r=o(t,e,r))<0)return-1}else if(i!=e.charCodeAt(r++))return-1}return r}return m.x=w(e,m),m.X=w(r,m),m.c=w(n,m),x.x=w(e,x),x.X=w(r,x),x.c=w(n,x),{format:function(t){var n=w(t+="",m);return n.toString=function(){return t},n},parse:function(t){var n=M(t+="",fa);return n.toString=function(){return t},n},utcFormat:function(t){var n=w(t+="",x);return n.toString=function(){return t},n},utcParse:function(t){var n=M(t,ha);return n.toString=function(){return t},n}}}ua({decimal:".",thousands:",",grouping:[3],currency:["$",""]});var va,ga={"-":"",_:" ",0:"0"},ya=/^\s*\d+/,_a=/^%/,ma=/[\\\^\$\*\+\?\|\[\]\(\)\.\{\}]/g;function xa(t,n,e){var r=t<0?"-":"",i=(r?-t:t)+"",o=i.length;return r+(o<e?new Array(e-o+1).join(n)+i:i)}function ba(t){return t.replace(ma,"\\$&")}function wa(t){return new RegExp("^(?:"+t.map(ba).join("|")+")","i")}function Ma(t){for(var n={},e=-1,r=t.length;++e<r;)n[t[e].toLowerCase()]=e;return n}function ka(t,n,e){var r=ya.exec(n.slice(e,e+1));return r?(t.w=+r[0],e+r[0].length):-1}function Sa(t,n,e){var r=ya.exec(n.slice(e));return r?(t.U=+r[0],e+r[0].length):-1}function Na(t,n,e){var r=ya.exec(n.slice(e));return r?(t.W=+r[0],e+r[0].length):-1}function Ta(t,n,e){var r=ya.exec(n.slice(e,e+4));return r?(t.y=+r[0],e+r[0].length):-1}function Aa(t,n,e){var r=ya.exec(n.slice(e,e+2));return r?(t.y=+r[0]+(+r[0]>68?1900:2e3),e+r[0].length):-1}function Ea(t,n,e){var r=/^(Z)|([+-]\d\d)(?:\:?(\d\d))?/.exec(n.slice(e,e+6));return r?(t.Z=r[1]?0:-(r[2]+(r[3]||"00")),e+r[0].length):-1}function Ca(t,n,e){var r=ya.exec(n.slice(e,e+2));return r?(t.m=r[0]-1,e+r[0].length):-1}function za(t,n,e){var r=ya.exec(n.slice(e,e+2));return r?(t.d=+r[0],e+r[0].length):-1}function Pa(t,n,e){var r=ya.exec(n.slice(e,e+3));return r?(t.m=0,t.d=+r[0],e+r[0].length):-1}function Oa(t,n,e){var r=ya.exec(n.slice(e,e+2));return r?(t.H=+r[0],e+r[0].length):-1}function qa(t,n,e){var r=ya.exec(n.slice(e,e+2));return r?(t.M=+r[0],e+r[0].length):-1}function La(t,n,e){var r=ya.exec(n.slice(e,e+2));return r?(t.S=+r[0],e+r[0].length):-1}function ja(t,n,e){var r=ya.exec(n.slice(e,e+3));return r?(t.L=+r[0],e+r[0].length):-1}function Da(t,n,e){var r=_a.exec(n.slice(e,e+1));return r?e+r[0].length:-1}function Ra(t,n){return xa(t.getDate(),n,2)}function Ua(t,n){return xa(t.getHours(),n,2)}function Ia(t,n){return xa(t.getHours()%12||12,n,2)}function Fa(t,n){return xa(1+eo.count(wo(t),t),n,3)}function Ya(t,n){return xa(t.getMilliseconds(),n,3)}function Ba(t,n){return xa(t.getMonth()+1,n,2)}function Ha(t,n){return xa(t.getMinutes(),n,2)}function Xa(t,n){return xa(t.getSeconds(),n,2)}function $a(t,n){return xa(oo.count(wo(t),t),n,2)}function Va(t){return t.getDay()}function Wa(t,n){return xa(ao.count(wo(t),t),n,2)}function Za(t,n){return xa(t.getFullYear()%100,n,2)}function Ga(t,n){return xa(t.getFullYear()%1e4,n,4)}function Ja(t){var n=t.getTimezoneOffset();return(n>0?"-":(n*=-1,"+"))+xa(n/60|0,"0",2)+xa(n%60,"0",2)}function Qa(t,n){return xa(t.getUTCDate(),n,2)}function Ka(t,n){return xa(t.getUTCHours(),n,2)}function tu(t,n){return xa(t.getUTCHours()%12||12,n,2)}function nu(t,n){return xa(1+Ao.count(Vo(t),t),n,3)}function eu(t,n){return xa(t.getUTCMilliseconds(),n,3)}function ru(t,n){return xa(t.getUTCMonth()+1,n,2)}function iu(t,n){return xa(t.getUTCMinutes(),n,2)}function ou(t,n){return xa(t.getUTCSeconds(),n,2)}function au(t,n){return xa(zo.count(Vo(t),t),n,2)}function uu(t){return t.getUTCDay()}function cu(t,n){return xa(Po.count(Vo(t),t),n,2)}function su(t,n){return xa(t.getUTCFullYear()%100,n,2)}function lu(t,n){return xa(t.getUTCFullYear()%1e4,n,4)}function fu(){return"+0000"}function hu(){return"%"}function du(n){return va=pa(n),t.timeFormat=va.format,t.timeParse=va.parse,t.utcFormat=va.utcFormat,t.utcParse=va.utcParse,va}du({dateTime:"%x, %X",date:"%-m/%-d/%Y",time:"%-I:%M:%S %p",periods:["AM","PM"],days:["Sunday","Monday","Tuesday","Wednesday","Thursday","Friday","Saturday"],shortDays:["Sun","Mon","Tue","Wed","Thu","Fri","Sat"],months:["January","February","March","April","May","June","July","August","September","October","November","December"],shortMonths:["Jan","Feb","Mar","Apr","May","Jun","Jul","Aug","Sep","Oct","Nov","Dec"]});var pu=Date.prototype.toISOString?function(t){return t.toISOString()}:t.utcFormat("%Y-%m-%dT%H:%M:%S.%LZ"),vu=+new Date("2000-01-01T00:00:00.000Z")?function(t){var n=new Date(t);return isNaN(n)?null:n}:t.utcParse("%Y-%m-%dT%H:%M:%S.%LZ"),gu=Array.prototype,yu=gu.map,_u=gu.slice,mu={name:"implicit"};function xu(t){var n=A(),e=[],r=mu;function i(i){var o=i+"",a=n.get(o);if(!a){if(r!==mu)return r;n.set(o,a=e.push(i))}return t[(a-1)%t.length]}return t=null==t?[]:_u.call(t),i.domain=function(t){if(!arguments.length)return e.slice();e=[],n=A();for(var r,o,a=-1,u=t.length;++a<u;)n.has(o=(r=t[a])+"")||n.set(o,e.push(r));return i},i.range=function(n){return arguments.length?(t=_u.call(n),i):t.slice()},i.unknown=function(t){return arguments.length?(r=t,i):r},i.copy=function(){return xu().domain(e).range(t).unknown(r)},i}function bu(){var t,n,e=xu().unknown(void 0),r=e.domain,i=e.range,o=[0,1],a=!1,u=0,c=0,s=.5;function l(){var e=r().length,l=o[1]<o[0],f=o[l-0],h=o[1-l];t=(h-f)/Math.max(1,e-u+2*c),a&&(t=Math.floor(t)),f+=(h-f-t*(e-u))*s,n=t*(1-u),a&&(f=Math.round(f),n=Math.round(n));var d=v(e).map(function(n){return f+t*n});return i(l?d.reverse():d)}return delete e.unknown,e.domain=function(t){return arguments.length?(r(t),l()):r()},e.range=function(t){return arguments.length?(o=[+t[0],+t[1]],l()):o.slice()},e.rangeRound=function(t){return o=[+t[0],+t[1]],a=!0,l()},e.bandwidth=function(){return n},e.step=function(){return t},e.round=function(t){return arguments.length?(a=!!t,l()):a},e.padding=function(t){return arguments.length?(u=c=Math.max(0,Math.min(1,t)),l()):u},e.paddingInner=function(t){return arguments.length?(u=Math.max(0,Math.min(1,t)),l()):u},e.paddingOuter=function(t){return arguments.length?(c=Math.max(0,Math.min(1,t)),l()):c},e.align=function(t){return arguments.length?(s=Math.max(0,Math.min(1,t)),l()):s},e.copy=function(){return bu().domain(r()).range(o).round(a).paddingInner(u).paddingOuter(c).align(s)},l()}function wu(t){return function(){return t}}function Mu(t){return+t}var ku=[0,1];function Su(t,n){return(n-=t=+t)?function(e){return(e-t)/n}:wu(n)}function Nu(t,n,e,r){var i=t[0],o=t[1],a=n[0],u=n[1];return o<i?(i=e(o,i),a=r(u,a)):(i=e(i,o),a=r(a,u)),function(t){return a(i(t))}}function Tu(t,n,e,r){var o=Math.min(t.length,n.length)-1,a=new Array(o),u=new Array(o),c=-1;for(t[o]<t[0]&&(t=t.slice().reverse(),n=n.slice().reverse());++c<o;)a[c]=e(t[c],t[c+1]),u[c]=r(n[c],n[c+1]);return function(n){var e=i(t,n,1,o)-1;return u[e](a[e](n))}}function Au(t,n){return n.domain(t.domain()).range(t.range()).interpolate(t.interpolate()).clamp(t.clamp())}function Eu(t,n){var e,r,i,o=ku,a=ku,u=kr,c=!1;function s(){return e=Math.min(o.length,a.length)>2?Tu:Nu,r=i=null,l}function l(n){return(r||(r=e(o,a,c?(i=t,function(t,n){var e=i(t=+t,n=+n);return function(r){return r<=t?0:r>=n?1:e(r)}}):t,u)))(+n);var i}return l.invert=function(t){return(i||(i=e(a,o,Su,c?function(t){return function(n,e){var r=t(n=+n,e=+e);return function(t){return t<=0?n:t>=1?e:r(t)}}}(n):n)))(+t)},l.domain=function(t){return arguments.length?(o=yu.call(t,Mu),s()):o.slice()},l.range=function(t){return arguments.length?(a=_u.call(t),s()):a.slice()},l.rangeRound=function(t){return a=_u.call(t),u=Sr,s()},l.clamp=function(t){return arguments.length?(c=!!t,s()):c},l.interpolate=function(t){return arguments.length?(u=t,s()):u},s()}function Cu(n){var e=n.domain;return n.ticks=function(t){var n=e();return m(n[0],n[n.length-1],null==t?10:t)},n.tickFormat=function(n,r){return function(n,e,r){var i,o=n[0],a=n[n.length-1],u=x(o,a,null==e?10:e);switch((r=na(null==r?",f":r)).type){case"s":var c=Math.max(Math.abs(o),Math.abs(a));return null!=r.precision||isNaN(i=sa(u,c))||(r.precision=i),t.formatPrefix(r,c);case"":case"e":case"g":case"p":case"r":null!=r.precision||isNaN(i=la(u,Math.max(Math.abs(o),Math.abs(a))))||(r.precision=i-("e"===r.type));break;case"f":case"%":null!=r.precision||isNaN(i=ca(u))||(r.precision=i-2*("%"===r.type))}return t.format(r)}(e(),n,r)},n.nice=function(t){var r=e(),i=r.length-1,o=null==t?10:t,a=r[0],u=r[i],c=x(a,u,o);return c&&(c=x(Math.floor(a/c)*c,Math.ceil(u/c)*c,o),r[0]=Math.floor(a/c)*c,r[i]=Math.ceil(u/c)*c,e(r)),n},n}function zu(t,n){t=t.slice();var e,r=0,i=t.length-1,o=t[r],a=t[i];return a<o&&(e=r,r=i,i=e,e=o,o=a,a=e),t[r]=n.floor(o),t[i]=n.ceil(a),t}function Pu(t,n){return(n=Math.log(n/t))?function(e){return Math.log(e/t)/n}:wu(n)}function Ou(t,n){return t<0?function(e){return-Math.pow(-n,e)*Math.pow(-t,1-e)}:function(e){return Math.pow(n,e)*Math.pow(t,1-e)}}function qu(t){return isFinite(t)?+("1e"+t):t<0?0:t}function Lu(t){return 10===t?qu:t===Math.E?Math.exp:function(n){return Math.pow(t,n)}}function ju(t){return t===Math.E?Math.log:10===t&&Math.log10||2===t&&Math.log2||(t=Math.log(t),function(n){return Math.log(n)/t})}function Du(t){return function(n){return-t(-n)}}function Ru(t,n){return t<0?-Math.pow(-t,n):Math.pow(t,n)}function Uu(){var t=1,n=Eu(function(n,e){return(e=Ru(e,t)-(n=Ru(n,t)))?function(r){return(Ru(r,t)-n)/e}:wu(e)},function(n,e){return e=Ru(e,t)-(n=Ru(n,t)),function(r){return Ru(n+e*r,1/t)}}),e=n.domain;return n.exponent=function(n){return arguments.length?(t=+n,e(e())):t},n.copy=function(){return Au(n,Uu().exponent(t))},Cu(n)}var Iu=1e3,Fu=60*Iu,Yu=60*Fu,Bu=24*Yu,Hu=7*Bu,Xu=30*Bu,$u=365*Bu;function Vu(t){return new Date(t)}function Wu(t){return t instanceof Date?+t:+new Date(+t)}function Zu(t,n,r,i,o,a,u,c,s){var l=Eu(Su,mr),f=l.invert,h=l.domain,d=s(".%L"),p=s(":%S"),v=s("%I:%M"),g=s("%I %p"),y=s("%a %d"),_=s("%b %d"),m=s("%B"),b=s("%Y"),w=[[u,1,Iu],[u,5,5*Iu],[u,15,15*Iu],[u,30,30*Iu],[a,1,Fu],[a,5,5*Fu],[a,15,15*Fu],[a,30,30*Fu],[o,1,Yu],[o,3,3*Yu],[o,6,6*Yu],[o,12,12*Yu],[i,1,Bu],[i,2,2*Bu],[r,1,Hu],[n,1,Xu],[n,3,3*Xu],[t,1,$u]];function M(e){return(u(e)<e?d:a(e)<e?p:o(e)<e?v:i(e)<e?g:n(e)<e?r(e)<e?y:_:t(e)<e?m:b)(e)}function k(n,r,i,o){if(null==n&&(n=10),"number"==typeof n){var a=Math.abs(i-r)/n,u=e(function(t){return t[2]}).right(w,a);u===w.length?(o=x(r/$u,i/$u,n),n=t):u?(u=w[a/w[u-1][2]<w[u][2]/a?u-1:u],o=u[1],n=u[0]):(o=x(r,i,n),n=c)}return null==o?n:n.every(o)}return l.invert=function(t){return new Date(f(t))},l.domain=function(t){return arguments.length?h(yu.call(t,Wu)):h().map(Vu)},l.ticks=function(t,n){var e,r=h(),i=r[0],o=r[r.length-1],a=o<i;return a&&(e=i,i=o,o=e),e=(e=k(t,i,o,n))?e.range(i,o+1):[],a?e.reverse():e},l.tickFormat=function(t,n){return null==n?M:s(n)},l.nice=function(t,n){var e=h();return(t=k(t,e[0],e[e.length-1],n))?h(zu(e,t)):l},l.copy=function(){return Au(l,Zu(t,n,r,i,o,a,u,c,s))},l}function Gu(t){return t.match(/.{6}/g).map(function(t){return"#"+t})}var Ju=Gu("1f77b4ff7f0e2ca02cd627289467bd8c564be377c27f7f7fbcbd2217becf"),Qu=Gu("393b795254a36b6ecf9c9ede6379398ca252b5cf6bcedb9c8c6d31bd9e39e7ba52e7cb94843c39ad494ad6616be7969c7b4173a55194ce6dbdde9ed6"),Ku=Gu("3182bd6baed69ecae1c6dbefe6550dfd8d3cfdae6bfdd0a231a35474c476a1d99bc7e9c0756bb19e9ac8bcbddcdadaeb636363969696bdbdbdd9d9d9"),tc=Gu("1f77b4aec7e8ff7f0effbb782ca02c98df8ad62728ff98969467bdc5b0d58c564bc49c94e377c2f7b6d27f7f7fc7c7c7bcbd22dbdb8d17becf9edae5"),nc=Gr(rr(300,.5,0),rr(-240,.5,1)),ec=Gr(rr(-100,.75,.35),rr(80,1.5,.8)),rc=Gr(rr(260,.75,.35),rr(80,1.5,.8)),ic=rr();function oc(t){var n=t.length;return function(e){return t[Math.max(0,Math.min(n-1,Math.floor(e*n)))]}}var ac=oc(Gu("44015444025645045745055946075a46085c460a5d460b5e470d60470e6147106347116447136548146748166848176948186a481a6c481b6d481c6e481d6f481f70482071482173482374482475482576482677482878482979472a7a472c7a472d7b472e7c472f7d46307e46327e46337f463480453581453781453882443983443a83443b84433d84433e85423f854240864241864142874144874045884046883f47883f48893e49893e4a893e4c8a3d4d8a3d4e8a3c4f8a3c508b3b518b3b528b3a538b3a548c39558c39568c38588c38598c375a8c375b8d365c8d365d8d355e8d355f8d34608d34618d33628d33638d32648e32658e31668e31678e31688e30698e306a8e2f6b8e2f6c8e2e6d8e2e6e8e2e6f8e2d708e2d718e2c718e2c728e2c738e2b748e2b758e2a768e2a778e2a788e29798e297a8e297b8e287c8e287d8e277e8e277f8e27808e26818e26828e26828e25838e25848e25858e24868e24878e23888e23898e238a8d228b8d228c8d228d8d218e8d218f8d21908d21918c20928c20928c20938c1f948c1f958b1f968b1f978b1f988b1f998a1f9a8a1e9b8a1e9c891e9d891f9e891f9f881fa0881fa1881fa1871fa28720a38620a48621a58521a68522a78522a88423a98324aa8325ab8225ac8226ad8127ad8128ae8029af7f2ab07f2cb17e2db27d2eb37c2fb47c31b57b32b67a34b67935b77937b87838b9773aba763bbb753dbc743fbc7340bd7242be7144bf7046c06f48c16e4ac16d4cc26c4ec36b50c46a52c56954c56856c66758c7655ac8645cc8635ec96260ca6063cb5f65cb5e67cc5c69cd5b6ccd5a6ece5870cf5773d05675d05477d1537ad1517cd2507fd34e81d34d84d44b86d54989d5488bd6468ed64590d74393d74195d84098d83e9bd93c9dd93ba0da39a2da37a5db36a8db34aadc32addc30b0dd2fb2dd2db5de2bb8de29bade28bddf26c0df25c2df23c5e021c8e020cae11fcde11dd0e11cd2e21bd5e21ad8e219dae319dde318dfe318e2e418e5e419e7e419eae51aece51befe51cf1e51df4e61ef6e620f8e621fbe723fde725")),uc=oc(Gu("00000401000501010601010802010902020b02020d03030f03031204041405041606051806051a07061c08071e0907200a08220b09240c09260d0a290e0b2b100b2d110c2f120d31130d34140e36150e38160f3b180f3d19103f1a10421c10441d11471e114920114b21114e22115024125325125527125829115a2a115c2c115f2d11612f116331116533106734106936106b38106c390f6e3b0f703d0f713f0f72400f74420f75440f764510774710784910784a10794c117a4e117b4f127b51127c52137c54137d56147d57157e59157e5a167e5c167f5d177f5f187f601880621980641a80651a80671b80681c816a1c816b1d816d1d816e1e81701f81721f817320817521817621817822817922827b23827c23827e24828025828125818326818426818627818827818928818b29818c29818e2a81902a81912b81932b80942c80962c80982d80992d809b2e7f9c2e7f9e2f7fa02f7fa1307ea3307ea5317ea6317da8327daa337dab337cad347cae347bb0357bb2357bb3367ab5367ab73779b83779ba3878bc3978bd3977bf3a77c03a76c23b75c43c75c53c74c73d73c83e73ca3e72cc3f71cd4071cf4070d0416fd2426fd3436ed5446dd6456cd8456cd9466bdb476adc4869de4968df4a68e04c67e24d66e34e65e44f64e55064e75263e85362e95462ea5661eb5760ec5860ed5a5fee5b5eef5d5ef05f5ef1605df2625df2645cf3655cf4675cf4695cf56b5cf66c5cf66e5cf7705cf7725cf8745cf8765cf9785df9795df97b5dfa7d5efa7f5efa815ffb835ffb8560fb8761fc8961fc8a62fc8c63fc8e64fc9065fd9266fd9467fd9668fd9869fd9a6afd9b6bfe9d6cfe9f6dfea16efea36ffea571fea772fea973feaa74feac76feae77feb078feb27afeb47bfeb67cfeb77efeb97ffebb81febd82febf84fec185fec287fec488fec68afec88cfeca8dfecc8ffecd90fecf92fed194fed395fed597fed799fed89afdda9cfddc9efddea0fde0a1fde2a3fde3a5fde5a7fde7a9fde9aafdebacfcecaefceeb0fcf0b2fcf2b4fcf4b6fcf6b8fcf7b9fcf9bbfcfbbdfcfdbf")),cc=oc(Gu("00000401000501010601010802010a02020c02020e03021004031204031405041706041907051b08051d09061f0a07220b07240c08260d08290e092b10092d110a30120a32140b34150b37160b39180c3c190c3e1b0c411c0c431e0c451f0c48210c4a230c4c240c4f260c51280b53290b552b0b572d0b592f0a5b310a5c320a5e340a5f3609613809623909633b09643d09653e0966400a67420a68440a68450a69470b6a490b6a4a0c6b4c0c6b4d0d6c4f0d6c510e6c520e6d540f6d550f6d57106e59106e5a116e5c126e5d126e5f136e61136e62146e64156e65156e67166e69166e6a176e6c186e6d186e6f196e71196e721a6e741a6e751b6e771c6d781c6d7a1d6d7c1d6d7d1e6d7f1e6c801f6c82206c84206b85216b87216b88226a8a226a8c23698d23698f24699025689225689326679526679727669827669a28659b29649d29649f2a63a02a63a22b62a32c61a52c60a62d60a82e5fa92e5eab2f5ead305dae305cb0315bb1325ab3325ab43359b63458b73557b93556ba3655bc3754bd3853bf3952c03a51c13a50c33b4fc43c4ec63d4dc73e4cc83f4bca404acb4149cc4248ce4347cf4446d04545d24644d34743d44842d54a41d74b3fd84c3ed94d3dda4e3cdb503bdd513ade5238df5337e05536e15635e25734e35933e45a31e55c30e65d2fe75e2ee8602de9612bea632aeb6429eb6628ec6726ed6925ee6a24ef6c23ef6e21f06f20f1711ff1731df2741cf3761bf37819f47918f57b17f57d15f67e14f68013f78212f78410f8850ff8870ef8890cf98b0bf98c0af98e09fa9008fa9207fa9407fb9606fb9706fb9906fb9b06fb9d07fc9f07fca108fca309fca50afca60cfca80dfcaa0ffcac11fcae12fcb014fcb216fcb418fbb61afbb81dfbba1ffbbc21fbbe23fac026fac228fac42afac62df9c72ff9c932f9cb35f8cd37f8cf3af7d13df7d340f6d543f6d746f5d949f5db4cf4dd4ff4df53f4e156f3e35af3e55df2e661f2e865f2ea69f1ec6df1ed71f1ef75f1f179f2f27df2f482f3f586f3f68af4f88ef5f992f6fa96f8fb9af9fc9dfafda1fcffa4")),sc=oc(Gu("0d088710078813078916078a19068c1b068d1d068e20068f2206902406912605912805922a05932c05942e05952f059631059733059735049837049938049a3a049a3c049b3e049c3f049c41049d43039e44039e46039f48039f4903a04b03a14c02a14e02a25002a25102a35302a35502a45601a45801a45901a55b01a55c01a65e01a66001a66100a76300a76400a76600a76700a86900a86a00a86c00a86e00a86f00a87100a87201a87401a87501a87701a87801a87a02a87b02a87d03a87e03a88004a88104a78305a78405a78606a68707a68808a68a09a58b0aa58d0ba58e0ca48f0da4910ea3920fa39410a29511a19613a19814a099159f9a169f9c179e9d189d9e199da01a9ca11b9ba21d9aa31e9aa51f99a62098a72197a82296aa2395ab2494ac2694ad2793ae2892b02991b12a90b22b8fb32c8eb42e8db52f8cb6308bb7318ab83289ba3388bb3488bc3587bd3786be3885bf3984c03a83c13b82c23c81c33d80c43e7fc5407ec6417dc7427cc8437bc9447aca457acb4679cc4778cc4977cd4a76ce4b75cf4c74d04d73d14e72d24f71d35171d45270d5536fd5546ed6556dd7566cd8576bd9586ada5a6ada5b69db5c68dc5d67dd5e66de5f65de6164df6263e06363e16462e26561e26660e3685fe4695ee56a5de56b5de66c5ce76e5be76f5ae87059e97158e97257ea7457eb7556eb7655ec7754ed7953ed7a52ee7b51ef7c51ef7e50f07f4ff0804ef1814df1834cf2844bf3854bf3874af48849f48948f58b47f58c46f68d45f68f44f79044f79143f79342f89441f89540f9973ff9983ef99a3efa9b3dfa9c3cfa9e3bfb9f3afba139fba238fca338fca537fca636fca835fca934fdab33fdac33fdae32fdaf31fdb130fdb22ffdb42ffdb52efeb72dfeb82cfeba2cfebb2bfebd2afebe2afec029fdc229fdc328fdc527fdc627fdc827fdca26fdcb26fccd25fcce25fcd025fcd225fbd324fbd524fbd724fad824fada24f9dc24f9dd25f8df25f8e125f7e225f7e425f6e626f6e826f5e926f5eb27f4ed27f3ee27f3f027f2f227f1f426f1f525f0f724f0f921")),lc="http://www.w3.org/1999/xhtml",fc={svg:"http://www.w3.org/2000/svg",xhtml:lc,xlink:"http://www.w3.org/1999/xlink",xml:"http://www.w3.org/XML/1998/namespace",xmlns:"http://www.w3.org/2000/xmlns/"};function hc(t){var n=t+="",e=n.indexOf(":");return e>=0&&"xmlns"!==(n=t.slice(0,e))&&(t=t.slice(e+1)),fc.hasOwnProperty(n)?{space:fc[n],local:t}:t}function dc(t){var n=hc(t);return(n.local?function(t){return function(){return this.ownerDocument.createElementNS(t.space,t.local)}}:function(t){return function(){var n=this.ownerDocument,e=this.namespaceURI;return e===lc&&n.documentElement.namespaceURI===lc?n.createElement(t):n.createElementNS(e,t)}})(n)}var pc=0;function vc(){return new gc}function gc(){this._="@"+(++pc).toString(36)}gc.prototype=vc.prototype={constructor:gc,get:function(t){for(var n=this._;!(n in t);)if(!(t=t.parentNode))return;return t[n]},set:function(t,n){return t[this._]=n},remove:function(t){return this._ in t&&delete t[this._]},toString:function(){return this._}};var yc=function(t){return function(){return this.matches(t)}};if("undefined"!=typeof document){var _c=document.documentElement;if(!_c.matches){var mc=_c.webkitMatchesSelector||_c.msMatchesSelector||_c.mozMatchesSelector||_c.oMatchesSelector;yc=function(t){return function(){return mc.call(this,t)}}}}var xc=yc,bc={};if(t.event=null,"undefined"!=typeof document){var wc=document.documentElement;"onmouseenter"in wc||(bc={mouseenter:"mouseover",mouseleave:"mouseout"})}function Mc(t,n,e){return t=kc(t,n,e),function(n){var e=n.relatedTarget;e&&(e===this||8&e.compareDocumentPosition(this))||t.call(this,n)}}function kc(n,e,r){return function(i){var o=t.event;t.event=i;try{n.call(this,this.__data__,e,r)}finally{t.event=o}}}function Sc(t){return function(){var n=this.__on;if(n){for(var e,r=0,i=-1,o=n.length;r<o;++r)e=n[r],t.type&&e.type!==t.type||e.name!==t.name?n[++i]=e:this.removeEventListener(e.type,e.listener,e.capture);++i?n.length=i:delete this.__on}}}function Nc(t,n,e){var r=bc.hasOwnProperty(t.type)?Mc:kc;return function(i,o,a){var u,c=this.__on,s=r(n,o,a);if(c)for(var l=0,f=c.length;l<f;++l)if((u=c[l]).type===t.type&&u.name===t.name)return this.removeEventListener(u.type,u.listener,u.capture),this.addEventListener(u.type,u.listener=s,u.capture=e),void(u.value=n);this.addEventListener(t.type,s,e),u={type:t.type,name:t.name,value:n,listener:s,capture:e},c?c.push(u):this.__on=[u]}}function Tc(n,e,r,i){var o=t.event;n.sourceEvent=t.event,t.event=n;try{return e.apply(r,i)}finally{t.event=o}}function Ac(){for(var n,e=t.event;n=e.sourceEvent;)e=n;return e}function Ec(t,n){var e=t.ownerSVGElement||t;if(e.createSVGPoint){var r=e.createSVGPoint();return r.x=n.clientX,r.y=n.clientY,[(r=r.matrixTransform(t.getScreenCTM().inverse())).x,r.y]}var i=t.getBoundingClientRect();return[n.clientX-i.left-t.clientLeft,n.clientY-i.top-t.clientTop]}function Cc(t){var n=Ac();return n.changedTouches&&(n=n.changedTouches[0]),Ec(t,n)}function zc(){}function Pc(t){return null==t?zc:function(){return this.querySelector(t)}}function Oc(){return[]}function qc(t){return null==t?Oc:function(){return this.querySelectorAll(t)}}function Lc(t){return new Array(t.length)}function jc(t,n){this.ownerDocument=t.ownerDocument,this.namespaceURI=t.namespaceURI,this._next=null,this._parent=t,this.__data__=n}jc.prototype={constructor:jc,appendChild:function(t){return this._parent.insertBefore(t,this._next)},insertBefore:function(t,n){return this._parent.insertBefore(t,n)},querySelector:function(t){return this._parent.querySelector(t)},querySelectorAll:function(t){return this._parent.querySelectorAll(t)}};var Dc="$";function Rc(t,n,e,r,i,o){for(var a,u=0,c=n.length,s=o.length;u<s;++u)(a=n[u])?(a.__data__=o[u],r[u]=a):e[u]=new jc(t,o[u]);for(;u<c;++u)(a=n[u])&&(i[u]=a)}function Uc(t,n,e,r,i,o,a){var u,c,s,l={},f=n.length,h=o.length,d=new Array(f);for(u=0;u<f;++u)(c=n[u])&&(d[u]=s=Dc+a.call(c,c.__data__,u,n),s in l?i[u]=c:l[s]=c);for(u=0;u<h;++u)s=Dc+a.call(t,o[u],u,o),(c=l[s])?(r[u]=c,c.__data__=o[u],l[s]=null):e[u]=new jc(t,o[u]);for(u=0;u<f;++u)(c=n[u])&&l[d[u]]===c&&(i[u]=c)}function Ic(t,n){return t<n?-1:t>n?1:t>=n?0:NaN}function Fc(t){return t.ownerDocument&&t.ownerDocument.defaultView||t.document&&t||t.defaultView}function Yc(t){return t.trim().split(/^|\s+/)}function Bc(t){return t.classList||new Hc(t)}function Hc(t){this._node=t,this._names=Yc(t.getAttribute("class")||"")}function Xc(t,n){for(var e=Bc(t),r=-1,i=n.length;++r<i;)e.add(n[r])}function $c(t,n){for(var e=Bc(t),r=-1,i=n.length;++r<i;)e.remove(n[r])}function Vc(){this.textContent=""}function Wc(){this.innerHTML=""}function Zc(){this.nextSibling&&this.parentNode.appendChild(this)}function Gc(){this.previousSibling&&this.parentNode.insertBefore(this,this.parentNode.firstChild)}function Jc(){return null}function Qc(){var t=this.parentNode;t&&t.removeChild(this)}function Kc(t,n,e){var r=Fc(t),i=r.CustomEvent;i?i=new i(n,e):(i=r.document.createEvent("Event"),e?(i.initEvent(n,e.bubbles,e.cancelable),i.detail=e.detail):i.initEvent(n,!1,!1)),t.dispatchEvent(i)}Hc.prototype={add:function(t){var n=this._names.indexOf(t);n<0&&(this._names.push(t),this._node.setAttribute("class",this._names.join(" ")))},remove:function(t){var n=this._names.indexOf(t);n>=0&&(this._names.splice(n,1),this._node.setAttribute("class",this._names.join(" ")))},contains:function(t){return this._names.indexOf(t)>=0}};var ts=[null];function ns(t,n){this._groups=t,this._parents=n}function es(){return new ns([[document.documentElement]],ts)}function rs(t){return"string"==typeof t?new ns([[document.querySelector(t)]],[document.documentElement]):new ns([[t]],ts)}function is(t,n,e){arguments.length<3&&(e=n,n=Ac().changedTouches);for(var r,i=0,o=n?n.length:0;i<o;++i)if((r=n[i]).identifier===e)return Ec(t,r);return null}ns.prototype=es.prototype={constructor:ns,select:function(t){"function"!=typeof t&&(t=Pc(t));for(var n=this._groups,e=n.length,r=new Array(e),i=0;i<e;++i)for(var o,a,u=n[i],c=u.length,s=r[i]=new Array(c),l=0;l<c;++l)(o=u[l])&&(a=t.call(o,o.__data__,l,u))&&("__data__"in o&&(a.__data__=o.__data__),s[l]=a);return new ns(r,this._parents)},selectAll:function(t){"function"!=typeof t&&(t=qc(t));for(var n=this._groups,e=n.length,r=[],i=[],o=0;o<e;++o)for(var a,u=n[o],c=u.length,s=0;s<c;++s)(a=u[s])&&(r.push(t.call(a,a.__data__,s,u)),i.push(a));return new ns(r,i)},filter:function(t){"function"!=typeof t&&(t=xc(t));for(var n=this._groups,e=n.length,r=new Array(e),i=0;i<e;++i)for(var o,a=n[i],u=a.length,c=r[i]=[],s=0;s<u;++s)(o=a[s])&&t.call(o,o.__data__,s,a)&&c.push(o);return new ns(r,this._parents)},data:function(t,n){if(!t)return p=new Array(this.size()),l=-1,this.each(function(t){p[++l]=t}),p;var e,r=n?Uc:Rc,i=this._parents,o=this._groups;"function"!=typeof t&&(e=t,t=function(){return e});for(var a=o.length,u=new Array(a),c=new Array(a),s=new Array(a),l=0;l<a;++l){var f=i[l],h=o[l],d=h.length,p=t.call(f,f&&f.__data__,l,i),v=p.length,g=c[l]=new Array(v),y=u[l]=new Array(v),_=s[l]=new Array(d);r(f,h,g,y,_,p,n);for(var m,x,b=0,w=0;b<v;++b)if(m=g[b]){for(b>=w&&(w=b+1);!(x=y[w])&&++w<v;);m._next=x||null}}return(u=new ns(u,i))._enter=c,u._exit=s,u},enter:function(){return new ns(this._enter||this._groups.map(Lc),this._parents)},exit:function(){return new ns(this._exit||this._groups.map(Lc),this._parents)},merge:function(t){for(var n=this._groups,e=t._groups,r=n.length,i=e.length,o=Math.min(r,i),a=new Array(r),u=0;u<o;++u)for(var c,s=n[u],l=e[u],f=s.length,h=a[u]=new Array(f),d=0;d<f;++d)(c=s[d]||l[d])&&(h[d]=c);for(;u<r;++u)a[u]=n[u];return new ns(a,this._parents)},order:function(){for(var t=this._groups,n=-1,e=t.length;++n<e;)for(var r,i=t[n],o=i.length-1,a=i[o];--o>=0;)(r=i[o])&&(a&&a!==r.nextSibling&&a.parentNode.insertBefore(r,a),a=r);return this},sort:function(t){function n(n,e){return n&&e?t(n.__data__,e.__data__):!n-!e}t||(t=Ic);for(var e=this._groups,r=e.length,i=new Array(r),o=0;o<r;++o){for(var a,u=e[o],c=u.length,s=i[o]=new Array(c),l=0;l<c;++l)(a=u[l])&&(s[l]=a);s.sort(n)}return new ns(i,this._parents).order()},call:function(){var t=arguments[0];return arguments[0]=this,t.apply(null,arguments),this},nodes:function(){var t=new Array(this.size()),n=-1;return this.each(function(){t[++n]=this}),t},node:function(){for(var t=this._groups,n=0,e=t.length;n<e;++n)for(var r=t[n],i=0,o=r.length;i<o;++i){var a=r[i];if(a)return a}return null},size:function(){var t=0;return this.each(function(){++t}),t},empty:function(){return!this.node()},each:function(t){for(var n=this._groups,e=0,r=n.length;e<r;++e)for(var i,o=n[e],a=0,u=o.length;a<u;++a)(i=o[a])&&t.call(i,i.__data__,a,o);return this},attr:function(t,n){var e=hc(t);if(arguments.length<2){var r=this.node();return e.local?r.getAttributeNS(e.space,e.local):r.getAttribute(e)}return this.each((null==n?e.local?function(t){return function(){this.removeAttributeNS(t.space,t.local)}}:function(t){return function(){this.removeAttribute(t)}}:"function"==typeof n?e.local?function(t,n){return function(){var e=n.apply(this,arguments);null==e?this.removeAttributeNS(t.space,t.local):this.setAttributeNS(t.space,t.local,e)}}:function(t,n){return function(){var e=n.apply(this,arguments);null==e?this.removeAttribute(t):this.setAttribute(t,e)}}:e.local?function(t,n){return function(){this.setAttributeNS(t.space,t.local,n)}}:function(t,n){return function(){this.setAttribute(t,n)}})(e,n))},style:function(t,n,e){var r;return arguments.length>1?this.each((null==n?function(t){return function(){this.style.removeProperty(t)}}:"function"==typeof n?function(t,n,e){return function(){var r=n.apply(this,arguments);null==r?this.style.removeProperty(t):this.style.setProperty(t,r,e)}}:function(t,n,e){return function(){this.style.setProperty(t,n,e)}})(t,n,null==e?"":e)):Fc(r=this.node()).getComputedStyle(r,null).getPropertyValue(t)},property:function(t,n){return arguments.length>1?this.each((null==n?function(t){return function(){delete this[t]}}:"function"==typeof n?function(t,n){return function(){var e=n.apply(this,arguments);null==e?delete this[t]:this[t]=e}}:function(t,n){return function(){this[t]=n}})(t,n)):this.node()[t]},classed:function(t,n){var e=Yc(t+"");if(arguments.length<2){for(var r=Bc(this.node()),i=-1,o=e.length;++i<o;)if(!r.contains(e[i]))return!1;return!0}return this.each(("function"==typeof n?function(t,n){return function(){(n.apply(this,arguments)?Xc:$c)(this,t)}}:n?function(t){return function(){Xc(this,t)}}:function(t){return function(){$c(this,t)}})(e,n))},text:function(t){return arguments.length?this.each(null==t?Vc:("function"==typeof t?function(t){return function(){var n=t.apply(this,arguments);this.textContent=null==n?"":n}}:function(t){return function(){this.textContent=t}})(t)):this.node().textContent},html:function(t){return arguments.length?this.each(null==t?Wc:("function"==typeof t?function(t){return function(){var n=t.apply(this,arguments);this.innerHTML=null==n?"":n}}:function(t){return function(){this.innerHTML=t}})(t)):this.node().innerHTML},raise:function(){return this.each(Zc)},lower:function(){return this.each(Gc)},append:function(t){var n="function"==typeof t?t:dc(t);return this.select(function(){return this.appendChild(n.apply(this,arguments))})},insert:function(t,n){var e="function"==typeof t?t:dc(t),r=null==n?Jc:"function"==typeof n?n:Pc(n);return this.select(function(){return this.insertBefore(e.apply(this,arguments),r.apply(this,arguments)||null)})},remove:function(){return this.each(Qc)},datum:function(t){return arguments.length?this.property("__data__",t):this.node().__data__},on:function(t,n,e){var r,i,o=function(t){return t.trim().split(/^|\s+/).map(function(t){var n="",e=t.indexOf(".");return e>=0&&(n=t.slice(e+1),t=t.slice(0,e)),{type:t,name:n}})}(t+""),a=o.length;if(!(arguments.length<2)){for(u=n?Nc:Sc,null==e&&(e=!1),r=0;r<a;++r)this.each(u(o[r],n,e));return this}var u=this.node().__on;if(u)for(var c,s=0,l=u.length;s<l;++s)for(r=0,c=u[s];r<a;++r)if((i=o[r]).type===c.type&&i.name===c.name)return c.value},dispatch:function(t,n){return this.each(("function"==typeof n?function(t,n){return function(){return Kc(this,t,n.apply(this,arguments))}}:function(t,n){return function(){return Kc(this,t,n)}})(t,n))}};var os=Qr("start","end","interrupt"),as=[],us=0,cs=1,ss=2,ls=3,fs=4,hs=5;function ds(t,n,e,r,i,o){var a=t.__transition;if(a){if(e in a)return}else t.__transition={};!function(t,n,e){var r,i=t.__transition;function o(o){var u,c,s,l;for(u in i)(l=i[u]).name===e.name&&(l.state===ls?(l.state=hs,l.timer.stop(),l.on.call("interrupt",t,t.__data__,l.index,l.group),delete i[u]):+u<n&&(l.state=hs,l.timer.stop(),delete i[u]));if(Yi(function(){e.state===ls&&(e.timer.restart(a,e.delay,e.time),a(o))}),e.state=ss,e.on.call("start",t,t.__data__,e.index,e.group),e.state===ss){for(e.state=ls,r=new Array(s=e.tween.length),u=0,c=-1;u<s;++u)(l=e.tween[u].value.call(t,t.__data__,e.index,e.group))&&(r[++c]=l);r.length=c+1}}function a(o){for(var a=o<e.duration?e.ease.call(null,o/e.duration):(e.state=fs,1),u=-1,c=r.length;++u<c;)r[u].call(null,a);if(e.state===fs){for(u in e.state=hs,e.timer.stop(),e.on.call("end",t,t.__data__,e.index,e.group),i)if(+u!==n)return void delete i[n];delete t.__transition}}i[n]=e,e.timer=Di(function(t){e.state=cs,e.delay<=t?o(t-e.delay):e.timer.restart(o,e.delay,e.time)},0,e.time)}(t,e,{name:n,index:r,group:i,on:os,tween:as,time:o.time,delay:o.delay,duration:o.duration,ease:o.ease,timer:null,state:us})}function ps(t,n){var e=t.__transition;if(!e||!(e=e[n])||e.state>us)throw new Error("too late");return e}function vs(t,n){var e=t.__transition;if(!e||!(e=e[n])||e.state>ss)throw new Error("too late");return e}function gs(t,n){var e=t.__transition;if(!e||!(e=e[n]))throw new Error("too late");return e}function ys(t,n){var e,r,i,o=t.__transition,a=!0;if(o){for(i in n=null==n?null:n+"",o)(e=o[i]).name===n?(r=e.state===ls,e.state=hs,e.timer.stop(),r&&e.on.call("interrupt",t,t.__data__,e.index,e.group),delete o[i]):a=!1;a&&delete t.__transition}}function _s(t,n,e){var r=t._id;return t.each(function(){var t=vs(this,r);(t.value||(t.value={}))[n]=e.apply(this,arguments)}),function(t){return gs(t,r).value[n]}}function ms(t,n){var e;return("number"==typeof n?mr:n instanceof be?dr:(e=be(n))?(n=e,dr):Mr)(t,n)}var xs=es.prototype.constructor,bs=0;function ws(t,n,e,r){this._groups=t,this._parents=n,this._name=e,this._id=r}function Ms(t){return es().transition(t)}function ks(){return++bs}var Ss=es.prototype;ws.prototype=Ms.prototype={constructor:ws,select:function(t){var n=this._name,e=this._id;"function"!=typeof t&&(t=Pc(t));for(var r=this._groups,i=r.length,o=new Array(i),a=0;a<i;++a)for(var u,c,s=r[a],l=s.length,f=o[a]=new Array(l),h=0;h<l;++h)(u=s[h])&&(c=t.call(u,u.__data__,h,s))&&("__data__"in u&&(c.__data__=u.__data__),f[h]=c,ds(f[h],n,e,h,f,gs(u,e)));return new ws(o,this._parents,n,e)},selectAll:function(t){var n=this._name,e=this._id;"function"!=typeof t&&(t=qc(t));for(var r=this._groups,i=r.length,o=[],a=[],u=0;u<i;++u)for(var c,s=r[u],l=s.length,f=0;f<l;++f)if(c=s[f]){for(var h,d=t.call(c,c.__data__,f,s),p=gs(c,e),v=0,g=d.length;v<g;++v)(h=d[v])&&ds(h,n,e,v,d,p);o.push(d),a.push(c)}return new ws(o,a,n,e)},filter:function(t){"function"!=typeof t&&(t=xc(t));for(var n=this._groups,e=n.length,r=new Array(e),i=0;i<e;++i)for(var o,a=n[i],u=a.length,c=r[i]=[],s=0;s<u;++s)(o=a[s])&&t.call(o,o.__data__,s,a)&&c.push(o);return new ws(r,this._parents,this._name,this._id)},merge:function(t){if(t._id!==this._id)throw new Error;for(var n=this._groups,e=t._groups,r=n.length,i=e.length,o=Math.min(r,i),a=new Array(r),u=0;u<o;++u)for(var c,s=n[u],l=e[u],f=s.length,h=a[u]=new Array(f),d=0;d<f;++d)(c=s[d]||l[d])&&(h[d]=c);for(;u<r;++u)a[u]=n[u];return new ws(a,this._parents,this._name,this._id)},selection:function(){return new xs(this._groups,this._parents)},transition:function(){for(var t=this._name,n=this._id,e=ks(),r=this._groups,i=r.length,o=0;o<i;++o)for(var a,u=r[o],c=u.length,s=0;s<c;++s)if(a=u[s]){var l=gs(a,n);ds(a,t,e,s,u,{time:l.time+l.delay+l.duration,delay:0,duration:l.duration,ease:l.ease})}return new ws(r,this._parents,t,e)},call:Ss.call,nodes:Ss.nodes,node:Ss.node,size:Ss.size,empty:Ss.empty,each:Ss.each,on:function(t,n){var e=this._id;return arguments.length<2?gs(this.node(),e).on.on(t):this.each(function(t,n,e){var r,i,o=function(t){return(t+"").trim().split(/^|\s+/).every(function(t){var n=t.indexOf(".");return n>=0&&(t=t.slice(0,n)),!t||"start"===t})}(n)?ps:vs;return function(){var a=o(this,t),u=a.on;u!==r&&(i=(r=u).copy()).on(n,e),a.on=i}}(e,t,n))},attr:function(t,n){var e=hc(t),r="transform"===e?Lr:ms;return this.attrTween(t,"function"==typeof n?(e.local?function(t,n,e){var r,i,o;return function(){var a,u=e(this);if(null!=u)return(a=this.getAttributeNS(t.space,t.local))===u?null:a===r&&u===i?o:o=n(r=a,i=u);this.removeAttributeNS(t.space,t.local)}}:function(t,n,e){var r,i,o;return function(){var a,u=e(this);if(null!=u)return(a=this.getAttribute(t))===u?null:a===r&&u===i?o:o=n(r=a,i=u);this.removeAttribute(t)}})(e,r,_s(this,"attr."+t,n)):null==n?(e.local?function(t){return function(){this.removeAttributeNS(t.space,t.local)}}:function(t){return function(){this.removeAttribute(t)}})(e):(e.local?function(t,n,e){var r,i;return function(){var o=this.getAttributeNS(t.space,t.local);return o===e?null:o===r?i:i=n(r=o,e)}}:function(t,n,e){var r,i;return function(){var o=this.getAttribute(t);return o===e?null:o===r?i:i=n(r=o,e)}})(e,r,n))},attrTween:function(t,n){var e="attr."+t;if(arguments.length<2)return(e=this.tween(e))&&e._value;if(null==n)return this.tween(e,null);if("function"!=typeof n)throw new Error;var r=hc(t);return this.tween(e,(r.local?function(t,n){function e(){var e=this,r=n.apply(e,arguments);return r&&function(n){e.setAttributeNS(t.space,t.local,r(n))}}return e._value=n,e}:function(t,n){function e(){var e=this,r=n.apply(e,arguments);return r&&function(n){e.setAttribute(t,r(n))}}return e._value=n,e})(r,n))},style:function(t,n,e){var r="transform"==(t+="")?qr:ms;return null==n?this.styleTween(t,function(t,n){var e,r,i;return function(){var o=Fc(this).getComputedStyle(this,null),a=o.getPropertyValue(t),u=(this.style.removeProperty(t),o.getPropertyValue(t));return a===u?null:a===e&&u===r?i:i=n(e=a,r=u)}}(t,r)).on("end.style."+t,function(t){return function(){this.style.removeProperty(t)}}(t)):this.styleTween(t,"function"==typeof n?function(t,n,e){var r,i,o;return function(){var a=Fc(this).getComputedStyle(this,null),u=a.getPropertyValue(t),c=e(this);return null==c&&(this.style.removeProperty(t),c=a.getPropertyValue(t)),u===c?null:u===r&&c===i?o:o=n(r=u,i=c)}}(t,r,_s(this,"style."+t,n)):function(t,n,e){var r,i;return function(){var o=Fc(this).getComputedStyle(this,null).getPropertyValue(t);return o===e?null:o===r?i:i=n(r=o,e)}}(t,r,n),e)},styleTween:function(t,n,e){var r="style."+(t+="");if(arguments.length<2)return(r=this.tween(r))&&r._value;if(null==n)return this.tween(r,null);if("function"!=typeof n)throw new Error;return this.tween(r,function(t,n,e){function r(){var r=this,i=n.apply(r,arguments);return i&&function(n){r.style.setProperty(t,i(n),e)}}return r._value=n,r}(t,n,null==e?"":e))},text:function(t){return this.tween("text","function"==typeof t?function(t){return function(){var n=t(this);this.textContent=null==n?"":n}}(_s(this,"text",t)):function(t){return function(){this.textContent=t}}(null==t?"":t+""))},remove:function(){return this.on("end.remove",(t=this._id,function(){var n=this.parentNode;for(var e in this.__transition)if(+e!==t)return;n&&n.removeChild(this)}));var t},tween:function(t,n){var e=this._id;if(t+="",arguments.length<2){for(var r,i=gs(this.node(),e).tween,o=0,a=i.length;o<a;++o)if((r=i[o]).name===t)return r.value;return null}return this.each((null==n?function(t,n){var e,r;return function(){var i=vs(this,t),o=i.tween;if(o!==e){r=e=o;for(var a=0,u=r.length;a<u;++a)if(r[a].name===n){(r=r.slice()).splice(a,1);break}}i.tween=r}}:function(t,n,e){var r,i;if("function"!=typeof e)throw new Error;return function(){var o=vs(this,t),a=o.tween;if(a!==r){i=(r=a).slice();for(var u={name:n,value:e},c=0,s=i.length;c<s;++c)if(i[c].name===n){i[c]=u;break}c===s&&i.push(u)}o.tween=i}})(e,t,n))},delay:function(t){var n=this._id;return arguments.length?this.each(("function"==typeof t?function(t,n){return function(){ps(this,t).delay=+n.apply(this,arguments)}}:function(t,n){return n=+n,function(){ps(this,t).delay=n}})(n,t)):gs(this.node(),n).delay},duration:function(t){var n=this._id;return arguments.length?this.each(("function"==typeof t?function(t,n){return function(){vs(this,t).duration=+n.apply(this,arguments)}}:function(t,n){return n=+n,function(){vs(this,t).duration=n}})(n,t)):gs(this.node(),n).duration},ease:function(t){var n=this._id;return arguments.length?this.each(function(t,n){if("function"!=typeof n)throw new Error;return function(){vs(this,t).ease=n}}(n,t)):gs(this.node(),n).ease}};var Ns={time:null,delay:0,duration:250,ease:U};function Ts(t,n){for(var e;!(e=t.__transition)||!(e=e[n]);)if(!(t=t.parentNode))return Ns.time=qi(),Ns;return e}es.prototype.interrupt=function(t){return this.each(function(){ys(this,t)})},es.prototype.transition=function(t){var n,e;t instanceof ws?(n=t._id,t=t._name):(n=ks(),(e=Ns).time=qi(),t=null==t?null:t+"");for(var r=this._groups,i=r.length,o=0;o<i;++o)for(var a,u=r[o],c=u.length,s=0;s<c;++s)(a=u[s])&&ds(a,t,n,s,u,e||Ts(a,n));return new ws(r,this._parents,t,n)};var As=[null],Es=Array.prototype.slice;function Cs(t){return t}var zs=1,Ps=2,Os=3,qs=4,Ls=1e-6;function js(t,n,e){var r=t(e);return"translate("+(isFinite(r)?r:n(e))+",0)"}function Ds(t,n,e){var r=t(e);return"translate(0,"+(isFinite(r)?r:n(e))+")"}function Rs(){return!this.__axis}function Us(t,n){var e=[],r=null,i=null,o=6,a=6,u=3;function c(c){var s,l=null==r?n.ticks?n.ticks.apply(n,e):n.domain():r,f=null==i?n.tickFormat?n.tickFormat.apply(n,e):Cs:i,h=Math.max(o,0)+u,d=t===zs||t===Os?js:Ds,p=n.range(),v=p[0]+.5,g=p[p.length-1]+.5,y=(n.bandwidth?function(t){var n=t.bandwidth()/2;return t.round()&&(n=Math.round(n)),function(e){return t(e)+n}}:Cs)(n.copy()),_=c.selection?c.selection():c,m=_.selectAll(".domain").data([null]),x=_.selectAll(".tick").data(l,n).order(),b=x.exit(),w=x.enter().append("g").attr("class","tick"),M=x.select("line"),k=x.select("text"),S=t===zs||t===qs?-1:1,N=t===qs||t===Ps?(s="x","y"):(s="y","x");m=m.merge(m.enter().insert("path",".tick").attr("class","domain").attr("stroke","#000")),x=x.merge(w),M=M.merge(w.append("line").attr("stroke","#000").attr(s+"2",S*o).attr(N+"1",.5).attr(N+"2",.5)),k=k.merge(w.append("text").attr("fill","#000").attr(s,S*h).attr(N,.5).attr("dy",t===zs?"0em":t===Os?"0.71em":"0.32em")),c!==_&&(m=m.transition(c),x=x.transition(c),M=M.transition(c),k=k.transition(c),b=b.transition(c).attr("opacity",Ls).attr("transform",function(t){return d(y,this.parentNode.__axis||y,t)}),w.attr("opacity",Ls).attr("transform",function(t){return d(this.parentNode.__axis||y,y,t)})),b.remove(),m.attr("d",t===qs||t==Ps?"M"+S*a+","+v+"H0.5V"+g+"H"+S*a:"M"+v+","+S*a+"V0.5H"+g+"V"+S*a),x.attr("opacity",1).attr("transform",function(t){return d(y,y,t)}),M.attr(s+"2",S*o),k.attr(s,S*h).text(f),_.filter(Rs).attr("fill","none").attr("font-size",10).attr("font-family","sans-serif").attr("text-anchor",t===Ps?"start":t===qs?"end":"middle"),_.each(function(){this.__axis=y})}return c.scale=function(t){return arguments.length?(n=t,c):n},c.ticks=function(){return e=Es.call(arguments),c},c.tickArguments=function(t){return arguments.length?(e=null==t?[]:Es.call(t),c):e.slice()},c.tickValues=function(t){return arguments.length?(r=null==t?null:Es.call(t),c):r&&r.slice()},c.tickFormat=function(t){return arguments.length?(i=t,c):i},c.tickSize=function(t){return arguments.length?(o=a=+t,c):o},c.tickSizeInner=function(t){return arguments.length?(o=+t,c):o},c.tickSizeOuter=function(t){return arguments.length?(a=+t,c):a},c.tickPadding=function(t){return arguments.length?(u=+t,c):u},c}function Is(t,n){return t.parent===n.parent?1:2}function Fs(t,n){return t+n.x}function Ys(t,n){return Math.max(t,n.y)}function Bs(t,n){var e,r,i,o,a,u=new Vs(t),c=+t.value&&(u.value=t.value),s=[u];for(null==n&&(n=Hs);e=s.pop();)if(c&&(e.value=+e.data.value),(i=n(e.data))&&(a=i.length))for(e.children=new Array(a),o=a-1;o>=0;--o)s.push(r=e.children[o]=new Vs(i[o])),r.parent=e,r.depth=e.depth+1;return u.eachBefore($s)}function Hs(t){return t.children}function Xs(t){t.data=t.data.data}function $s(t){var n=0;do{t.height=n}while((t=t.parent)&&t.height<++n)}function Vs(t){this.data=t,this.depth=this.height=0,this.parent=null}function Ws(t){this._=t,this.next=null}function Zs(t){return function t(n,e){var r,i,o,a,u=null,c=n.head;switch(e.length){case 1:a=e[0],r={x:a.x,y:a.y,r:a.r};break;case 2:r=function(t,n){var e=t.x,r=t.y,i=t.r,o=n.x,a=n.y,u=n.r,c=o-e,s=a-r,l=u-i,f=Math.sqrt(c*c+s*s);return{x:(e+o+c/f*l)/2,y:(r+a+s/f*l)/2,r:(f+i+u)/2}}(e[0],e[1]);break;case 3:r=function(t,n,e){var r=t.x,i=t.y,o=t.r,a=n.x,u=n.y,c=n.r,s=e.x,l=e.y,f=e.r,h=2*(r-a),d=2*(i-u),p=2*(c-o),v=r*r+i*i-o*o-a*a-u*u+c*c,g=2*(r-s),y=2*(i-l),_=2*(f-o),m=r*r+i*i-o*o-s*s-l*l+f*f,x=g*d-h*y,b=(d*m-y*v)/x-r,w=(y*p-d*_)/x,M=(g*v-h*m)/x-i,k=(h*_-g*p)/x,S=w*w+k*k-1,N=2*(b*w+M*k+o),T=b*b+M*M-o*o,A=(-N-Math.sqrt(N*N-4*S*T))/(2*S);return{x:b+w*A+r,y:M+k*A+i,r:A}}(e[0],e[1],e[2])}for(;c;)o=c._,i=c.next,r&&Gs(r,o)?u=c:(u?(n.tail=u,u.next=null):n.head=n.tail=null,e.push(o),r=t(n,e),e.pop(),n.head?(c.next=n.head,n.head=c):(c.next=null,n.head=n.tail=c),(u=n.tail).next=i),c=i;return n.tail=u,r}(function(t){for(var n=(t=t.slice()).length,e=null,r=e;n;){var i=new Ws(t[n-1]);r=r?r.next=i:e=i,t[void 0]=t[--n]}return{head:e,tail:r}}(t),[])}function Gs(t,n){var e=n.x-t.x,r=n.y-t.y,i=t.r-n.r;return i*i+1e-6>e*e+r*r}function Js(t,n,e){var r=t.x,i=t.y,o=n.r+e.r,a=t.r+e.r,u=n.x-r,c=n.y-i,s=u*u+c*c;if(s){var l=.5+((a*=a)-(o*=o))/(2*s),f=Math.sqrt(Math.max(0,2*o*(a+s)-(a-=s)*a-o*o))/(2*s);e.x=r+l*u+f*c,e.y=i+l*c-f*u}else e.x=r+a,e.y=i}function Qs(t,n){var e=n.x-t.x,r=n.y-t.y,i=t.r+n.r;return i*i>e*e+r*r}function Ks(t,n,e){var r=t.x-n,i=t.y-e;return r*r+i*i}function tl(t){this._=t,this.next=null,this.previous=null}function nl(t){if(!(i=t.length))return 0;var n,e,r,i;if((n=t[0]).x=0,n.y=0,!(i>1))return n.r;if(e=t[1],n.x=-e.r,e.x=n.r,e.y=0,!(i>2))return n.r+e.r;Js(e,n,r=t[2]);var o,a,u,c,s,l,f,h=n.r*n.r,d=e.r*e.r,p=r.r*r.r,v=h+d+p,g=h*n.x+d*e.x+p*r.x,y=h*n.y+d*e.y+p*r.y;n=new tl(n),e=new tl(e),r=new tl(r),n.next=r.previous=e,e.next=n.previous=r,r.next=e.previous=n;t:for(u=3;u<i;++u){if(Js(n._,e._,r=t[u]),r=new tl(r),(s=n.previous)===(c=e.next)){if(Qs(c._,r._)){n=e,e=c,--u;continue t}}else{l=c._.r,f=s._.r;do{if(l<=f){if(Qs(c._,r._)){e=c,n.next=e,e.previous=n,--u;continue t}c=c.next,l+=c._.r}else{if(Qs(s._,r._)){(n=s).next=e,e.previous=n,--u;continue t}s=s.previous,f+=s._.r}}while(c!==s.next)}for(r.previous=n,r.next=e,n.next=e.previous=e=r,v+=p=r._.r*r._.r,g+=p*r._.x,y+=p*r._.y,h=Ks(n._,o=g/v,a=y/v);(r=r.next)!==e;)(p=Ks(r._,o,a))<h&&(n=r,h=p);e=n.next}for(n=[e._],r=e;(r=r.next)!==e;)n.push(r._);for(r=Zs(n),u=0;u<i;++u)(n=t[u]).x-=r.x,n.y-=r.y;return r.r}function el(t){if("function"!=typeof t)throw new Error;return t}function rl(){return 0}function il(t){return function(){return t}}function ol(t){return Math.sqrt(t.value)}function al(t){return function(n){n.children||(n.r=Math.max(0,+t(n)||0))}}function ul(t,n){return function(e){if(r=e.children){var r,i,o,a=r.length,u=t(e)*n||0;if(u)for(i=0;i<a;++i)r[i].r+=u;if(o=nl(r),u)for(i=0;i<a;++i)r[i].r-=u;e.r=o+u}}}function cl(t){return function(n){var e=n.parent;n.r*=t,e&&(n.x=e.x+t*n.x,n.y=e.y+t*n.y)}}function sl(t){t.x0=Math.round(t.x0),t.y0=Math.round(t.y0),t.x1=Math.round(t.x1),t.y1=Math.round(t.y1)}function ll(t,n,e,r,i){for(var o,a=t.children,u=-1,c=a.length,s=t.value&&(r-n)/t.value;++u<c;)(o=a[u]).y0=e,o.y1=i,o.x0=n,o.x1=n+=o.value*s}Vs.prototype=Bs.prototype={constructor:Vs,each:function(t){var n,e,r,i,o=this,a=[o];do{for(n=a.reverse(),a=[];o=n.pop();)if(t(o),e=o.children)for(r=0,i=e.length;r<i;++r)a.push(e[r])}while(a.length);return this},eachAfter:function(t){for(var n,e,r,i=this,o=[i],a=[];i=o.pop();)if(a.push(i),n=i.children)for(e=0,r=n.length;e<r;++e)o.push(n[e]);for(;i=a.pop();)t(i);return this},eachBefore:function(t){for(var n,e,r=this,i=[r];r=i.pop();)if(t(r),n=r.children)for(e=n.length-1;e>=0;--e)i.push(n[e]);return this},sum:function(t){return this.eachAfter(function(n){for(var e=+t(n.data)||0,r=n.children,i=r&&r.length;--i>=0;)e+=r[i].value;n.value=e})},sort:function(t){return this.eachBefore(function(n){n.children&&n.children.sort(t)})},path:function(t){for(var n=this,e=function(t,n){if(t===n)return t;var e=t.ancestors(),r=n.ancestors(),i=null;for(t=e.pop(),n=r.pop();t===n;)i=t,t=e.pop(),n=r.pop();return i}(n,t),r=[n];n!==e;)n=n.parent,r.push(n);for(var i=r.length;t!==e;)r.splice(i,0,t),t=t.parent;return r},ancestors:function(){for(var t=this,n=[t];t=t.parent;)n.push(t);return n},descendants:function(){var t=[];return this.each(function(n){t.push(n)}),t},leaves:function(){var t=[];return this.eachBefore(function(n){n.children||t.push(n)}),t},links:function(){var t=this,n=[];return t.each(function(e){e!==t&&n.push({source:e.parent,target:e})}),n},copy:function(){return Bs(this).eachBefore(Xs)}};var fl="$",hl={depth:-1},dl={};function pl(t){return t.id}function vl(t){return t.parentId}function gl(t,n){return t.parent===n.parent?1:2}function yl(t){var n=t.children;return n?n[0]:t.t}function _l(t){var n=t.children;return n?n[n.length-1]:t.t}function ml(t,n,e){var r=e/(n.i-t.i);n.c-=r,n.s+=e,t.c+=r,n.z+=e,n.m+=e}function xl(t,n,e){return t.a.parent===n.parent?t.a:e}function bl(t,n){this._=t,this.parent=null,this.children=null,this.A=null,this.a=this,this.z=0,this.m=0,this.c=0,this.s=0,this.t=null,this.i=n}function wl(t,n,e,r,i){for(var o,a=t.children,u=-1,c=a.length,s=t.value&&(i-e)/t.value;++u<c;)(o=a[u]).x0=n,o.x1=r,o.y0=e,o.y1=e+=o.value*s}bl.prototype=Object.create(Vs.prototype);var Ml=(1+Math.sqrt(5))/2;function kl(t,n,e,r,i,o){for(var a,u,c,s,l,f,h,d,p,v,g,y,_=[],m=n.children,x=0,b=m.length,w=n.value;x<b;){for(s=i-e,l=o-r,h=d=f=m[x].value,g=Math.max(l/s,s/l)/(w*t),y=f*f*g,v=Math.max(d/y,y/h),c=x+1;c<b;++c){if(f+=u=m[c].value,u<h&&(h=u),u>d&&(d=u),y=f*f*g,(p=Math.max(d/y,y/h))>v){f-=u;break}v=p}_.push(a={value:f,dice:s<l,children:m.slice(x,c)}),a.dice?ll(a,e,r,i,w?r+=l*f/w:o):wl(a,e,r,w?e+=s*f/w:i,o),w-=f,x=c}return _}var Sl=function t(n){function e(t,e,r,i,o){kl(n,t,e,r,i,o)}return e.ratio=function(n){return t((n=+n)>1?n:1)},e}(Ml),Nl=function t(n){function e(t,e,r,i,o){if((a=t._squarify)&&a.ratio===n)for(var a,u,c,s,l,f=-1,h=a.length,d=t.value;++f<h;){for(u=a[f],c=u.children,s=u.value=0,l=c.length;s<l;++s)u.value+=c[s].value;u.dice?ll(u,e,r,i,r+=(o-r)*u.value/d):wl(u,e,r,e+=(i-e)*u.value/d,o),d-=u.value}else t._squarify=a=kl(n,t,e,r,i,o),a.ratio=n}return e.ratio=function(n){return t((n=+n)>1?n:1)},e}(Ml);function Tl(t){return function(){return t}}function Al(){return 1e-6*(Math.random()-.5)}function El(t){return t.x+t.vx}function Cl(t){return t.y+t.vy}function zl(t,n){return n}function Pl(t){return t.x}function Ol(t){return t.y}var ql=10,Ll=Math.PI*(3-Math.sqrt(5));function jl(){t.event.stopImmediatePropagation()}function Dl(){t.event.preventDefault(),t.event.stopImmediatePropagation()}function Rl(t){var n=t.document.documentElement,e=rs(t).on("dragstart.drag",Dl,!0);"onselectstart"in n?e.on("selectstart.drag",Dl,!0):(n.__noselect=n.style.MozUserSelect,n.style.MozUserSelect="none")}function Ul(t,n){var e=t.document.documentElement,r=rs(t).on("dragstart.drag",null);n&&(r.on("click.drag",Dl,!0),setTimeout(function(){r.on("click.drag",null)},0)),"onselectstart"in e?r.on("selectstart.drag",null):(e.style.MozUserSelect=e.__noselect,delete e.__noselect)}function Il(t){return function(){return t}}function Fl(t,n,e,r,i,o,a,u,c,s){this.target=t,this.type=n,this.subject=e,this.identifier=r,this.active=i,this.x=o,this.y=a,this.dx=u,this.dy=c,this._=s}function Yl(){return!t.event.button}function Bl(){return this.parentNode}function Hl(n){return null==n?{x:t.event.x,y:t.event.y}:n}function Xl(t){return function(){return t}}function $l(t){return t[0]}function Vl(t){return t[1]}function Wl(){this._=null}function Zl(t){t.U=t.C=t.L=t.R=t.P=t.N=null}function Gl(t,n){var e=n,r=n.R,i=e.U;i?i.L===e?i.L=r:i.R=r:t._=r,r.U=i,e.U=r,e.R=r.L,e.R&&(e.R.U=e),r.L=e}function Jl(t,n){var e=n,r=n.L,i=e.U;i?i.L===e?i.L=r:i.R=r:t._=r,r.U=i,e.U=r,e.L=r.R,e.L&&(e.L.U=e),r.R=e}function Ql(t){for(;t.L;)t=t.L;return t}function Kl(t,n,e,r){var i=[null,null],o=kf.push(i)-1;return i.left=t,i.right=n,e&&nf(i,t,n,e),r&&nf(i,n,t,r),wf[t.index].halfedges.push(o),wf[n.index].halfedges.push(o),i}function tf(t,n,e){var r=[n,e];return r.left=t,r}function nf(t,n,e,r){t[0]||t[1]?t.left===e?t[1]=r:t[0]=r:(t[0]=r,t.left=n,t.right=e)}function ef(t,n,e,r,i){var o,a=t[0],u=t[1],c=a[0],s=a[1],l=u[0],f=u[1],h=0,d=1,p=l-c,v=f-s;if(o=n-c,p||!(o>0)){if(o/=p,p<0){if(o<h)return;o<d&&(d=o)}else if(p>0){if(o>d)return;o>h&&(h=o)}if(o=r-c,p||!(o<0)){if(o/=p,p<0){if(o>d)return;o>h&&(h=o)}else if(p>0){if(o<h)return;o<d&&(d=o)}if(o=e-s,v||!(o>0)){if(o/=v,v<0){if(o<h)return;o<d&&(d=o)}else if(v>0){if(o>d)return;o>h&&(h=o)}if(o=i-s,v||!(o<0)){if(o/=v,v<0){if(o>d)return;o>h&&(h=o)}else if(v>0){if(o<h)return;o<d&&(d=o)}return!(h>0||d<1)||(h>0&&(t[0]=[c+h*p,s+h*v]),d<1&&(t[1]=[c+d*p,s+d*v]),!0)}}}}}function rf(t,n,e,r,i){var o=t[1];if(o)return!0;var a,u,c=t[0],s=t.left,l=t.right,f=s[0],h=s[1],d=l[0],p=l[1],v=(f+d)/2,g=(h+p)/2;if(p===h){if(v<n||v>=r)return;if(f>d){if(c){if(c[1]>=i)return}else c=[v,e];o=[v,i]}else{if(c){if(c[1]<e)return}else c=[v,i];o=[v,e]}}else if(u=g-(a=(f-d)/(p-h))*v,a<-1||a>1)if(f>d){if(c){if(c[1]>=i)return}else c=[(e-u)/a,e];o=[(i-u)/a,i]}else{if(c){if(c[1]<e)return}else c=[(i-u)/a,i];o=[(e-u)/a,e]}else if(h<p){if(c){if(c[0]>=r)return}else c=[n,a*n+u];o=[r,a*r+u]}else{if(c){if(c[0]<n)return}else c=[r,a*r+u];o=[n,a*n+u]}return t[0]=c,t[1]=o,!0}function of(t,n){var e=t.site,r=n.left,i=n.right;return e===i&&(i=r,r=e),i?Math.atan2(i[1]-r[1],i[0]-r[0]):(e===r?(r=n[1],i=n[0]):(r=n[0],i=n[1]),Math.atan2(r[0]-i[0],i[1]-r[1]))}function af(t,n){return n[+(n.left!==t.site)]}function uf(t,n){return n[+(n.left===t.site)]}Fl.prototype.on=function(){var t=this._.on.apply(this._,arguments);return t===this._?this:t},Wl.prototype={constructor:Wl,insert:function(t,n){var e,r,i;if(t){if(n.P=t,n.N=t.N,t.N&&(t.N.P=n),t.N=n,t.R){for(t=t.R;t.L;)t=t.L;t.L=n}else t.R=n;e=t}else this._?(t=Ql(this._),n.P=null,n.N=t,t.P=t.L=n,e=t):(n.P=n.N=null,this._=n,e=null);for(n.L=n.R=null,n.U=e,n.C=!0,t=n;e&&e.C;)r=e.U,e===r.L?(i=r.R)&&i.C?(e.C=i.C=!1,r.C=!0,t=r):(t===e.R&&(Gl(this,e),e=(t=e).U),e.C=!1,r.C=!0,Jl(this,r)):(i=r.L)&&i.C?(e.C=i.C=!1,r.C=!0,t=r):(t===e.L&&(Jl(this,e),e=(t=e).U),e.C=!1,r.C=!0,Gl(this,r)),e=t.U;this._.C=!1},remove:function(t){t.N&&(t.N.P=t.P),t.P&&(t.P.N=t.N),t.N=t.P=null;var n,e,r,i=t.U,o=t.L,a=t.R;if(e=o?a?Ql(a):o:a,i?i.L===t?i.L=e:i.R=e:this._=e,o&&a?(r=e.C,e.C=t.C,e.L=o,o.U=e,e!==a?(i=e.U,e.U=t.U,t=e.R,i.L=t,e.R=a,a.U=e):(e.U=i,i=e,t=e.R)):(r=t.C,t=e),t&&(t.U=i),!r)if(t&&t.C)t.C=!1;else{do{if(t===this._)break;if(t===i.L){if((n=i.R).C&&(n.C=!1,i.C=!0,Gl(this,i),n=i.R),n.L&&n.L.C||n.R&&n.R.C){n.R&&n.R.C||(n.L.C=!1,n.C=!0,Jl(this,n),n=i.R),n.C=i.C,i.C=n.R.C=!1,Gl(this,i),t=this._;break}}else if((n=i.L).C&&(n.C=!1,i.C=!0,Jl(this,i),n=i.L),n.L&&n.L.C||n.R&&n.R.C){n.L&&n.L.C||(n.R.C=!1,n.C=!0,Gl(this,n),n=i.L),n.C=i.C,i.C=n.L.C=!1,Jl(this,i),t=this._;break}n.C=!0,t=i,i=i.U}while(!t.C);t&&(t.C=!1)}}};var cf,sf=[];function lf(){Zl(this),this.x=this.y=this.arc=this.site=this.cy=null}function ff(t){var n=t.P,e=t.N;if(n&&e){var r=n.site,i=t.site,o=e.site;if(r!==o){var a=i[0],u=i[1],c=r[0]-a,s=r[1]-u,l=o[0]-a,f=o[1]-u,h=2*(c*f-s*l);if(!(h>=-Nf)){var d=c*c+s*s,p=l*l+f*f,v=(f*d-s*p)/h,g=(c*p-l*d)/h,y=sf.pop()||new lf;y.arc=t,y.site=i,y.x=v+a,y.y=(y.cy=g+u)+Math.sqrt(v*v+g*g),t.circle=y;for(var _=null,m=Mf._;m;)if(y.y<m.y||y.y===m.y&&y.x<=m.x){if(!m.L){_=m.P;break}m=m.L}else{if(!m.R){_=m;break}m=m.R}Mf.insert(_,y),_||(cf=y)}}}}function hf(t){var n=t.circle;n&&(n.P||(cf=n.N),Mf.remove(n),sf.push(n),Zl(n),t.circle=null)}var df=[];function pf(){Zl(this),this.edge=this.site=this.circle=null}function vf(t){var n=df.pop()||new pf;return n.site=t,n}function gf(t){hf(t),bf.remove(t),df.push(t),Zl(t)}function yf(t){var n=t.circle,e=n.x,r=n.cy,i=[e,r],o=t.P,a=t.N,u=[t];gf(t);for(var c=o;c.circle&&Math.abs(e-c.circle.x)<Sf&&Math.abs(r-c.circle.cy)<Sf;)o=c.P,u.unshift(c),gf(c),c=o;u.unshift(c),hf(c);for(var s=a;s.circle&&Math.abs(e-s.circle.x)<Sf&&Math.abs(r-s.circle.cy)<Sf;)a=s.N,u.push(s),gf(s),s=a;u.push(s),hf(s);var l,f=u.length;for(l=1;l<f;++l)s=u[l],c=u[l-1],nf(s.edge,c.site,s.site,i);c=u[0],(s=u[f-1]).edge=Kl(c.site,s.site,null,i),ff(c),ff(s)}function _f(t){for(var n,e,r,i,o=t[0],a=t[1],u=bf._;u;)if((r=mf(u,a)-o)>Sf)u=u.L;else{if(!((i=o-xf(u,a))>Sf)){r>-Sf?(n=u.P,e=u):i>-Sf?(n=u,e=u.N):n=e=u;break}if(!u.R){n=u;break}u=u.R}!function(t){wf[t.index]={site:t,halfedges:[]}}(t);var c=vf(t);if(bf.insert(n,c),n||e){if(n===e)return hf(n),e=vf(n.site),bf.insert(c,e),c.edge=e.edge=Kl(n.site,c.site),ff(n),void ff(e);if(e){hf(n),hf(e);var s=n.site,l=s[0],f=s[1],h=t[0]-l,d=t[1]-f,p=e.site,v=p[0]-l,g=p[1]-f,y=2*(h*g-d*v),_=h*h+d*d,m=v*v+g*g,x=[(g*_-d*m)/y+l,(h*m-v*_)/y+f];nf(e.edge,s,p,x),c.edge=Kl(s,t,null,x),e.edge=Kl(t,p,null,x),ff(n),ff(e)}else c.edge=Kl(n.site,c.site)}}function mf(t,n){var e=t.site,r=e[0],i=e[1],o=i-n;if(!o)return r;var a=t.P;if(!a)return-1/0;var u=(e=a.site)[0],c=e[1],s=c-n;if(!s)return u;var l=u-r,f=1/o-1/s,h=l/s;return f?(-h+Math.sqrt(h*h-2*f*(l*l/(-2*s)-c+s/2+i-o/2)))/f+r:(r+u)/2}function xf(t,n){var e=t.N;if(e)return mf(e,n);var r=t.site;return r[1]===n?r[0]:1/0}var bf,wf,Mf,kf,Sf=1e-6,Nf=1e-12;function Tf(t,n){return n[1]-t[1]||n[0]-t[0]}function Af(t,n){var e,r,i,o=t.sort(Tf).pop();for(kf=[],wf=new Array(t.length),bf=new Wl,Mf=new Wl;;)if(i=cf,o&&(!i||o[1]<i.y||o[1]===i.y&&o[0]<i.x))o[0]===e&&o[1]===r||(_f(o),e=o[0],r=o[1]),o=t.pop();else{if(!i)break;yf(i.arc)}if(function(){for(var t,n,e,r,i=0,o=wf.length;i<o;++i)if((t=wf[i])&&(r=(n=t.halfedges).length)){var a=new Array(r),u=new Array(r);for(e=0;e<r;++e)a[e]=e,u[e]=of(t,kf[n[e]]);for(a.sort(function(t,n){return u[n]-u[t]}),e=0;e<r;++e)u[e]=n[a[e]];for(e=0;e<r;++e)n[e]=u[e]}}(),n){var a=+n[0][0],u=+n[0][1],c=+n[1][0],s=+n[1][1];!function(t,n,e,r){for(var i,o=kf.length;o--;)rf(i=kf[o],t,n,e,r)&&ef(i,t,n,e,r)&&(Math.abs(i[0][0]-i[1][0])>Sf||Math.abs(i[0][1]-i[1][1])>Sf)||delete kf[o]}(a,u,c,s),function(t,n,e,r){var i,o,a,u,c,s,l,f,h,d,p,v,g=wf.length,y=!0;for(i=0;i<g;++i)if(o=wf[i]){for(a=o.site,c=o.halfedges,u=c.length;u--;)kf[c[u]]||c.splice(u,1);for(u=0,s=c.length;u<s;)d=uf(o,kf[c[u]]),p=d[0],v=d[1],l=af(o,kf[c[++u%s]]),f=l[0],h=l[1],(Math.abs(p-f)>Sf||Math.abs(v-h)>Sf)&&(c.splice(u,0,kf.push(tf(a,d,Math.abs(p-t)<Sf&&r-v>Sf?[t,Math.abs(f-t)<Sf?h:r]:Math.abs(v-r)<Sf&&e-p>Sf?[Math.abs(h-r)<Sf?f:e,r]:Math.abs(p-e)<Sf&&v-n>Sf?[e,Math.abs(f-e)<Sf?h:n]:Math.abs(v-n)<Sf&&p-t>Sf?[Math.abs(h-n)<Sf?f:t,n]:null))-1),++s);s&&(y=!1)}if(y){var _,m,x,b=1/0;for(i=0,y=null;i<g;++i)(o=wf[i])&&(a=o.site,_=a[0]-t,m=a[1]-n,(x=_*_+m*m)<b&&(b=x,y=o));if(y){var w=[t,n],M=[t,r],k=[e,r],S=[e,n];y.halfedges.push(kf.push(tf(a=y.site,w,M))-1,kf.push(tf(a,M,k))-1,kf.push(tf(a,k,S))-1,kf.push(tf(a,S,w))-1)}}for(i=0;i<g;++i)(o=wf[i])&&(o.halfedges.length||delete wf[i])}(a,u,c,s)}this.edges=kf,this.cells=wf,bf=Mf=kf=wf=null}function Ef(t){return function(){return t}}function Cf(t,n,e){this.target=t,this.type=n,this.transform=e}function zf(t,n,e){this.k=t,this.x=n,this.y=e}Af.prototype={constructor:Af,polygons:function(){var t=this.edges;return this.cells.map(function(n){var e=n.halfedges.map(function(e){return af(n,t[e])});return e.data=n.site.data,e})},triangles:function(){var t=[],n=this.edges;return this.cells.forEach(function(e,r){for(var i,o,a,u,c=e.site,s=e.halfedges,l=-1,f=s.length,h=n[s[f-1]],d=h.left===c?h.right:h.left;++l<f;)i=d,h=n[s[l]],d=h.left===c?h.right:h.left,r<i.index&&r<d.index&&(a=i,u=d,((o=c)[0]-u[0])*(a[1]-o[1])-(o[0]-a[0])*(u[1]-o[1])<0)&&t.push([c.data,i.data,d.data])}),t},links:function(){return this.edges.filter(function(t){return t.right}).map(function(t){return{source:t.left.data,target:t.right.data}})}},zf.prototype={constructor:zf,scale:function(t){return 1===t?this:new zf(this.k*t,this.x,this.y)},translate:function(t,n){return 0===t&0===n?this:new zf(this.k,this.x+this.k*t,this.y+this.k*n)},apply:function(t){return[t[0]*this.k+this.x,t[1]*this.k+this.y]},applyX:function(t){return t*this.k+this.x},applyY:function(t){return t*this.k+this.y},invert:function(t){return[(t[0]-this.x)/this.k,(t[1]-this.y)/this.k]},invertX:function(t){return(t-this.x)/this.k},invertY:function(t){return(t-this.y)/this.k},rescaleX:function(t){return t.copy().domain(t.range().map(this.invertX,this).map(t.invert,t))},rescaleY:function(t){return t.copy().domain(t.range().map(this.invertY,this).map(t.invert,t))},toString:function(){return"translate("+this.x+","+this.y+") scale("+this.k+")"}};var Pf=new zf(1,0,0);function Of(t){return t.__zoom||Pf}function qf(){t.event.stopImmediatePropagation()}function Lf(){t.event.preventDefault(),t.event.stopImmediatePropagation()}function jf(){return!t.event.button}function Df(){var t,n,e=this;return e instanceof SVGElement?(e=e.ownerSVGElement||e,t=e.width.baseVal.value,n=e.height.baseVal.value):(t=e.clientWidth,n=e.clientHeight),[[0,0],[t,n]]}function Rf(){return this.__zoom||Pf}function Uf(t){return function(){return t}}function If(t,n,e){this.target=t,this.type=n,this.selection=e}function Ff(){t.event.stopImmediatePropagation()}function Yf(){t.event.preventDefault(),t.event.stopImmediatePropagation()}Of.prototype=zf.prototype;var Bf={name:"drag"},Hf={name:"space"},Xf={name:"handle"},$f={name:"center"},Vf={name:"x",handles:["e","w"].map(nh),input:function(t,n){return t&&[[t[0],n[0][1]],[t[1],n[1][1]]]},output:function(t){return t&&[t[0][0],t[1][0]]}},Wf={name:"y",handles:["n","s"].map(nh),input:function(t,n){return t&&[[n[0][0],t[0]],[n[1][0],t[1]]]},output:function(t){return t&&[t[0][1],t[1][1]]}},Zf={name:"xy",handles:["n","e","s","w","nw","ne","se","sw"].map(nh),input:function(t){return t},output:function(t){return t}},Gf={overlay:"crosshair",selection:"move",n:"ns-resize",e:"ew-resize",s:"ns-resize",w:"ew-resize",nw:"nwse-resize",ne:"nesw-resize",se:"nwse-resize",sw:"nesw-resize"},Jf={e:"w",w:"e",nw:"ne",ne:"nw",se:"sw",sw:"se"},Qf={n:"s",s:"n",nw:"sw",ne:"se",se:"ne",sw:"nw"},Kf={overlay:1,selection:1,n:null,e:1,s:null,w:-1,nw:-1,ne:1,se:1,sw:-1},th={overlay:1,selection:1,n:-1,e:null,s:1,w:null,nw:-1,ne:-1,se:1,sw:1};function nh(t){return{type:t}}function eh(){return!t.event.button}function rh(){var t=this.ownerSVGElement||this;return[[0,0],[t.width.baseVal.value,t.height.baseVal.value]]}function ih(t){for(;!t.__brush;)if(!(t=t.parentNode))return;return t.__brush}function oh(t){return t[0][0]===t[1][0]||t[0][1]===t[1][1]}function ah(n){var e,r=rh,i=eh,o=Qr(u,"start","brush","end"),a=6;function u(t){var e=t.property("__brush",h).selectAll(".overlay").data([nh("overlay")]);e.enter().append("rect").attr("class","overlay").attr("pointer-events","all").attr("cursor",Gf.overlay).merge(e).each(function(){var t=ih(this).extent;rs(this).attr("x",t[0][0]).attr("y",t[0][1]).attr("width",t[1][0]-t[0][0]).attr("height",t[1][1]-t[0][1])}),t.selectAll(".selection").data([nh("selection")]).enter().append("rect").attr("class","selection").attr("cursor",Gf.selection).attr("fill","#777").attr("fill-opacity",.3).attr("stroke","#fff").attr("shape-rendering","crispEdges");var r=t.selectAll(".handle").data(n.handles,function(t){return t.type});r.exit().remove(),r.enter().append("rect").attr("class",function(t){return"handle handle--"+t.type}).attr("cursor",function(t){return Gf[t.type]}),t.each(c).attr("fill","none").attr("pointer-events","all").style("-webkit-tap-highlight-color","rgba(0,0,0,0)").on("mousedown.brush touchstart.brush",f)}function c(){var t=rs(this),n=ih(this).selection;n?(t.selectAll(".selection").style("display",null).attr("x",n[0][0]).attr("y",n[0][1]).attr("width",n[1][0]-n[0][0]).attr("height",n[1][1]-n[0][1]),t.selectAll(".handle").style("display",null).attr("x",function(t){return"e"===t.type[t.type.length-1]?n[1][0]-a/2:n[0][0]-a/2}).attr("y",function(t){return"s"===t.type[0]?n[1][1]-a/2:n[0][1]-a/2}).attr("width",function(t){return"n"===t.type||"s"===t.type?n[1][0]-n[0][0]+a:a}).attr("height",function(t){return"e"===t.type||"w"===t.type?n[1][1]-n[0][1]+a:a})):t.selectAll(".selection,.handle").style("display","none").attr("x",null).attr("y",null).attr("width",null).attr("height",null)}function s(t,n){return t.__brush.emitter||new l(t,n)}function l(t,n){this.that=t,this.args=n,this.state=t.__brush,this.active=0}function f(){if(t.event.touches){if(t.event.changedTouches.length<t.event.touches.length)return Yf()}else if(e)return;if(i.apply(this,arguments)){var r,o,a,u,l,f,h,d,p,v,g,y,_,m=this,x=t.event.target.__data__.type,b="selection"===(t.event.metaKey?x="overlay":x)?Bf:t.event.altKey?$f:Xf,w=n===Wf?null:Kf[x],M=n===Vf?null:th[x],k=ih(m),S=k.extent,N=k.selection,T=S[0][0],A=S[0][1],E=S[1][0],C=S[1][1],z=w&&M&&t.event.shiftKey,P=Cc(m),O=P,q=s(m,arguments).beforestart();"overlay"===x?k.selection=N=[[r=n===Wf?T:P[0],a=n===Vf?A:P[1]],[l=n===Wf?E:r,h=n===Vf?C:a]]:(r=N[0][0],a=N[0][1],l=N[1][0],h=N[1][1]),o=r,u=a,f=l,d=h;var L=rs(m).attr("pointer-events","none"),j=L.selectAll(".overlay").attr("cursor",Gf[x]);if(t.event.touches)L.on("touchmove.brush",R,!0).on("touchend.brush touchcancel.brush",I,!0);else{var D=rs(t.event.view).on("keydown.brush",function(){switch(t.event.keyCode){case 16:z=w&&M;break;case 18:b===Xf&&(w&&(l=f-p*w,r=o+p*w),M&&(h=d-v*M,a=u+v*M),b=$f,U());break;case 32:b!==Xf&&b!==$f||(w<0?l=f-p:w>0&&(r=o-p),M<0?h=d-v:M>0&&(a=u-v),b=Hf,j.attr("cursor",Gf.selection),U());break;default:return}Yf()},!0).on("keyup.brush",function(){switch(t.event.keyCode){case 16:z&&(y=_=z=!1,U());break;case 18:b===$f&&(w<0?l=f:w>0&&(r=o),M<0?h=d:M>0&&(a=u),b=Xf,U());break;case 32:b===Hf&&(t.event.altKey?(w&&(l=f-p*w,r=o+p*w),M&&(h=d-v*M,a=u+v*M),b=$f):(w<0?l=f:w>0&&(r=o),M<0?h=d:M>0&&(a=u),b=Xf),j.attr("cursor",Gf[x]),U());break;default:return}Yf()},!0).on("mousemove.brush",R,!0).on("mouseup.brush",I,!0);Rl(t.event.view)}Ff(),ys(m),c.call(m),q.start()}function R(){var t=Cc(m);!z||y||_||(Math.abs(t[0]-O[0])>Math.abs(t[1]-O[1])?_=!0:y=!0),O=t,g=!0,Yf(),U()}function U(){var t;switch(p=O[0]-P[0],v=O[1]-P[1],b){case Hf:case Bf:w&&(p=Math.max(T-r,Math.min(E-l,p)),o=r+p,f=l+p),M&&(v=Math.max(A-a,Math.min(C-h,v)),u=a+v,d=h+v);break;case Xf:w<0?(p=Math.max(T-r,Math.min(E-r,p)),o=r+p,f=l):w>0&&(p=Math.max(T-l,Math.min(E-l,p)),o=r,f=l+p),M<0?(v=Math.max(A-a,Math.min(C-a,v)),u=a+v,d=h):M>0&&(v=Math.max(A-h,Math.min(C-h,v)),u=a,d=h+v);break;case $f:w&&(o=Math.max(T,Math.min(E,r-p*w)),f=Math.max(T,Math.min(E,l+p*w))),M&&(u=Math.max(A,Math.min(C,a-v*M)),d=Math.max(A,Math.min(C,h+v*M)))}f<o&&(w*=-1,t=r,r=l,l=t,t=o,o=f,f=t,x in Jf&&j.attr("cursor",Gf[x=Jf[x]])),d<u&&(M*=-1,t=a,a=h,h=t,t=u,u=d,d=t,x in Qf&&j.attr("cursor",Gf[x=Qf[x]])),N=k.selection,y&&(o=N[0][0],f=N[1][0]),_&&(u=N[0][1],d=N[1][1]),N[0][0]===o&&N[0][1]===u&&N[1][0]===f&&N[1][1]===d||(k.selection=[[o,u],[f,d]],c.call(m),q.brush())}function I(){if(Ff(),t.event.touches){if(t.event.touches.length)return;e&&clearTimeout(e),e=setTimeout(function(){e=null},500),L.on("touchmove.brush touchend.brush touchcancel.brush",null)}else Ul(t.event.view,g),D.on("keydown.brush keyup.brush mousemove.brush mouseup.brush",null);L.attr("pointer-events","all"),j.attr("cursor",Gf.overlay),oh(N)&&(k.selection=null,c.call(m)),q.end()}}function h(){var t=this.__brush||{selection:null};return t.extent=r.apply(this,arguments),t.dim=n,t}return u.move=function(t,e){t.selection?t.on("start.brush",function(){s(this,arguments).beforestart().start()}).on("interrupt.brush end.brush",function(){s(this,arguments).end()}).tween("brush",function(){var t=this,r=t.__brush,i=s(t,arguments),o=r.selection,a=n.input("function"==typeof e?e.apply(this,arguments):e,r.extent),u=kr(o,a);function l(n){r.selection=1===n&&oh(a)?null:u(n),c.call(t),i.brush()}return o&&a?l:l(1)}):t.each(function(){var t=arguments,r=this.__brush,i=n.input("function"==typeof e?e.apply(this,t):e,r.extent),o=s(this,t).beforestart();ys(this),r.selection=null==i||oh(i)?null:i,c.call(this),o.start().brush().end()})},l.prototype={beforestart:function(){return 1==++this.active&&(this.state.emitter=this,this.starting=!0),this},start:function(){return this.starting&&(this.starting=!1,this.emit("start")),this},brush:function(){return this.emit("brush"),this},end:function(){return 0==--this.active&&(delete this.state.emitter,this.emit("end")),this},emit:function(t){Tc(new If(u,t,n.output(this.state.selection)),o.apply,o,[t,this.that,this.args])}},u.extent=function(t){return arguments.length?(r="function"==typeof t?t:Uf([[+t[0][0],+t[0][1]],[+t[1][0],+t[1][1]]]),u):r},u.filter=function(t){return arguments.length?(i="function"==typeof t?t:Uf(!!t),u):i},u.handleSize=function(t){return arguments.length?(a=+t,u):a},u.on=function(){var t=o.on.apply(o,arguments);return t===o?u:t},u}var uh=Math.cos,ch=Math.sin,sh=Math.PI,lh=sh/2,fh=2*sh,hh=Math.max,dh=Array.prototype.slice;function ph(t){return function(){return t}}function vh(t){return t.source}function gh(t){return t.target}function yh(t){return t.radius}function _h(t){return t.startAngle}function mh(t){return t.endAngle}function xh(){return new bh}function bh(){this.reset()}bh.prototype={constructor:bh,reset:function(){this.s=this.t=0},add:function(t){Mh(wh,t,this.t),Mh(this,wh.s,this.s),this.s?this.t+=wh.t:this.s=wh.t},valueOf:function(){return this.s}};var wh=new bh;function Mh(t,n,e){var r=t.s=n+e,i=r-n,o=r-i;t.t=n-o+(e-i)}var kh=1e-6,Sh=1e-12,Nh=Math.PI,Th=Nh/2,Ah=Nh/4,Eh=2*Nh,Ch=180/Nh,zh=Nh/180,Ph=Math.abs,Oh=Math.atan,qh=Math.atan2,Lh=Math.cos,jh=Math.ceil,Dh=Math.exp,Rh=Math.log,Uh=Math.pow,Ih=Math.sin,Fh=Math.sign||function(t){return t>0?1:t<0?-1:0},Yh=Math.sqrt,Bh=Math.tan;function Hh(t){return t>1?0:t<-1?Nh:Math.acos(t)}function Xh(t){return t>1?Th:t<-1?-Th:Math.asin(t)}function $h(t){return(t=Ih(t/2))*t}function Vh(){}function Wh(t,n){t&&Gh.hasOwnProperty(t.type)&&Gh[t.type](t,n)}var Zh={Feature:function(t,n){Wh(t.geometry,n)},FeatureCollection:function(t,n){for(var e=t.features,r=-1,i=e.length;++r<i;)Wh(e[r].geometry,n)}},Gh={Sphere:function(t,n){n.sphere()},Point:function(t,n){t=t.coordinates,n.point(t[0],t[1],t[2])},MultiPoint:function(t,n){for(var e=t.coordinates,r=-1,i=e.length;++r<i;)t=e[r],n.point(t[0],t[1],t[2])},LineString:function(t,n){Jh(t.coordinates,n,0)},MultiLineString:function(t,n){for(var e=t.coordinates,r=-1,i=e.length;++r<i;)Jh(e[r],n,0)},Polygon:function(t,n){Qh(t.coordinates,n)},MultiPolygon:function(t,n){for(var e=t.coordinates,r=-1,i=e.length;++r<i;)Qh(e[r],n)},GeometryCollection:function(t,n){for(var e=t.geometries,r=-1,i=e.length;++r<i;)Wh(e[r],n)}};function Jh(t,n,e){var r,i=-1,o=t.length-e;for(n.lineStart();++i<o;)r=t[i],n.point(r[0],r[1],r[2]);n.lineEnd()}function Qh(t,n){var e=-1,r=t.length;for(n.polygonStart();++e<r;)Jh(t[e],n,1);n.polygonEnd()}function Kh(t,n){t&&Zh.hasOwnProperty(t.type)?Zh[t.type](t,n):Wh(t,n)}var td,nd,ed,rd,id,od,ad,ud,cd,sd,ld,fd,hd,dd=xh(),pd=xh(),vd={point:Vh,lineStart:Vh,lineEnd:Vh,polygonStart:function(){dd.reset(),vd.lineStart=gd,vd.lineEnd=yd},polygonEnd:function(){var t=+dd;pd.add(t<0?Eh+t:t),this.lineStart=this.lineEnd=this.point=Vh},sphere:function(){pd.add(Eh)}};function gd(){vd.point=_d}function yd(){md(td,nd)}function _d(t,n){vd.point=md,td=t,nd=n,ed=t*=zh,rd=Lh(n=(n*=zh)/2+Ah),id=Ih(n)}function md(t,n){var e=(t*=zh)-ed,r=e>=0?1:-1,i=r*e,o=Lh(n=(n*=zh)/2+Ah),a=Ih(n),u=id*a,c=rd*o+u*Lh(i),s=u*r*Ih(i);dd.add(qh(s,c)),ed=t,rd=o,id=a}function xd(t){return[qh(t[1],t[0]),Xh(t[2])]}function bd(t){var n=t[0],e=t[1],r=Lh(e);return[r*Lh(n),r*Ih(n),Ih(e)]}function wd(t,n){return t[0]*n[0]+t[1]*n[1]+t[2]*n[2]}function Md(t,n){return[t[1]*n[2]-t[2]*n[1],t[2]*n[0]-t[0]*n[2],t[0]*n[1]-t[1]*n[0]]}function kd(t,n){t[0]+=n[0],t[1]+=n[1],t[2]+=n[2]}function Sd(t,n){return[t[0]*n,t[1]*n,t[2]*n]}function Nd(t){var n=Yh(t[0]*t[0]+t[1]*t[1]+t[2]*t[2]);t[0]/=n,t[1]/=n,t[2]/=n}var Td,Ad,Ed,Cd,zd,Pd,Od,qd,Ld,jd,Dd,Rd,Ud,Id,Fd,Yd,Bd,Hd,Xd=xh(),$d={point:Vd,lineStart:Zd,lineEnd:Gd,polygonStart:function(){$d.point=Jd,$d.lineStart=Qd,$d.lineEnd=Kd,Xd.reset(),vd.polygonStart()},polygonEnd:function(){vd.polygonEnd(),$d.point=Vd,$d.lineStart=Zd,$d.lineEnd=Gd,dd<0?(od=-(ud=180),ad=-(cd=90)):Xd>kh?cd=90:Xd<-kh&&(ad=-90),Ad[0]=od,Ad[1]=ud}};function Vd(t,n){Td.push(Ad=[od=t,ud=t]),n<ad&&(ad=n),n>cd&&(cd=n)}function Wd(t,n){var e=bd([t*zh,n*zh]);if(hd){var r=Md(hd,e),i=[r[1],-r[0],0],o=Md(i,r);Nd(o),o=xd(o);var a,u=t-sd,c=u>0?1:-1,s=o[0]*Ch*c,l=Ph(u)>180;l^(c*sd<s&&s<c*t)?(a=o[1]*Ch)>cd&&(cd=a):l^(c*sd<(s=(s+360)%360-180)&&s<c*t)?(a=-o[1]*Ch)<ad&&(ad=a):(n<ad&&(ad=n),n>cd&&(cd=n)),l?t<sd?tp(od,t)>tp(od,ud)&&(ud=t):tp(t,ud)>tp(od,ud)&&(od=t):ud>=od?(t<od&&(od=t),t>ud&&(ud=t)):t>sd?tp(od,t)>tp(od,ud)&&(ud=t):tp(t,ud)>tp(od,ud)&&(od=t)}else Vd(t,n);hd=e,sd=t}function Zd(){$d.point=Wd}function Gd(){Ad[0]=od,Ad[1]=ud,$d.point=Vd,hd=null}function Jd(t,n){if(hd){var e=t-sd;Xd.add(Ph(e)>180?e+(e>0?360:-360):e)}else ld=t,fd=n;vd.point(t,n),Wd(t,n)}function Qd(){vd.lineStart()}function Kd(){Jd(ld,fd),vd.lineEnd(),Ph(Xd)>kh&&(od=-(ud=180)),Ad[0]=od,Ad[1]=ud,hd=null}function tp(t,n){return(n-=t)<0?n+360:n}function np(t,n){return t[0]-n[0]}function ep(t,n){return t[0]<=t[1]?t[0]<=n&&n<=t[1]:n<t[0]||t[1]<n}var rp={sphere:Vh,point:ip,lineStart:ap,lineEnd:sp,polygonStart:function(){rp.lineStart=lp,rp.lineEnd=fp},polygonEnd:function(){rp.lineStart=ap,rp.lineEnd=sp}};function ip(t,n){t*=zh;var e=Lh(n*=zh);op(e*Lh(t),e*Ih(t),Ih(n))}function op(t,n,e){zd+=(t-zd)/++Ed,Pd+=(n-Pd)/Ed,Od+=(e-Od)/Ed}function ap(){rp.point=up}function up(t,n){t*=zh;var e=Lh(n*=zh);Yd=e*Lh(t),Bd=e*Ih(t),Hd=Ih(n),rp.point=cp,op(Yd,Bd,Hd)}function cp(t,n){t*=zh;var e=Lh(n*=zh),r=e*Lh(t),i=e*Ih(t),o=Ih(n),a=qh(Yh((a=Bd*o-Hd*i)*a+(a=Hd*r-Yd*o)*a+(a=Yd*i-Bd*r)*a),Yd*r+Bd*i+Hd*o);Cd+=a,qd+=a*(Yd+(Yd=r)),Ld+=a*(Bd+(Bd=i)),jd+=a*(Hd+(Hd=o)),op(Yd,Bd,Hd)}function sp(){rp.point=ip}function lp(){rp.point=hp}function fp(){dp(Id,Fd),rp.point=ip}function hp(t,n){Id=t,Fd=n,t*=zh,n*=zh,rp.point=dp;var e=Lh(n);Yd=e*Lh(t),Bd=e*Ih(t),Hd=Ih(n),op(Yd,Bd,Hd)}function dp(t,n){t*=zh;var e=Lh(n*=zh),r=e*Lh(t),i=e*Ih(t),o=Ih(n),a=Bd*o-Hd*i,u=Hd*r-Yd*o,c=Yd*i-Bd*r,s=Yh(a*a+u*u+c*c),l=Yd*r+Bd*i+Hd*o,f=s&&-Hh(l)/s,h=qh(s,l);Dd+=f*a,Rd+=f*u,Ud+=f*c,Cd+=h,qd+=h*(Yd+(Yd=r)),Ld+=h*(Bd+(Bd=i)),jd+=h*(Hd+(Hd=o)),op(Yd,Bd,Hd)}function pp(t){return function(){return t}}function vp(t,n){function e(e,r){return e=t(e,r),n(e[0],e[1])}return t.invert&&n.invert&&(e.invert=function(e,r){return(e=n.invert(e,r))&&t.invert(e[0],e[1])}),e}function gp(t,n){return[t>Nh?t-Eh:t<-Nh?t+Eh:t,n]}function yp(t,n,e){return(t%=Eh)?n||e?vp(mp(t),xp(n,e)):mp(t):n||e?xp(n,e):gp}function _p(t){return function(n,e){return[(n+=t)>Nh?n-Eh:n<-Nh?n+Eh:n,e]}}function mp(t){var n=_p(t);return n.invert=_p(-t),n}function xp(t,n){var e=Lh(t),r=Ih(t),i=Lh(n),o=Ih(n);function a(t,n){var a=Lh(n),u=Lh(t)*a,c=Ih(t)*a,s=Ih(n),l=s*e+u*r;return[qh(c*i-l*o,u*e-s*r),Xh(l*i+c*o)]}return a.invert=function(t,n){var a=Lh(n),u=Lh(t)*a,c=Ih(t)*a,s=Ih(n),l=s*i-c*o;return[qh(c*i+s*o,u*e+l*r),Xh(l*e-u*r)]},a}function bp(t,n,e,r,i,o){if(e){var a=Lh(n),u=Ih(n),c=r*e;null==i?(i=n+r*Eh,o=n-c/2):(i=wp(a,i),o=wp(a,o),(r>0?i<o:i>o)&&(i+=r*Eh));for(var s,l=i;r>0?l>o:l<o;l-=c)s=xd([a,-u*Lh(l),-u*Ih(l)]),t.point(s[0],s[1])}}function wp(t,n){(n=bd(n))[0]-=t,Nd(n);var e=Hh(-n[1]);return((-n[2]<0?-e:e)+Eh-kh)%Eh}function Mp(){var t,n=[];return{point:function(n,e){t.push([n,e])},lineStart:function(){n.push(t=[])},lineEnd:Vh,rejoin:function(){n.length>1&&n.push(n.pop().concat(n.shift()))},result:function(){var e=n;return n=[],t=null,e}}}function kp(t,n){return Ph(t[0]-n[0])<kh&&Ph(t[1]-n[1])<kh}function Sp(t,n,e,r){this.x=t,this.z=n,this.o=e,this.e=r,this.v=!1,this.n=this.p=null}function Np(t,n,e,r,i){var o,a,u=[],c=[];if(t.forEach(function(t){if(!((n=t.length-1)<=0)){var n,e,r=t[0],a=t[n];if(kp(r,a)){for(i.lineStart(),o=0;o<n;++o)i.point((r=t[o])[0],r[1]);i.lineEnd()}else u.push(e=new Sp(r,t,null,!0)),c.push(e.o=new Sp(r,null,e,!1)),u.push(e=new Sp(a,t,null,!1)),c.push(e.o=new Sp(a,null,e,!0))}}),u.length){for(c.sort(n),Tp(u),Tp(c),o=0,a=c.length;o<a;++o)c[o].e=e=!e;for(var s,l,f=u[0];;){for(var h=f,d=!0;h.v;)if((h=h.n)===f)return;s=h.z,i.lineStart();do{if(h.v=h.o.v=!0,h.e){if(d)for(o=0,a=s.length;o<a;++o)i.point((l=s[o])[0],l[1]);else r(h.x,h.n.x,1,i);h=h.n}else{if(d)for(s=h.p.z,o=s.length-1;o>=0;--o)i.point((l=s[o])[0],l[1]);else r(h.x,h.p.x,-1,i);h=h.p}h=h.o,s=h.z,d=!d}while(!h.v);i.lineEnd()}}}function Tp(t){if(n=t.length){for(var n,e,r=0,i=t[0];++r<n;)i.n=e=t[r],e.p=i,i=e;i.n=e=t[0],e.p=i}}gp.invert=gp;var Ap=1e9,Ep=-Ap;function Cp(t,n,e,r){function i(i,o){return t<=i&&i<=e&&n<=o&&o<=r}function o(i,o,u,s){var l=0,f=0;if(null==i||(l=a(i,u))!==(f=a(o,u))||c(i,o)<0^u>0)do{s.point(0===l||3===l?t:e,l>1?r:n)}while((l=(l+u+4)%4)!==f);else s.point(o[0],o[1])}function a(r,i){return Ph(r[0]-t)<kh?i>0?0:3:Ph(r[0]-e)<kh?i>0?2:1:Ph(r[1]-n)<kh?i>0?1:0:i>0?3:2}function u(t,n){return c(t.x,n.x)}function c(t,n){var e=a(t,1),r=a(n,1);return e!==r?e-r:0===e?n[1]-t[1]:1===e?t[0]-n[0]:2===e?t[1]-n[1]:n[0]-t[0]}return function(a){var c,s,l,f,h,d,p,v,g,y,_,m=a,x=Mp(),b={point:w,lineStart:function(){b.point=k,s&&s.push(l=[]),y=!0,g=!1,p=v=NaN},lineEnd:function(){c&&(k(f,h),d&&g&&x.rejoin(),c.push(x.result())),b.point=w,g&&m.lineEnd()},polygonStart:function(){m=x,c=[],s=[],_=!0},polygonEnd:function(){var n=function(){for(var n=0,e=0,i=s.length;e<i;++e)for(var o,a,u=s[e],c=1,l=u.length,f=u[0],h=f[0],d=f[1];c<l;++c)o=h,a=d,f=u[c],h=f[0],d=f[1],a<=r?d>r&&(h-o)*(r-a)>(d-a)*(t-o)&&++n:d<=r&&(h-o)*(r-a)<(d-a)*(t-o)&&--n;return n}(),e=_&&n,i=(c=M(c)).length;(e||i)&&(a.polygonStart(),e&&(a.lineStart(),o(null,null,1,a),a.lineEnd()),i&&Np(c,u,n,o,a),a.polygonEnd()),m=a,c=s=l=null}};function w(t,n){i(t,n)&&m.point(t,n)}function k(o,a){var u=i(o,a);if(s&&l.push([o,a]),y)f=o,h=a,d=u,y=!1,u&&(m.lineStart(),m.point(o,a));else if(u&&g)m.point(o,a);else{var c=[p=Math.max(Ep,Math.min(Ap,p)),v=Math.max(Ep,Math.min(Ap,v))],x=[o=Math.max(Ep,Math.min(Ap,o)),a=Math.max(Ep,Math.min(Ap,a))];!function(t,n,e,r,i,o){var a,u=t[0],c=t[1],s=n[0],l=n[1],f=0,h=1,d=s-u,p=l-c;if(a=e-u,d||!(a>0)){if(a/=d,d<0){if(a<f)return;a<h&&(h=a)}else if(d>0){if(a>h)return;a>f&&(f=a)}if(a=i-u,d||!(a<0)){if(a/=d,d<0){if(a>h)return;a>f&&(f=a)}else if(d>0){if(a<f)return;a<h&&(h=a)}if(a=r-c,p||!(a>0)){if(a/=p,p<0){if(a<f)return;a<h&&(h=a)}else if(p>0){if(a>h)return;a>f&&(f=a)}if(a=o-c,p||!(a<0)){if(a/=p,p<0){if(a>h)return;a>f&&(f=a)}else if(p>0){if(a<f)return;a<h&&(h=a)}return f>0&&(t[0]=u+f*d,t[1]=c+f*p),h<1&&(n[0]=u+h*d,n[1]=c+h*p),!0}}}}}(c,x,t,n,e,r)?u&&(m.lineStart(),m.point(o,a),_=!1):(g||(m.lineStart(),m.point(c[0],c[1])),m.point(x[0],x[1]),u||m.lineEnd(),_=!1)}p=o,v=a,g=u}return b}}var zp,Pp,Op,qp=xh(),Lp={sphere:Vh,point:Vh,lineStart:function(){Lp.point=Dp,Lp.lineEnd=jp},lineEnd:Vh,polygonStart:Vh,polygonEnd:Vh};function jp(){Lp.point=Lp.lineEnd=Vh}function Dp(t,n){zp=t*=zh,Pp=Ih(n*=zh),Op=Lh(n),Lp.point=Rp}function Rp(t,n){t*=zh;var e=Ih(n*=zh),r=Lh(n),i=Ph(t-zp),o=Lh(i),a=Ih(i),u=r*a,c=Op*e-Pp*r*o,s=Pp*e+Op*r*o;qp.add(qh(Yh(u*u+c*c),s)),zp=t,Pp=e,Op=r}function Up(t){return qp.reset(),Kh(t,Lp),+qp}var Ip=[null,null],Fp={type:"LineString",coordinates:Ip};function Yp(t,n,e){var r=v(t,n-kh,e).concat(n);return function(t){return r.map(function(n){return[t,n]})}}function Bp(t,n,e){var r=v(t,n-kh,e).concat(n);return function(t){return r.map(function(n){return[n,t]})}}function Hp(t){return t}var Xp,$p,Vp,Wp,Zp=xh(),Gp=xh(),Jp={point:Vh,lineStart:Vh,lineEnd:Vh,polygonStart:function(){Jp.lineStart=Qp,Jp.lineEnd=nv},polygonEnd:function(){Jp.lineStart=Jp.lineEnd=Jp.point=Vh,Zp.add(Ph(Gp)),Gp.reset()},result:function(){var t=Zp/2;return Zp.reset(),t}};function Qp(){Jp.point=Kp}function Kp(t,n){Jp.point=tv,Xp=Vp=t,$p=Wp=n}function tv(t,n){Gp.add(Wp*t-Vp*n),Vp=t,Wp=n}function nv(){tv(Xp,$p)}var ev,rv,iv,ov,av=1/0,uv=av,cv=-av,sv=cv,lv={point:function(t,n){t<av&&(av=t),t>cv&&(cv=t),n<uv&&(uv=n),n>sv&&(sv=n)},lineStart:Vh,lineEnd:Vh,polygonStart:Vh,polygonEnd:Vh,result:function(){var t=[[av,uv],[cv,sv]];return cv=sv=-(uv=av=1/0),t}},fv=0,hv=0,dv=0,pv=0,vv=0,gv=0,yv=0,_v=0,mv=0,xv={point:bv,lineStart:wv,lineEnd:Sv,polygonStart:function(){xv.lineStart=Nv,xv.lineEnd=Tv},polygonEnd:function(){xv.point=bv,xv.lineStart=wv,xv.lineEnd=Sv},result:function(){var t=mv?[yv/mv,_v/mv]:gv?[pv/gv,vv/gv]:dv?[fv/dv,hv/dv]:[NaN,NaN];return fv=hv=dv=pv=vv=gv=yv=_v=mv=0,t}};function bv(t,n){fv+=t,hv+=n,++dv}function wv(){xv.point=Mv}function Mv(t,n){xv.point=kv,bv(iv=t,ov=n)}function kv(t,n){var e=t-iv,r=n-ov,i=Yh(e*e+r*r);pv+=i*(iv+t)/2,vv+=i*(ov+n)/2,gv+=i,bv(iv=t,ov=n)}function Sv(){xv.point=bv}function Nv(){xv.point=Av}function Tv(){Ev(ev,rv)}function Av(t,n){xv.point=Ev,bv(ev=iv=t,rv=ov=n)}function Ev(t,n){var e=t-iv,r=n-ov,i=Yh(e*e+r*r);pv+=i*(iv+t)/2,vv+=i*(ov+n)/2,gv+=i,yv+=(i=ov*t-iv*n)*(iv+t),_v+=i*(ov+n),mv+=3*i,bv(iv=t,ov=n)}function Cv(t){var n=4.5,e={point:r,lineStart:function(){e.point=i},lineEnd:a,polygonStart:function(){e.lineEnd=u},polygonEnd:function(){e.lineEnd=a,e.point=r},pointRadius:function(t){return n=t,e},result:Vh};function r(e,r){t.moveTo(e+n,r),t.arc(e,r,n,0,Eh)}function i(n,r){t.moveTo(n,r),e.point=o}function o(n,e){t.lineTo(n,e)}function a(){e.point=r}function u(){t.closePath()}return e}function zv(){var t=Pv(4.5),n=[],e={point:r,lineStart:function(){e.point=i},lineEnd:a,polygonStart:function(){e.lineEnd=u},polygonEnd:function(){e.lineEnd=a,e.point=r},pointRadius:function(n){return t=Pv(n),e},result:function(){if(n.length){var t=n.join("");return n=[],t}}};function r(e,r){n.push("M",e,",",r,t)}function i(t,r){n.push("M",t,",",r),e.point=o}function o(t,e){n.push("L",t,",",e)}function a(){e.point=r}function u(){n.push("Z")}return e}function Pv(t){return"m0,"+t+"a"+t+","+t+" 0 1,1 0,"+-2*t+"a"+t+","+t+" 0 1,1 0,"+2*t+"z"}var Ov=xh();function qv(t,n,e,r){return function(i,o){var a,u,c,s=n(o),l=i.invert(r[0],r[1]),f=Mp(),h=n(f),d=!1,p={point:v,lineStart:y,lineEnd:_,polygonStart:function(){p.point=m,p.lineStart=x,p.lineEnd=b,u=[],a=[]},polygonEnd:function(){p.point=v,p.lineStart=y,p.lineEnd=_,u=M(u);var t=function(t,n){var e=n[0],r=n[1],i=[Ih(e),-Lh(e),0],o=0,a=0;Ov.reset();for(var u=0,c=t.length;u<c;++u)if(l=(s=t[u]).length)for(var s,l,f=s[l-1],h=f[0],d=f[1]/2+Ah,p=Ih(d),v=Lh(d),g=0;g<l;++g,h=_,p=x,v=b,f=y){var y=s[g],_=y[0],m=y[1]/2+Ah,x=Ih(m),b=Lh(m),w=_-h,M=w>=0?1:-1,k=M*w,S=k>Nh,N=p*x;if(Ov.add(qh(N*M*Ih(k),v*b+N*Lh(k))),o+=S?w+M*Eh:w,S^h>=e^_>=e){var T=Md(bd(f),bd(y));Nd(T);var A=Md(i,T);Nd(A);var E=(S^w>=0?-1:1)*Xh(A[2]);(r>E||r===E&&(T[0]||T[1]))&&(a+=S^w>=0?1:-1)}}return(o<-kh||o<kh&&Ov<-kh)^1&a}(a,l);u.length?(d||(o.polygonStart(),d=!0),Np(u,jv,t,e,o)):t&&(d||(o.polygonStart(),d=!0),o.lineStart(),e(null,null,1,o),o.lineEnd()),d&&(o.polygonEnd(),d=!1),u=a=null},sphere:function(){o.polygonStart(),o.lineStart(),e(null,null,1,o),o.lineEnd(),o.polygonEnd()}};function v(n,e){var r=i(n,e);t(n=r[0],e=r[1])&&o.point(n,e)}function g(t,n){var e=i(t,n);s.point(e[0],e[1])}function y(){p.point=g,s.lineStart()}function _(){p.point=v,s.lineEnd()}function m(t,n){c.push([t,n]);var e=i(t,n);h.point(e[0],e[1])}function x(){h.lineStart(),c=[]}function b(){m(c[0][0],c[0][1]),h.lineEnd();var t,n,e,r,i=h.clean(),s=f.result(),l=s.length;if(c.pop(),a.push(c),c=null,l)if(1&i){if(e=s[0],(n=e.length-1)>0){for(d||(o.polygonStart(),d=!0),o.lineStart(),t=0;t<n;++t)o.point((r=e[t])[0],r[1]);o.lineEnd()}}else l>1&&2&i&&s.push(s.pop().concat(s.shift())),u.push(s.filter(Lv))}return p}}function Lv(t){return t.length>1}function jv(t,n){return((t=t.x)[0]<0?t[1]-Th-kh:Th-t[1])-((n=n.x)[0]<0?n[1]-Th-kh:Th-n[1])}var Dv=qv(function(){return!0},function(t){var n,e=NaN,r=NaN,i=NaN;return{lineStart:function(){t.lineStart(),n=1},point:function(o,a){var u=o>0?Nh:-Nh,c=Ph(o-e);Ph(c-Nh)<kh?(t.point(e,r=(r+a)/2>0?Th:-Th),t.point(i,r),t.lineEnd(),t.lineStart(),t.point(u,r),t.point(o,r),n=0):i!==u&&c>=Nh&&(Ph(e-i)<kh&&(e-=i*kh),Ph(o-u)<kh&&(o-=u*kh),r=function(t,n,e,r){var i,o,a=Ih(t-e);return Ph(a)>kh?Oh((Ih(n)*(o=Lh(r))*Ih(e)-Ih(r)*(i=Lh(n))*Ih(t))/(i*o*a)):(n+r)/2}(e,r,o,a),t.point(i,r),t.lineEnd(),t.lineStart(),t.point(u,r),n=0),t.point(e=o,r=a),i=u},lineEnd:function(){t.lineEnd(),e=r=NaN},clean:function(){return 2-n}}},function(t,n,e,r){var i;if(null==t)i=e*Th,r.point(-Nh,i),r.point(0,i),r.point(Nh,i),r.point(Nh,0),r.point(Nh,-i),r.point(0,-i),r.point(-Nh,-i),r.point(-Nh,0),r.point(-Nh,i);else if(Ph(t[0]-n[0])>kh){var o=t[0]<n[0]?Nh:-Nh;i=e*o/2,r.point(-o,i),r.point(0,i),r.point(o,i)}else r.point(n[0],n[1])},[-Nh,-Th]);function Rv(t){function n(){}var e=n.prototype=Object.create(Uv.prototype);for(var r in t)e[r]=t[r];return function(t){var e=new n;return e.stream=t,e}}function Uv(){}function Iv(t,n,e){var r=n[1][0]-n[0][0],i=n[1][1]-n[0][1],o=t.clipExtent&&t.clipExtent();t.scale(150).translate([0,0]),null!=o&&t.clipExtent(null),Kh(e,t.stream(lv));var a=lv.result(),u=Math.min(r/(a[1][0]-a[0][0]),i/(a[1][1]-a[0][1])),c=+n[0][0]+(r-u*(a[1][0]+a[0][0]))/2,s=+n[0][1]+(i-u*(a[1][1]+a[0][1]))/2;return null!=o&&t.clipExtent(o),t.scale(150*u).translate([c,s])}function Fv(t){return function(n,e){return Iv(t,[[0,0],n],e)}}function Yv(t){return function(n,e){return Iv(t,n,e)}}Uv.prototype={point:function(t,n){this.stream.point(t,n)},sphere:function(){this.stream.sphere()},lineStart:function(){this.stream.lineStart()},lineEnd:function(){this.stream.lineEnd()},polygonStart:function(){this.stream.polygonStart()},polygonEnd:function(){this.stream.polygonEnd()}};var Bv=16,Hv=Lh(30*zh);function Xv(t,n){return+n?function(t,n){function e(r,i,o,a,u,c,s,l,f,h,d,p,v,g){var y=s-r,_=l-i,m=y*y+_*_;if(m>4*n&&v--){var x=a+h,b=u+d,w=c+p,M=Yh(x*x+b*b+w*w),k=Xh(w/=M),S=Ph(Ph(w)-1)<kh||Ph(o-f)<kh?(o+f)/2:qh(b,x),N=t(S,k),T=N[0],A=N[1],E=T-r,C=A-i,z=_*E-y*C;(z*z/m>n||Ph((y*E+_*C)/m-.5)>.3||a*h+u*d+c*p<Hv)&&(e(r,i,o,a,u,c,T,A,S,x/=M,b/=M,w,v,g),g.point(T,A),e(T,A,S,x,b,w,s,l,f,h,d,p,v,g))}}return function(n){var r,i,o,a,u,c,s,l,f,h,d,p,v={point:g,lineStart:y,lineEnd:m,polygonStart:function(){n.polygonStart(),v.lineStart=x},polygonEnd:function(){n.polygonEnd(),v.lineStart=y}};function g(e,r){e=t(e,r),n.point(e[0],e[1])}function y(){l=NaN,v.point=_,n.lineStart()}function _(r,i){var o=bd([r,i]),a=t(r,i);e(l,f,s,h,d,p,l=a[0],f=a[1],s=r,h=o[0],d=o[1],p=o[2],Bv,n),n.point(l,f)}function m(){v.point=g,n.lineEnd()}function x(){y(),v.point=b,v.lineEnd=w}function b(t,n){_(r=t,n),i=l,o=f,a=h,u=d,c=p,v.point=_}function w(){e(l,f,s,h,d,p,i,o,r,a,u,c,Bv,n),v.lineEnd=m,m()}return v}}(t,n):function(t){return Rv({point:function(n,e){n=t(n,e),this.stream.point(n[0],n[1])}})}(t)}var $v=Rv({point:function(t,n){this.stream.point(t*zh,n*zh)}});function Vv(t){return Wv(function(){return t})()}function Wv(t){var n,e,r,i,o,a,u,c,s,l,f=150,h=480,d=250,p=0,v=0,g=0,y=0,_=0,m=null,x=Dv,b=null,w=Hp,M=.5,k=Xv(T,M);function S(t){return[(t=o(t[0]*zh,t[1]*zh))[0]*f+e,r-t[1]*f]}function N(t){return(t=o.invert((t[0]-e)/f,(r-t[1])/f))&&[t[0]*Ch,t[1]*Ch]}function T(t,i){return[(t=n(t,i))[0]*f+e,r-t[1]*f]}function A(){o=vp(i=yp(g,y,_),n);var t=n(p,v);return e=h-t[0]*f,r=d+t[1]*f,E()}function E(){return s=l=null,S}return S.stream=function(t){return s&&l===t?s:s=$v(x(i,k(w(l=t))))},S.clipAngle=function(t){return arguments.length?(x=+t?function(t,n){var e=Lh(t),r=e>0,i=Ph(e)>kh;function o(t,n){return Lh(t)*Lh(n)>e}function a(t,n,r){var i=bd(t),o=bd(n),a=[1,0,0],u=Md(i,o),c=wd(u,u),s=u[0],l=c-s*s;if(!l)return!r&&t;var f=e*c/l,h=-e*s/l,d=Md(a,u),p=Sd(a,f),v=Sd(u,h);kd(p,v);var g=d,y=wd(p,g),_=wd(g,g),m=y*y-_*(wd(p,p)-1);if(!(m<0)){var x=Yh(m),b=Sd(g,(-y-x)/_);if(kd(b,p),b=xd(b),!r)return b;var w,M=t[0],k=n[0],S=t[1],N=n[1];k<M&&(w=M,M=k,k=w);var T=k-M,A=Ph(T-Nh)<kh,E=A||T<kh;if(!A&&N<S&&(w=S,S=N,N=w),E?A?S+N>0^b[1]<(Ph(b[0]-M)<kh?S:N):S<=b[1]&&b[1]<=N:T>Nh^(M<=b[0]&&b[0]<=k)){var C=Sd(g,(-y+x)/_);return kd(C,p),[b,xd(C)]}}}function u(n,e){var i=r?t:Nh-t,o=0;return n<-i?o|=1:n>i&&(o|=2),e<-i?o|=4:e>i&&(o|=8),o}return qv(o,function(t){var n,e,c,s,l;return{lineStart:function(){s=c=!1,l=1},point:function(f,h){var d,p=[f,h],v=o(f,h),g=r?v?0:u(f,h):v?u(f+(f<0?Nh:-Nh),h):0;if(!n&&(s=c=v)&&t.lineStart(),v!==c&&(d=a(n,p),(kp(n,d)||kp(p,d))&&(p[0]+=kh,p[1]+=kh,v=o(p[0],p[1]))),v!==c)l=0,v?(t.lineStart(),d=a(p,n),t.point(d[0],d[1])):(d=a(n,p),t.point(d[0],d[1]),t.lineEnd()),n=d;else if(i&&n&&r^v){var y;g&e||!(y=a(p,n,!0))||(l=0,r?(t.lineStart(),t.point(y[0][0],y[0][1]),t.point(y[1][0],y[1][1]),t.lineEnd()):(t.point(y[1][0],y[1][1]),t.lineEnd(),t.lineStart(),t.point(y[0][0],y[0][1])))}!v||n&&kp(n,p)||t.point(p[0],p[1]),n=p,c=v,e=g},lineEnd:function(){c&&t.lineEnd(),n=null},clean:function(){return l|(s&&c)<<1}}},function(e,r,i,o){bp(o,t,n,i,e,r)},r?[0,-t]:[-Nh,t-Nh])}(m=t*zh,6*zh):(m=null,Dv),E()):m*Ch},S.clipExtent=function(t){return arguments.length?(w=null==t?(b=a=u=c=null,Hp):Cp(b=+t[0][0],a=+t[0][1],u=+t[1][0],c=+t[1][1]),E()):null==b?null:[[b,a],[u,c]]},S.scale=function(t){return arguments.length?(f=+t,A()):f},S.translate=function(t){return arguments.length?(h=+t[0],d=+t[1],A()):[h,d]},S.center=function(t){return arguments.length?(p=t[0]%360*zh,v=t[1]%360*zh,A()):[p*Ch,v*Ch]},S.rotate=function(t){return arguments.length?(g=t[0]%360*zh,y=t[1]%360*zh,_=t.length>2?t[2]%360*zh:0,A()):[g*Ch,y*Ch,_*Ch]},S.precision=function(t){return arguments.length?(k=Xv(T,M=t*t),E()):Yh(M)},S.fitExtent=Yv(S),S.fitSize=Fv(S),function(){return n=t.apply(this,arguments),S.invert=n.invert&&N,A()}}function Zv(t){var n=0,e=Nh/3,r=Wv(t),i=r(n,e);return i.parallels=function(t){return arguments.length?r(n=t[0]*zh,e=t[1]*zh):[n*Ch,e*Ch]},i}function Gv(t,n){var e=Ih(t),r=(e+Ih(n))/2,i=1+e*(2*r-e),o=Yh(i)/r;function a(t,n){var e=Yh(i-2*r*Ih(n))/r;return[e*Ih(t*=r),o-e*Lh(t)]}return a.invert=function(t,n){var e=o-n;return[qh(t,e)/r,Xh((i-(t*t+e*e)*r*r)/(2*r))]},a}function Jv(){return Zv(Gv).scale(155.424).center([0,33.6442])}function Qv(){return Jv().parallels([29.5,45.5]).scale(1070).translate([480,250]).rotate([96,0]).center([-.6,38.7])}function Kv(t){return function(n,e){var r=Lh(n),i=Lh(e),o=t(r*i);return[o*i*Ih(n),o*Ih(e)]}}function tg(t){return function(n,e){var r=Yh(n*n+e*e),i=t(r),o=Ih(i),a=Lh(i);return[qh(n*o,r*a),Xh(r&&e*o/r)]}}var ng=Kv(function(t){return Yh(2/(1+t))});ng.invert=tg(function(t){return 2*Xh(t/2)});var eg=Kv(function(t){return(t=Hh(t))&&t/Ih(t)});function rg(t,n){return[t,Rh(Bh((Th+n)/2))]}function ig(t){var n,e=Vv(t),r=e.scale,i=e.translate,o=e.clipExtent;return e.scale=function(t){return arguments.length?(r(t),n&&e.clipExtent(null),e):r()},e.translate=function(t){return arguments.length?(i(t),n&&e.clipExtent(null),e):i()},e.clipExtent=function(t){if(!arguments.length)return n?null:o();if(n=null==t){var a=Nh*r(),u=i();t=[[u[0]-a,u[1]-a],[u[0]+a,u[1]+a]]}return o(t),e},e.clipExtent(null)}function og(t){return Bh((Th+t)/2)}function ag(t,n){var e=Lh(t),r=t===n?Ih(t):Rh(e/Lh(n))/Rh(og(n)/og(t)),i=e*Uh(og(t),r)/r;if(!r)return rg;function o(t,n){i>0?n<-Th+kh&&(n=-Th+kh):n>Th-kh&&(n=Th-kh);var e=i/Uh(og(n),r);return[e*Ih(r*t),i-e*Lh(r*t)]}return o.invert=function(t,n){var e=i-n,o=Fh(r)*Yh(t*t+e*e);return[qh(t,e)/r,2*Oh(Uh(i/o,1/r))-Th]},o}function ug(t,n){return[t,n]}function cg(t,n){var e=Lh(t),r=t===n?Ih(t):(e-Lh(n))/(n-t),i=e/r+t;if(Ph(r)<kh)return ug;function o(t,n){var e=i-n,o=r*t;return[e*Ih(o),i-e*Lh(o)]}return o.invert=function(t,n){var e=i-n;return[qh(t,e)/r,i-Fh(r)*Yh(t*t+e*e)]},o}function sg(t,n){var e=Lh(n),r=Lh(t)*e;return[e*Ih(t)/r,Ih(n)/r]}function lg(t,n){return[Lh(n)*Ih(t),Ih(n)]}function fg(t,n){var e=Lh(n),r=1+Lh(t)*e;return[e*Ih(t)/r,Ih(n)/r]}function hg(t,n){return[Rh(Bh((Th+n)/2)),-t]}eg.invert=tg(function(t){return t}),rg.invert=function(t,n){return[t,2*Oh(Dh(n))-Th]},ug.invert=ug,sg.invert=tg(Oh),lg.invert=tg(Xh),fg.invert=tg(function(t){return 2*Oh(t)}),hg.invert=function(t,n){return[-n,2*Oh(Dh(t))-Th]},t.version="4.2.2",t.bisect=i,t.bisectRight=i,t.bisectLeft=o,t.ascending=n,t.bisector=e,t.descending=function(t,n){return n<t?-1:n>t?1:n>=t?0:NaN},t.deviation=c,t.extent=s,t.histogram=function(){var t=p,n=s,e=b;function r(r){var o,a,u=r.length,c=new Array(u);for(o=0;o<u;++o)c[o]=t(r[o],o,r);var s=n(c),l=s[0],f=s[1],h=e(c,l,f);Array.isArray(h)||(h=m(l,f,h));for(var d=h.length;h[0]<=l;)h.shift(),--d;for(;h[d-1]>=f;)h.pop(),--d;var p,v=new Array(d+1);for(o=0;o<=d;++o)(p=v[o]=[]).x0=o>0?h[o-1]:l,p.x1=o<d?h[o]:f;for(o=0;o<u;++o)a=c[o],l<=a&&a<=f&&v[i(h,a,0,d)].push(r[o]);return v}return r.value=function(n){return arguments.length?(t="function"==typeof n?n:d(n),r):t},r.domain=function(t){return arguments.length?(n="function"==typeof t?t:d([t[0],t[1]]),r):n},r.thresholds=function(t){return arguments.length?(e="function"==typeof t?t:Array.isArray(t)?d(f.call(t)):d(t),r):e},r},t.thresholdFreedmanDiaconis=function(t,e,r){return t=h.call(t,a).sort(n),Math.ceil((r-e)/(2*(w(t,.75)-w(t,.25))*Math.pow(t.length,-1/3)))},t.thresholdScott=function(t,n,e){return Math.ceil((e-n)/(3.5*c(t)*Math.pow(t.length,-1/3)))},t.thresholdSturges=b,t.max=function(t,n){var e,r,i=-1,o=t.length;if(null==n){for(;++i<o;)if(null!=(r=t[i])&&r>=r){e=r;break}for(;++i<o;)null!=(r=t[i])&&r>e&&(e=r)}else{for(;++i<o;)if(null!=(r=n(t[i],i,t))&&r>=r){e=r;break}for(;++i<o;)null!=(r=n(t[i],i,t))&&r>e&&(e=r)}return e},t.mean=function(t,n){var e,r=0,i=t.length,o=-1,u=i;if(null==n)for(;++o<i;)isNaN(e=a(t[o]))?--u:r+=e;else for(;++o<i;)isNaN(e=a(n(t[o],o,t)))?--u:r+=e;if(u)return r/u},t.median=function(t,e){var r,i=[],o=t.length,u=-1;if(null==e)for(;++u<o;)isNaN(r=a(t[u]))||i.push(r);else for(;++u<o;)isNaN(r=a(e(t[u],u,t)))||i.push(r);return w(i.sort(n),.5)},t.merge=M,t.min=k,t.pairs=function(t){for(var n=0,e=t.length-1,r=t[0],i=new Array(e<0?0:e);n<e;)i[n]=[r,r=t[++n]];return i},t.permute=function(t,n){for(var e=n.length,r=new Array(e);e--;)r[e]=t[n[e]];return r},t.quantile=w,t.range=v,t.scan=function(t,e){if(r=t.length){var r,i,o=0,a=0,u=t[a];for(e||(e=n);++o<r;)(e(i=t[o],u)<0||0!==e(u,u))&&(u=i,a=o);return 0===e(u,u)?a:void 0}},t.shuffle=function(t,n,e){for(var r,i,o=(null==e?t.length:e)-(n=null==n?0:+n);o;)i=Math.random()*o--|0,r=t[o+n],t[o+n]=t[i+n],t[i+n]=r;return t},t.sum=function(t,n){var e,r=0,i=t.length,o=-1;if(null==n)for(;++o<i;)(e=+t[o])&&(r+=e);else for(;++o<i;)(e=+n(t[o],o,t))&&(r+=e);return r},t.ticks=m,t.tickStep=x,t.transpose=S,t.variance=u,t.zip=function(){return S(arguments)},t.entries=function(t){var n=[];for(var e in t)n.push({key:e,value:t[e]});return n},t.keys=function(t){var n=[];for(var e in t)n.push(e);return n},t.values=function(t){var n=[];for(var e in t)n.push(t[e]);return n},t.map=A,t.set=L,t.nest=function(){var t,n,e,r=[],i=[];function o(e,i,a,u){if(i>=r.length)return null!=n?n(e):null!=t?e.sort(t):e;for(var c,s,l,f=-1,h=e.length,d=r[i++],p=A(),v=a();++f<h;)(l=p.get(c=d(s=e[f])+""))?l.push(s):p.set(c,[s]);return p.each(function(t,n){u(v,n,o(t,i,a,u))}),v}return e={object:function(t){return o(t,0,E,C)},map:function(t){return o(t,0,z,P)},entries:function(t){return function t(e,o){if(++o>r.length)return e;var a,u=i[o-1];return null!=n&&o>=r.length?a=e.entries():(a=[],e.each(function(n,e){a.push({key:e,values:t(n,o)})})),null!=u?a.sort(function(t,n){return u(t.key,n.key)}):a}(o(t,0,z,P),0)},key:function(t){return r.push(t),e},sortKeys:function(t){return i[r.length-1]=t,e},sortValues:function(n){return t=n,e},rollup:function(t){return n=t,e}}},t.randomUniform=function(t,n){return t=null==t?0:+t,n=null==n?1:+n,1===arguments.length?(n=t,t=0):n-=t,function(){return Math.random()*n+t}},t.randomNormal=j,t.randomLogNormal=function(){var t=j.apply(this,arguments);return function(){return Math.exp(t())}},t.randomBates=function(t){var n=D(t);return function(){return n()/t}},t.randomIrwinHall=D,t.randomExponential=function(t){return function(){return-Math.log(1-Math.random())/t}},t.easeLinear=function(t){return+t},t.easeQuad=R,t.easeQuadIn=function(t){return t*t},t.easeQuadOut=function(t){return t*(2-t)},t.easeQuadInOut=R,t.easeCubic=U,t.easeCubicIn=function(t){return t*t*t},t.easeCubicOut=function(t){return--t*t*t+1},t.easeCubicInOut=U,t.easePoly=Y,t.easePolyIn=I,t.easePolyOut=F,t.easePolyInOut=Y,t.easeSin=X,t.easeSinIn=function(t){return 1-Math.cos(t*H)},t.easeSinOut=function(t){return Math.sin(t*H)},t.easeSinInOut=X,t.easeExp=$,t.easeExpIn=function(t){return Math.pow(2,10*t-10)},t.easeExpOut=function(t){return 1-Math.pow(2,-10*t)},t.easeExpInOut=$,t.easeCircle=V,t.easeCircleIn=function(t){return 1-Math.sqrt(1-t*t)},t.easeCircleOut=function(t){return Math.sqrt(1- --t*t)},t.easeCircleInOut=V,t.easeBounce=it,t.easeBounceIn=function(t){return 1-it(1-t)},t.easeBounceOut=it,t.easeBounceInOut=function(t){return((t*=2)<=1?1-it(1-t):it(t-1)+1)/2},t.easeBack=ut,t.easeBackIn=ot,t.easeBackOut=at,t.easeBackInOut=ut,t.easeElastic=lt,t.easeElasticIn=st,t.easeElasticOut=lt,t.easeElasticInOut=ft,t.polygonArea=function(t){for(var n,e=-1,r=t.length,i=t[r-1],o=0;++e<r;)n=i,i=t[e],o+=n[1]*i[0]-n[0]*i[1];return o/2},t.polygonCentroid=function(t){for(var n,e,r=-1,i=t.length,o=0,a=0,u=t[i-1],c=0;++r<i;)n=u,u=t[r],c+=e=n[0]*u[1]-u[0]*n[1],o+=(n[0]+u[0])*e,a+=(n[1]+u[1])*e;return[o/(c*=3),a/c]},t.polygonHull=function(t){if((e=t.length)<3)return null;var n,e,r=new Array(e),i=new Array(e);for(n=0;n<e;++n)r[n]=[+t[n][0],+t[n][1],n];for(r.sort(ht),n=0;n<e;++n)i[n]=[r[n][0],-r[n][1]];var o=dt(r),a=dt(i),u=a[0]===o[0],c=a[a.length-1]===o[o.length-1],s=[];for(n=o.length-1;n>=0;--n)s.push(t[r[o[n]][2]]);for(n=+u;n<a.length-c;++n)s.push(t[r[a[n]][2]]);return s},t.polygonContains=function(t,n){for(var e,r,i=t.length,o=t[i-1],a=n[0],u=n[1],c=o[0],s=o[1],l=!1,f=0;f<i;++f)o=t[f],e=o[0],(r=o[1])>u!=s>u&&a<(c-e)*(u-r)/(s-r)+e&&(l=!l),c=e,s=r;return l},t.polygonLength=function(t){for(var n,e,r=-1,i=t.length,o=t[i-1],a=o[0],u=o[1],c=0;++r<i;)n=a,e=u,o=t[r],a=o[0],u=o[1],n-=a,e-=u,c+=Math.sqrt(n*n+e*e);return c},t.path=_t,t.quadtree=Mt,t.queue=qt,t.arc=function(){var t=It,n=Ft,e=Lt(0),r=null,i=Yt,o=Bt,a=Ht,u=null;function c(){var c,s,l=+t.apply(this,arguments),f=+n.apply(this,arguments),h=i.apply(this,arguments)-Rt,d=o.apply(this,arguments)-Rt,p=Math.abs(d-h),v=d>h;if(u||(u=c=_t()),f<l&&(s=f,f=l,l=s),f>jt)if(p>Ut-jt)u.moveTo(f*Math.cos(h),f*Math.sin(h)),u.arc(0,0,f,h,d,!v),l>jt&&(u.moveTo(l*Math.cos(d),l*Math.sin(d)),u.arc(0,0,l,d,h,v));else{var g,y,_=h,m=d,x=h,b=d,w=p,M=p,k=a.apply(this,arguments)/2,S=k>jt&&(r?+r.apply(this,arguments):Math.sqrt(l*l+f*f)),N=Math.min(Math.abs(f-l)/2,+e.apply(this,arguments)),T=N,A=N;if(S>jt){var E=Xt(S/l*Math.sin(k)),C=Xt(S/f*Math.sin(k));(w-=2*E)>jt?(x+=E*=v?1:-1,b-=E):(w=0,x=b=(h+d)/2),(M-=2*C)>jt?(_+=C*=v?1:-1,m-=C):(M=0,_=m=(h+d)/2)}var z=f*Math.cos(_),P=f*Math.sin(_),O=l*Math.cos(b),q=l*Math.sin(b);if(N>jt){var L=f*Math.cos(m),j=f*Math.sin(m),D=l*Math.cos(x),R=l*Math.sin(x);if(p<Dt){var U=w>jt?function(t,n,e,r,i,o,a,u){var c=e-t,s=r-n,l=a-i,f=u-o,h=(l*(n-o)-f*(t-i))/(f*c-l*s);return[t+h*c,n+h*s]}(z,P,D,R,L,j,O,q):[O,q],I=z-U[0],F=P-U[1],Y=L-U[0],B=j-U[1],H=1/Math.sin(Math.acos((I*Y+F*B)/(Math.sqrt(I*I+F*F)*Math.sqrt(Y*Y+B*B)))/2),X=Math.sqrt(U[0]*U[0]+U[1]*U[1]);T=Math.min(N,(l-X)/(H-1)),A=Math.min(N,(f-X)/(H+1))}}M>jt?A>jt?(g=$t(D,R,z,P,f,A,v),y=$t(L,j,O,q,f,A,v),u.moveTo(g.cx+g.x01,g.cy+g.y01),A<N?u.arc(g.cx,g.cy,A,Math.atan2(g.y01,g.x01),Math.atan2(y.y01,y.x01),!v):(u.arc(g.cx,g.cy,A,Math.atan2(g.y01,g.x01),Math.atan2(g.y11,g.x11),!v),u.arc(0,0,f,Math.atan2(g.cy+g.y11,g.cx+g.x11),Math.atan2(y.cy+y.y11,y.cx+y.x11),!v),u.arc(y.cx,y.cy,A,Math.atan2(y.y11,y.x11),Math.atan2(y.y01,y.x01),!v))):(u.moveTo(z,P),u.arc(0,0,f,_,m,!v)):u.moveTo(z,P),l>jt&&w>jt?T>jt?(g=$t(O,q,L,j,l,-T,v),y=$t(z,P,D,R,l,-T,v),u.lineTo(g.cx+g.x01,g.cy+g.y01),T<N?u.arc(g.cx,g.cy,T,Math.atan2(g.y01,g.x01),Math.atan2(y.y01,y.x01),!v):(u.arc(g.cx,g.cy,T,Math.atan2(g.y01,g.x01),Math.atan2(g.y11,g.x11),!v),u.arc(0,0,l,Math.atan2(g.cy+g.y11,g.cx+g.x11),Math.atan2(y.cy+y.y11,y.cx+y.x11),v),u.arc(y.cx,y.cy,T,Math.atan2(y.y11,y.x11),Math.atan2(y.y01,y.x01),!v))):u.arc(0,0,l,b,x,v):u.lineTo(O,q)}else u.moveTo(0,0);if(u.closePath(),c)return u=null,c+""||null}return c.centroid=function(){var e=(+t.apply(this,arguments)+ +n.apply(this,arguments))/2,r=(+i.apply(this,arguments)+ +o.apply(this,arguments))/2-Dt/2;return[Math.cos(r)*e,Math.sin(r)*e]},c.innerRadius=function(n){return arguments.length?(t="function"==typeof n?n:Lt(+n),c):t},c.outerRadius=function(t){return arguments.length?(n="function"==typeof t?t:Lt(+t),c):n},c.cornerRadius=function(t){return arguments.length?(e="function"==typeof t?t:Lt(+t),c):e},c.padRadius=function(t){return arguments.length?(r=null==t?null:"function"==typeof t?t:Lt(+t),c):r},c.startAngle=function(t){return arguments.length?(i="function"==typeof t?t:Lt(+t),c):i},c.endAngle=function(t){return arguments.length?(o="function"==typeof t?t:Lt(+t),c):o},c.padAngle=function(t){return arguments.length?(a="function"==typeof t?t:Lt(+t),c):a},c.context=function(t){return arguments.length?(u=null==t?null:t,c):u},c},t.area=Qt,t.line=Jt,t.pie=function(){var t=tn,n=Kt,e=null,r=Lt(0),i=Lt(Ut),o=Lt(0);function a(a){var u,c,s,l,f,h=a.length,d=0,p=new Array(h),v=new Array(h),g=+r.apply(this,arguments),y=Math.min(Ut,Math.max(-Ut,i.apply(this,arguments)-g)),_=Math.min(Math.abs(y)/h,o.apply(this,arguments)),m=_*(y<0?-1:1);for(u=0;u<h;++u)(f=v[p[u]=u]=+t(a[u],u,a))>0&&(d+=f);for(null!=n?p.sort(function(t,e){return n(v[t],v[e])}):null!=e&&p.sort(function(t,n){return e(a[t],a[n])}),u=0,s=d?(y-h*m)/d:0;u<h;++u,g=l)c=p[u],f=v[c],l=g+(f>0?f*s:0)+m,v[c]={data:a[c],index:u,value:f,startAngle:g,endAngle:l,padAngle:_};return v}return a.value=function(n){return arguments.length?(t="function"==typeof n?n:Lt(+n),a):t},a.sortValues=function(t){return arguments.length?(n=t,e=null,a):n},a.sort=function(t){return arguments.length?(e=t,n=null,a):e},a.startAngle=function(t){return arguments.length?(r="function"==typeof t?t:Lt(+t),a):r},a.endAngle=function(t){return arguments.length?(i="function"==typeof t?t:Lt(+t),a):i},a.padAngle=function(t){return arguments.length?(o="function"==typeof t?t:Lt(+t),a):o},a},t.radialArea=function(){var t=Qt().curve(nn),n=t.curve,e=t.lineX0,r=t.lineX1,i=t.lineY0,o=t.lineY1;return t.angle=t.x,delete t.x,t.startAngle=t.x0,delete t.x0,t.endAngle=t.x1,delete t.x1,t.radius=t.y,delete t.y,t.innerRadius=t.y0,delete t.y0,t.outerRadius=t.y1,delete t.y1,t.lineStartAngle=function(){return on(e())},delete t.lineX0,t.lineEndAngle=function(){return on(r())},delete t.lineX1,t.lineInnerRadius=function(){return on(i())},delete t.lineY0,t.lineOuterRadius=function(){return on(o())},delete t.lineY1,t.curve=function(t){return arguments.length?n(rn(t)):n()._curve},t},t.radialLine=function(){return on(Jt().curve(nn))},t.symbol=function(){var t=Lt(an),n=Lt(64),e=null;function r(){var r;if(e||(e=r=_t()),t.apply(this,arguments).draw(e,+n.apply(this,arguments)),r)return e=null,r+""||null}return r.type=function(n){return arguments.length?(t="function"==typeof n?n:Lt(n),r):t},r.size=function(t){return arguments.length?(n="function"==typeof t?t:Lt(+t),r):n},r.context=function(t){return arguments.length?(e=null==t?null:t,r):e},r},t.symbols=Mn,t.symbolCircle=an,t.symbolCross=un,t.symbolDiamond=ln,t.symbolSquare=vn,t.symbolStar=pn,t.symbolTriangle=yn,t.symbolWye=wn,t.curveBasisClosed=function(t){return new Tn(t)},t.curveBasisOpen=function(t){return new An(t)},t.curveBasis=function(t){return new Nn(t)},t.curveBundle=Cn,t.curveCardinalClosed=Ln,t.curveCardinalOpen=Dn,t.curveCardinal=On,t.curveCatmullRomClosed=Yn,t.curveCatmullRomOpen=Hn,t.curveCatmullRom=In,t.curveLinearClosed=function(t){return new Xn(t)},t.curveLinear=Wt,t.curveMonotoneX=function(t){return new Gn(t)},t.curveMonotoneY=function(t){return new Jn(t)},t.curveNatural=function(t){return new Kn(t)},t.curveStep=function(t){return new ne(t,.5)},t.curveStepAfter=function(t){return new ne(t,1)},t.curveStepBefore=function(t){return new ne(t,0)},t.stack=function(){var t=Lt([]),n=ie,e=re,r=oe;function i(i){var o,a,u=t.apply(this,arguments),c=i.length,s=u.length,l=new Array(s);for(o=0;o<s;++o){for(var f,h=u[o],d=l[o]=new Array(c),p=0;p<c;++p)d[p]=f=[0,+r(i[p],h,p,i)],f.data=i[p];d.key=h}for(o=0,a=n(l);o<s;++o)l[a[o]].index=o;return e(l,a),l}return i.keys=function(n){return arguments.length?(t="function"==typeof n?n:Lt(ee.call(n)),i):t},i.value=function(t){return arguments.length?(r="function"==typeof t?t:Lt(+t),i):r},i.order=function(t){return arguments.length?(n=null==t?ie:"function"==typeof t?t:Lt(ee.call(t)),i):n},i.offset=function(t){return arguments.length?(e=null==t?re:t,i):e},i},t.stackOffsetExpand=function(t,n){if((r=t.length)>0){for(var e,r,i,o=0,a=t[0].length;o<a;++o){for(i=e=0;e<r;++e)i+=t[e][o][1]||0;if(i)for(e=0;e<r;++e)t[e][o][1]/=i}re(t,n)}},t.stackOffsetNone=re,t.stackOffsetSilhouette=function(t,n){if((e=t.length)>0){for(var e,r=0,i=t[n[0]],o=i.length;r<o;++r){for(var a=0,u=0;a<e;++a)u+=t[a][r][1]||0;i[r][1]+=i[r][0]=-u/2}re(t,n)}},t.stackOffsetWiggle=function(t,n){if((i=t.length)>0&&(r=(e=t[n[0]]).length)>0){for(var e,r,i,o=0,a=1;a<r;++a){for(var u=0,c=0,s=0;u<i;++u){for(var l=t[n[u]],f=l[a][1]||0,h=l[a-1][1]||0,d=(f-h)/2,p=0;p<u;++p){var v=t[n[p]],g=v[a][1]||0,y=v[a-1][1]||0;d+=g-y}c+=f,s+=d*f}e[a-1][1]+=e[a-1][0]=o,c&&(o-=s/c)}e[a-1][1]+=e[a-1][0]=o,re(t,n)}},t.stackOrderAscending=ae,t.stackOrderDescending=function(t){return ae(t).reverse()},t.stackOrderInsideOut=function(t){var n,e,r=t.length,i=t.map(ue),o=ie(t).sort(function(t,n){return i[n]-i[t]}),a=0,u=0,c=[],s=[];for(n=0;n<r;++n)e=o[n],a<u?(a+=i[e],c.push(e)):(u+=i[e],s.push(e));return s.reverse().concat(c)},t.stackOrderNone=ie,t.stackOrderReverse=function(t){return ie(t).reverse()},t.color=be,t.rgb=Se,t.hsl=Ae,t.lab=Fe,t.hcl=Ve,t.cubehelix=rr,t.interpolate=kr,t.interpolateArray=yr,t.interpolateDate=_r,t.interpolateNumber=mr,t.interpolateObject=xr,t.interpolateRound=Sr,t.interpolateString=Mr,t.interpolateTransformCss=qr,t.interpolateTransformSvg=Lr,t.interpolateZoom=Fr,t.interpolateRgb=dr,t.interpolateRgbBasis=vr,t.interpolateRgbBasisClosed=gr,t.interpolateHsl=Br,t.interpolateHslLong=Hr,t.interpolateLab=function(t,n){var e=hr((t=Fe(t)).l,(n=Fe(n)).l),r=hr(t.a,n.a),i=hr(t.b,n.b),o=hr(t.opacity,n.opacity);return function(n){return t.l=e(n),t.a=r(n),t.b=i(n),t.opacity=o(n),t+""}},t.interpolateHcl=$r,t.interpolateHclLong=Vr,t.interpolateCubehelix=Zr,t.interpolateCubehelixLong=Gr,t.interpolateBasis=ar,t.interpolateBasisClosed=ur,t.quantize=function(t,n){for(var e=new Array(n),r=0;r<n;++r)e[r]=t(r/(n-1));return e},t.dispatch=Qr,t.dsvFormat=ri,t.csvParse=oi,t.csvParseRows=ai,t.csvFormat=ui,t.csvFormatRows=ci,t.tsvParse=li,t.tsvParseRows=fi,t.tsvFormat=hi,t.tsvFormatRows=di,t.request=pi,t.html=gi,t.json=yi,t.text=_i,t.xml=mi,t.csv=Mi,t.tsv=ki,t.now=qi,t.timer=Di,t.timerFlush=Ri,t.timeout=Yi,t.interval=function(t,n,e){var r=new ji,i=n;return null==n?(r.restart(t,n,e),r):(n=+n,e=null==e?qi():+e,r.restart(function o(a){a+=i,r.restart(o,i+=n,e),t(a)},n,e),r)},t.timeInterval=Xi,t.timeMillisecond=$i,t.timeMilliseconds=Vi,t.timeSecond=Gi,t.timeSeconds=Ji,t.timeMinute=Qi,t.timeMinutes=Ki,t.timeHour=to,t.timeHours=no,t.timeDay=eo,t.timeDays=ro,t.timeWeek=oo,t.timeWeeks=ho,t.timeSunday=oo,t.timeSundays=ho,t.timeMonday=ao,t.timeMondays=po,t.timeTuesday=uo,t.timeTuesdays=vo,t.timeWednesday=co,t.timeWednesdays=go,t.timeThursday=so,t.timeThursdays=yo,t.timeFriday=lo,t.timeFridays=_o,t.timeSaturday=fo,t.timeSaturdays=mo,t.timeMonth=xo,t.timeMonths=bo,t.timeYear=wo,t.timeYears=Mo,t.utcMillisecond=$i,t.utcMilliseconds=Vi,t.utcSecond=Gi,t.utcSeconds=Ji,t.utcMinute=ko,t.utcMinutes=So,t.utcHour=No,t.utcHours=To,t.utcDay=Ao,t.utcDays=Eo,t.utcWeek=zo,t.utcWeeks=Ro,t.utcSunday=zo,t.utcSundays=Ro,t.utcMonday=Po,t.utcMondays=Uo,t.utcTuesday=Oo,t.utcTuesdays=Io,t.utcWednesday=qo,t.utcWednesdays=Fo,t.utcThursday=Lo,t.utcThursdays=Yo,t.utcFriday=jo,t.utcFridays=Bo,t.utcSaturday=Do,t.utcSaturdays=Ho,t.utcMonth=Xo,t.utcMonths=$o,t.utcYear=Vo,t.utcYears=Zo,t.formatLocale=aa,t.formatDefaultLocale=ua,t.formatSpecifier=na,t.precisionFixed=ca,t.precisionPrefix=sa,t.precisionRound=la,t.isoFormat=pu,t.isoParse=vu,t.timeFormatLocale=pa,t.timeFormatDefaultLocale=du,t.scaleBand=bu,t.scalePoint=function(){return function t(n){var e=n.copy;return n.padding=n.paddingOuter,delete n.paddingInner,delete n.paddingOuter,n.copy=function(){return t(e())},n}(bu().paddingInner(1))},t.scaleIdentity=function t(){var n=[0,1];function e(t){return+t}return e.invert=e,e.domain=e.range=function(t){return arguments.length?(n=yu.call(t,Mu),e):n.slice()},e.copy=function(){return t().domain(n)},Cu(e)},t.scaleLinear=function t(){var n=Eu(Su,mr);return n.copy=function(){return Au(n,t())},Cu(n)},t.scaleLog=function n(){var e=Eu(Pu,Ou).domain([1,10]),r=e.domain,i=10,o=ju(10),a=Lu(10);function u(){return o=ju(i),a=Lu(i),r()[0]<0&&(o=Du(o),a=Du(a)),e}return e.base=function(t){return arguments.length?(i=+t,u()):i},e.domain=function(t){return arguments.length?(r(t),u()):r()},e.ticks=function(t){var n,e=r(),u=e[0],c=e[e.length-1];(n=c<u)&&(h=u,u=c,c=h);var s,l,f,h=o(u),d=o(c),p=null==t?10:+t,v=[];if(!(i%1)&&d-h<p){if(h=Math.round(h)-1,d=Math.round(d)+1,u>0){for(;h<d;++h)for(l=1,s=a(h);l<i;++l)if(!((f=s*l)<u)){if(f>c)break;v.push(f)}}else for(;h<d;++h)for(l=i-1,s=a(h);l>=1;--l)if(!((f=s*l)<u)){if(f>c)break;v.push(f)}}else v=m(h,d,Math.min(d-h,p)).map(a);return n?v.reverse():v},e.tickFormat=function(n,r){if(null==r&&(r=10===i?".0e":","),"function"!=typeof r&&(r=t.format(r)),n===1/0)return r;null==n&&(n=10);var u=Math.max(1,i*n/e.ticks().length);return function(t){var n=t/a(Math.round(o(t)));return n*i<i-.5&&(n*=i),n<=u?r(t):""}},e.nice=function(){return r(zu(r(),{floor:function(t){return a(Math.floor(o(t)))},ceil:function(t){return a(Math.ceil(o(t)))}}))},e.copy=function(){return Au(e,n().base(i))},e},t.scaleOrdinal=xu,t.scaleImplicit=mu,t.scalePow=Uu,t.scaleSqrt=function(){return Uu().exponent(.5)},t.scaleQuantile=function t(){var e=[],r=[],o=[];function a(){var t=0,n=Math.max(1,r.length);for(o=new Array(n-1);++t<n;)o[t-1]=w(e,t/n);return u}function u(t){if(!isNaN(t=+t))return r[i(o,t)]}return u.invertExtent=function(t){var n=r.indexOf(t);return n<0?[NaN,NaN]:[n>0?o[n-1]:e[0],n<o.length?o[n]:e[e.length-1]]},u.domain=function(t){if(!arguments.length)return e.slice();e=[];for(var r,i=0,o=t.length;i<o;++i)null==(r=t[i])||isNaN(r=+r)||e.push(r);return e.sort(n),a()},u.range=function(t){return arguments.length?(r=_u.call(t),a()):r.slice()},u.quantiles=function(){return o.slice()},u.copy=function(){return t().domain(e).range(r)},u},t.scaleQuantize=function t(){var n=0,e=1,r=1,o=[.5],a=[0,1];function u(t){if(t<=t)return a[i(o,t,0,r)]}function c(){var t=-1;for(o=new Array(r);++t<r;)o[t]=((t+1)*e-(t-r)*n)/(r+1);return u}return u.domain=function(t){return arguments.length?(n=+t[0],e=+t[1],c()):[n,e]},u.range=function(t){return arguments.length?(r=(a=_u.call(t)).length-1,c()):a.slice()},u.invertExtent=function(t){var i=a.indexOf(t);return i<0?[NaN,NaN]:i<1?[n,o[0]]:i>=r?[o[r-1],e]:[o[i-1],o[i]]},u.copy=function(){return t().domain([n,e]).range(a)},Cu(u)},t.scaleThreshold=function t(){var n=[.5],e=[0,1],r=1;function o(t){if(t<=t)return e[i(n,t,0,r)]}return o.domain=function(t){return arguments.length?(n=_u.call(t),r=Math.min(n.length,e.length-1),o):n.slice()},o.range=function(t){return arguments.length?(e=_u.call(t),r=Math.min(n.length,e.length-1),o):e.slice()},o.invertExtent=function(t){var r=e.indexOf(t);return[n[r-1],n[r]]},o.copy=function(){return t().domain(n).range(e)},o},t.scaleTime=function(){return Zu(wo,xo,oo,eo,to,Qi,Gi,$i,t.timeFormat).domain([new Date(2e3,0,1),new Date(2e3,0,2)])},t.scaleUtc=function(){return Zu(Vo,Xo,zo,Ao,No,ko,Gi,$i,t.utcFormat).domain([Date.UTC(2e3,0,1),Date.UTC(2e3,0,2)])},t.schemeCategory10=Ju,t.schemeCategory20b=Qu,t.schemeCategory20c=Ku,t.schemeCategory20=tc,t.scaleSequential=function t(n){var e=0,r=1,i=!1;function o(t){var o=(t-e)/(r-e);return n(i?Math.max(0,Math.min(1,o)):o)}return o.domain=function(t){return arguments.length?(e=+t[0],r=+t[1],o):[e,r]},o.clamp=function(t){return arguments.length?(i=!!t,o):i},o.interpolator=function(t){return arguments.length?(n=t,o):n},o.copy=function(){return t(n).domain([e,r]).clamp(i)},Cu(o)},t.interpolateCubehelixDefault=nc,t.interpolateRainbow=function(t){(t<0||t>1)&&(t-=Math.floor(t));var n=Math.abs(t-.5);return ic.h=360*t-100,ic.s=1.5-1.5*n,ic.l=.8-.9*n,ic+""},t.interpolateWarm=ec,t.interpolateCool=rc,t.interpolateViridis=ac,t.interpolateMagma=uc,t.interpolateInferno=cc,t.interpolatePlasma=sc,t.creator=dc,t.customEvent=Tc,t.local=vc,t.matcher=xc,t.mouse=Cc,t.namespace=hc,t.namespaces=fc,t.select=rs,t.selectAll=function(t){return"string"==typeof t?new ns([document.querySelectorAll(t)],[document.documentElement]):new ns([null==t?[]:t],ts)},t.selection=es,t.selector=Pc,t.selectorAll=qc,t.touch=is,t.touches=function(t,n){null==n&&(n=Ac().touches);for(var e=0,r=n?n.length:0,i=new Array(r);e<r;++e)i[e]=Ec(t,n[e]);return i},t.window=Fc,t.active=function(t,n){var e,r,i=t.__transition;if(i)for(r in n=null==n?null:n+"",i)if((e=i[r]).state>cs&&e.name===n)return new ws([[t]],As,n,+r);return null},t.interrupt=ys,t.transition=Ms,t.axisTop=function(t){return Us(zs,t)},t.axisRight=function(t){return Us(Ps,t)},t.axisBottom=function(t){return Us(Os,t)},t.axisLeft=function(t){return Us(qs,t)},t.cluster=function(){var t=Is,n=1,e=1,r=!1;function i(i){var o,a=0;i.eachAfter(function(n){var e=n.children;e?(n.x=function(t){return t.reduce(Fs,0)/t.length}(e),n.y=function(t){return 1+t.reduce(Ys,0)}(e)):(n.x=o?a+=t(n,o):0,n.y=0,o=n)});var u=function(t){for(var n;n=t.children;)t=n[0];return t}(i),c=function(t){for(var n;n=t.children;)t=n[n.length-1];return t}(i),s=u.x-t(u,c)/2,l=c.x+t(c,u)/2;return i.eachAfter(r?function(t){t.x=(t.x-i.x)*n,t.y=(i.y-t.y)*e}:function(t){t.x=(t.x-s)/(l-s)*n,t.y=(1-(i.y?t.y/i.y:1))*e})}return i.separation=function(n){return arguments.length?(t=n,i):t},i.size=function(t){return arguments.length?(r=!1,n=+t[0],e=+t[1],i):r?null:[n,e]},i.nodeSize=function(t){return arguments.length?(r=!0,n=+t[0],e=+t[1],i):r?[n,e]:null},i},t.hierarchy=Bs,t.pack=function(){var t=null,n=1,e=1,r=rl;function i(i){return i.x=n/2,i.y=e/2,t?i.eachBefore(al(t)).eachAfter(ul(r,.5)).eachBefore(cl(1)):i.eachBefore(al(ol)).eachAfter(ul(rl,1)).eachAfter(ul(r,i.r/Math.min(n,e))).eachBefore(cl(Math.min(n,e)/(2*i.r))),i}return i.radius=function(n){return arguments.length?(t=null==(e=n)?null:el(e),i):t;var e},i.size=function(t){return arguments.length?(n=+t[0],e=+t[1],i):[n,e]},i.padding=function(t){return arguments.length?(r="function"==typeof t?t:il(+t),i):r},i},t.packSiblings=function(t){return nl(t),t},t.packEnclose=Zs,t.partition=function(){var t=1,n=1,e=0,r=!1;function i(i){var o=i.height+1;return i.x0=i.y0=e,i.x1=t,i.y1=n/o,i.eachBefore(function(t,n){return function(r){r.children&&ll(r,r.x0,t*(r.depth+1)/n,r.x1,t*(r.depth+2)/n);var i=r.x0,o=r.y0,a=r.x1-e,u=r.y1-e;a<i&&(i=a=(i+a)/2),u<o&&(o=u=(o+u)/2),r.x0=i,r.y0=o,r.x1=a,r.y1=u}}(n,o)),r&&i.eachBefore(sl),i}return i.round=function(t){return arguments.length?(r=!!t,i):r},i.size=function(e){return arguments.length?(t=+e[0],n=+e[1],i):[t,n]},i.padding=function(t){return arguments.length?(e=+t,i):e},i},t.stratify=function(){var t=pl,n=vl;function e(e){var r,i,o,a,u,c,s,l=e.length,f=new Array(l),h={};for(i=0;i<l;++i)r=e[i],u=f[i]=new Vs(r),null!=(c=t(r,i,e))&&(c+="")&&(s=fl+(u.id=c),h[s]=s in h?dl:u);for(i=0;i<l;++i)if(u=f[i],null!=(c=n(e[i],i,e))&&(c+="")){if(!(a=h[fl+c]))throw new Error("missing: "+c);if(a===dl)throw new Error("ambiguous: "+c);a.children?a.children.push(u):a.children=[u],u.parent=a}else{if(o)throw new Error("multiple roots");o=u}if(!o)throw new Error("no root");if(o.parent=hl,o.eachBefore(function(t){t.depth=t.parent.depth+1,--l}).eachBefore($s),o.parent=null,l>0)throw new Error("cycle");return o}return e.id=function(n){return arguments.length?(t=el(n),e):t},e.parentId=function(t){return arguments.length?(n=el(t),e):n},e},t.tree=function(){var t=gl,n=1,e=1,r=null;function i(i){var c=function(t){for(var n,e,r,i,o,a=new bl(t,0),u=[a];n=u.pop();)if(r=n._.children)for(n.children=new Array(o=r.length),i=o-1;i>=0;--i)u.push(e=n.children[i]=new bl(r[i],i)),e.parent=n;return(a.parent=new bl(null,0)).children=[a],a}(i);if(c.eachAfter(o),c.parent.m=-c.z,c.eachBefore(a),r)i.eachBefore(u);else{var s=i,l=i,f=i;i.eachBefore(function(t){t.x<s.x&&(s=t),t.x>l.x&&(l=t),t.depth>f.depth&&(f=t)});var h=s===l?1:t(s,l)/2,d=h-s.x,p=n/(l.x+h+d),v=e/(f.depth||1);i.eachBefore(function(t){t.x=(t.x+d)*p,t.y=t.depth*v})}return i}function o(n){var e=n.children,r=n.parent.children,i=n.i?r[n.i-1]:null;if(e){!function(t){for(var n,e=0,r=0,i=t.children,o=i.length;--o>=0;)(n=i[o]).z+=e,n.m+=e,e+=n.s+(r+=n.c)}(n);var o=(e[0].z+e[e.length-1].z)/2;i?(n.z=i.z+t(n._,i._),n.m=n.z-o):n.z=o}else i&&(n.z=i.z+t(n._,i._));n.parent.A=function(n,e,r){if(e){for(var i,o=n,a=n,u=e,c=o.parent.children[0],s=o.m,l=a.m,f=u.m,h=c.m;u=_l(u),o=yl(o),u&&o;)c=yl(c),(a=_l(a)).a=n,(i=u.z+f-o.z-s+t(u._,o._))>0&&(ml(xl(u,n,r),n,i),s+=i,l+=i),f+=u.m,s+=o.m,h+=c.m,l+=a.m;u&&!_l(a)&&(a.t=u,a.m+=f-l),o&&!yl(c)&&(c.t=o,c.m+=s-h,r=n)}return r}(n,i,n.parent.A||r[0])}function a(t){t._.x=t.z+t.parent.m,t.m+=t.parent.m}function u(t){t.x*=n,t.y=t.depth*e}return i.separation=function(n){return arguments.length?(t=n,i):t},i.size=function(t){return arguments.length?(r=!1,n=+t[0],e=+t[1],i):r?null:[n,e]},i.nodeSize=function(t){return arguments.length?(r=!0,n=+t[0],e=+t[1],i):r?[n,e]:null},i},t.treemap=function(){var t=Sl,n=!1,e=1,r=1,i=[0],o=rl,a=rl,u=rl,c=rl,s=rl;function l(t){return t.x0=t.y0=0,t.x1=e,t.y1=r,t.eachBefore(f),i=[0],n&&t.eachBefore(sl),t}function f(n){var e=i[n.depth],r=n.x0+e,l=n.y0+e,f=n.x1-e,h=n.y1-e;f<r&&(r=f=(r+f)/2),h<l&&(l=h=(l+h)/2),n.x0=r,n.y0=l,n.x1=f,n.y1=h,n.children&&(e=i[n.depth+1]=o(n)/2,r+=s(n)-e,l+=a(n)-e,f-=u(n)-e,h-=c(n)-e,f<r&&(r=f=(r+f)/2),h<l&&(l=h=(l+h)/2),t(n,r,l,f,h))}return l.round=function(t){return arguments.length?(n=!!t,l):n},l.size=function(t){return arguments.length?(e=+t[0],r=+t[1],l):[e,r]},l.tile=function(n){return arguments.length?(t=el(n),l):t},l.padding=function(t){return arguments.length?l.paddingInner(t).paddingOuter(t):l.paddingInner()},l.paddingInner=function(t){return arguments.length?(o="function"==typeof t?t:il(+t),l):o},l.paddingOuter=function(t){return arguments.length?l.paddingTop(t).paddingRight(t).paddingBottom(t).paddingLeft(t):l.paddingTop()},l.paddingTop=function(t){return arguments.length?(a="function"==typeof t?t:il(+t),l):a},l.paddingRight=function(t){return arguments.length?(u="function"==typeof t?t:il(+t),l):u},l.paddingBottom=function(t){return arguments.length?(c="function"==typeof t?t:il(+t),l):c},l.paddingLeft=function(t){return arguments.length?(s="function"==typeof t?t:il(+t),l):s},l},t.treemapBinary=function(t,n,e,r,i){var o,a,u=t.children,c=u.length,s=new Array(c+1);for(s[0]=a=o=0;o<c;++o)s[o+1]=a+=u[o].value;!function t(n,e,r,i,o,a,c){if(n>=e-1){var l=u[n];return l.x0=i,l.y0=o,l.x1=a,void(l.y1=c)}for(var f=s[n],h=r/2+f,d=n+1,p=e-1;d<p;){var v=d+p>>>1;s[v]<h?d=v+1:p=v}var g=s[d]-f,y=r-g;if(c-o>a-i){var _=(o*y+c*g)/r;t(n,d,g,i,o,a,_),t(d,e,y,i,_,a,c)}else{var m=(i*y+a*g)/r;t(n,d,g,i,o,m,c),t(d,e,y,m,o,a,c)}}(0,c,t.value,n,e,r,i)},t.treemapDice=ll,t.treemapSlice=wl,t.treemapSliceDice=function(t,n,e,r,i){(1&t.depth?wl:ll)(t,n,e,r,i)},t.treemapSquarify=Sl,t.treemapResquarify=Nl,t.forceCenter=function(t,n){var e;function r(){var r,i,o=e.length,a=0,u=0;for(r=0;r<o;++r)i=e[r],a+=i.x,u+=i.y;for(a=a/o-t,u=u/o-n,r=0;r<o;++r)(i=e[r]).x-=a,i.y-=u}return null==t&&(t=0),null==n&&(n=0),r.initialize=function(t){e=t},r.x=function(n){return arguments.length?(t=+n,r):t},r.y=function(t){return arguments.length?(n=+t,r):n},r},t.forceCollide=function(t){var n,e,r=1,i=1;function o(){for(var t,o,u,c,s,l,f,h=n.length,d=0;d<i;++d)for(o=Mt(n,El,Cl).visitAfter(a),t=0;t<h;++t)u=n[t],l=e[t],f=l*l,c=u.x+u.vx,s=u.y+u.vy,o.visit(p);function p(n,e,i,o,a){var h=n.data,d=n.r,p=l+d;if(!h)return e>c+p||o<c-p||i>s+p||a<s-p;if(h.index>t){var v=c-h.x-h.vx,g=s-h.y-h.vy,y=v*v+g*g;y<p*p&&(0===v&&(v=Al(),y+=v*v),0===g&&(g=Al(),y+=g*g),y=(p-(y=Math.sqrt(y)))/y*r,u.vx+=(v*=y)*(p=(d*=d)/(f+d)),u.vy+=(g*=y)*p,h.vx-=v*(p=1-p),h.vy-=g*p)}}}function a(t){if(t.data)return t.r=e[t.data.index];for(var n=t.r=0;n<4;++n)t[n]&&t[n].r>t.r&&(t.r=t[n].r)}return"function"!=typeof t&&(t=Tl(null==t?1:+t)),o.initialize=function(r){var i,o=(n=r).length;for(e=new Array(o),i=0;i<o;++i)e[i]=+t(n[i],i,n)},o.iterations=function(t){return arguments.length?(i=+t,o):i},o.strength=function(t){return arguments.length?(r=+t,o):r},o.radius=function(n){return arguments.length?(t="function"==typeof n?n:Tl(+n),o):t},o},t.forceLink=function(t){var n,e,r,i,o,a=zl,u=function(t){return 1/Math.min(i[t.source.index],i[t.target.index])},c=Tl(30),s=1;function l(r){for(var i=0,a=t.length;i<s;++i)for(var u,c,l,f,h,d,p,v=0;v<a;++v)u=t[v],c=u.source,l=u.target,f=l.x+l.vx-c.x-c.vx||Al(),h=l.y+l.vy-c.y-c.vy||Al(),d=((d=Math.sqrt(f*f+h*h))-e[v])/d*r*n[v],f*=d,h*=d,l.vx-=f*(p=o[v]),l.vy-=h*p,c.vx+=f*(p=1-p),c.vy+=h*p}function f(){if(r){var u,c,s=r.length,l=t.length,f=A(r,a);for(u=0,i=new Array(s);u<s;++u)i[u]=0;for(u=0;u<l;++u)(c=t[u]).index=u,"object"!=typeof c.source&&(c.source=f.get(c.source)),"object"!=typeof c.target&&(c.target=f.get(c.target)),++i[c.source.index],++i[c.target.index];for(u=0,o=new Array(l);u<l;++u)c=t[u],o[u]=i[c.source.index]/(i[c.source.index]+i[c.target.index]);n=new Array(l),h(),e=new Array(l),d()}}function h(){if(r)for(var e=0,i=t.length;e<i;++e)n[e]=+u(t[e],e,t)}function d(){if(r)for(var n=0,i=t.length;n<i;++n)e[n]=+c(t[n],n,t)}return null==t&&(t=[]),l.initialize=function(t){r=t,f()},l.links=function(n){return arguments.length?(t=n,f(),l):t},l.id=function(t){return arguments.length?(a=t,l):a},l.iterations=function(t){return arguments.length?(s=+t,l):s},l.strength=function(t){return arguments.length?(u="function"==typeof t?t:Tl(+t),h(),l):u},l.distance=function(t){return arguments.length?(c="function"==typeof t?t:Tl(+t),d(),l):c},l},t.forceManyBody=function(){var t,n,e,r,i=Tl(-30),o=1,a=1/0,u=.81;function c(r){var i,o=t.length,a=Mt(t,Pl,Ol).visitAfter(l);for(e=r,i=0;i<o;++i)n=t[i],a.visit(f)}function s(){if(t){var n,e=t.length;for(r=new Array(e),n=0;n<e;++n)r[n]=+i(t[n],n,t)}}function l(t){var n,e,i,o,a,u=0;if(t.length){for(i=o=a=0;a<4;++a)(n=t[a])&&(e=n.value)&&(u+=e,i+=e*n.x,o+=e*n.y);t.x=i/u,t.y=o/u}else{(n=t).x=n.data.x,n.y=n.data.y;do{u+=r[n.data.index]}while(n=n.next)}t.value=u}function f(t,i,c,s){if(!t.value)return!0;var l=t.x-n.x,f=t.y-n.y,h=s-i,d=l*l+f*f;if(h*h/u<d)return d<a&&(0===l&&(l=Al(),d+=l*l),0===f&&(f=Al(),d+=f*f),d<o&&(d=Math.sqrt(o*d)),n.vx+=l*t.value*e/d,n.vy+=f*t.value*e/d),!0;if(!(t.length||d>=a)){(t.data!==n||t.next)&&(0===l&&(l=Al(),d+=l*l),0===f&&(f=Al(),d+=f*f),d<o&&(d=Math.sqrt(o*d)));do{t.data!==n&&(h=r[t.data.index]*e/d,n.vx+=l*h,n.vy+=f*h)}while(t=t.next)}}return c.initialize=function(n){t=n,s()},c.strength=function(t){return arguments.length?(i="function"==typeof t?t:Tl(+t),s(),c):i},c.distanceMin=function(t){return arguments.length?(o=t*t,c):Math.sqrt(o)},c.distanceMax=function(t){return arguments.length?(a=t*t,c):Math.sqrt(a)},c.theta=function(t){return arguments.length?(u=t*t,c):Math.sqrt(u)},c},t.forceSimulation=function(t){var n,e=1,r=.001,i=1-Math.pow(r,1/300),o=0,a=.6,u=A(),c=Di(l),s=Qr("tick","end");function l(){f(),s.call("tick",n),e<r&&(c.stop(),s.call("end",n))}function f(){var n,r,c=t.length;for(e+=(o-e)*i,u.each(function(t){t(e)}),n=0;n<c;++n)null==(r=t[n]).fx?r.x+=r.vx*=a:(r.x=r.fx,r.vx=0),null==r.fy?r.y+=r.vy*=a:(r.y=r.fy,r.vy=0)}function h(){for(var n,e=0,r=t.length;e<r;++e){if((n=t[e]).index=e,isNaN(n.x)||isNaN(n.y)){var i=ql*Math.sqrt(e),o=e*Ll;n.x=i*Math.cos(o),n.y=i*Math.sin(o)}(isNaN(n.vx)||isNaN(n.vy))&&(n.vx=n.vy=0)}}function d(n){return n.initialize&&n.initialize(t),n}return null==t&&(t=[]),h(),n={tick:f,restart:function(){return c.restart(l),n},stop:function(){return c.stop(),n},nodes:function(e){return arguments.length?(t=e,h(),u.each(d),n):t},alpha:function(t){return arguments.length?(e=+t,n):e},alphaMin:function(t){return arguments.length?(r=+t,n):r},alphaDecay:function(t){return arguments.length?(i=+t,n):+i},alphaTarget:function(t){return arguments.length?(o=+t,n):o},velocityDecay:function(t){return arguments.length?(a=1-t,n):1-a},force:function(t,e){return arguments.length>1?(null==e?u.remove(t):u.set(t,d(e)),n):u.get(t)},find:function(n,e,r){var i,o,a,u,c,s=0,l=t.length;for(null==r?r=1/0:r*=r,s=0;s<l;++s)(a=(i=n-(u=t[s]).x)*i+(o=e-u.y)*o)<r&&(c=u,r=a);return c},on:function(t,e){return arguments.length>1?(s.on(t,e),n):s.on(t)}}},t.forceX=function(t){var n,e,r,i=Tl(.1);function o(t){for(var i,o=0,a=n.length;o<a;++o)(i=n[o]).vx+=(r[o]-i.x)*e[o]*t}function a(){if(n){var o,a=n.length;for(e=new Array(a),r=new Array(a),o=0;o<a;++o)e[o]=isNaN(r[o]=+t(n[o],o,n))?0:+i(n[o],o,n)}}return"function"!=typeof t&&(t=Tl(null==t?0:+t)),o.initialize=function(t){n=t,a()},o.strength=function(t){return arguments.length?(i="function"==typeof t?t:Tl(+t),a(),o):i},o.x=function(n){return arguments.length?(t="function"==typeof n?n:Tl(+n),a(),o):t},o},t.forceY=function(t){var n,e,r,i=Tl(.1);function o(t){for(var i,o=0,a=n.length;o<a;++o)(i=n[o]).vy+=(r[o]-i.y)*e[o]*t}function a(){if(n){var o,a=n.length;for(e=new Array(a),r=new Array(a),o=0;o<a;++o)e[o]=isNaN(r[o]=+t(n[o],o,n))?0:+i(n[o],o,n)}}return"function"!=typeof t&&(t=Tl(null==t?0:+t)),o.initialize=function(t){n=t,a()},o.strength=function(t){return arguments.length?(i="function"==typeof t?t:Tl(+t),a(),o):i},o.y=function(n){return arguments.length?(t="function"==typeof n?n:Tl(+n),a(),o):t},o},t.drag=function(){var n,e,r=Yl,i=Bl,o=Hl,a={},u=Qr("start","drag","end"),c=0;function s(t){t.on("mousedown.drag",l).on("touchstart.drag",d).on("touchmove.drag",p).on("touchend.drag touchcancel.drag",v).style("-webkit-tap-highlight-color","rgba(0,0,0,0)")}function l(){if(!e&&r.apply(this,arguments)){var o=g("mouse",i.apply(this,arguments),Cc,this,arguments);o&&(rs(t.event.view).on("mousemove.drag",f,!0).on("mouseup.drag",h,!0),Rl(t.event.view),jl(),n=!1,o("start"))}}function f(){Dl(),n=!0,a.mouse("drag")}function h(){rs(t.event.view).on("mousemove.drag mouseup.drag",null),Ul(t.event.view,n),Dl(),a.mouse("end")}function d(){if(r.apply(this,arguments)){var n,e,o=t.event.changedTouches,a=i.apply(this,arguments),u=o.length;for(n=0;n<u;++n)(e=g(o[n].identifier,a,is,this,arguments))&&(jl(),e("start"))}}function p(){var n,e,r=t.event.changedTouches,i=r.length;for(n=0;n<i;++n)(e=a[r[n].identifier])&&(Dl(),e("drag"))}function v(){var n,r,i=t.event.changedTouches,o=i.length;for(e&&clearTimeout(e),e=setTimeout(function(){e=null},500),n=0;n<o;++n)(r=a[i[n].identifier])&&(jl(),r("end"))}function g(n,e,r,i,l){var f,h,d,p=r(e,n),v=u.copy();if(Tc(new Fl(s,"beforestart",f,n,c,p[0],p[1],0,0,v),function(){return null!=(t.event.subject=f=o.apply(i,l))&&(h=f.x-p[0]||0,d=f.y-p[1]||0,!0)}))return function t(o){var u,g=p;switch(o){case"start":a[n]=t,u=c++;break;case"end":delete a[n],--c;case"drag":p=r(e,n),u=c}Tc(new Fl(s,o,f,n,u,p[0]+h,p[1]+d,p[0]-g[0],p[1]-g[1],v),v.apply,v,[o,i,l])}}return s.filter=function(t){return arguments.length?(r="function"==typeof t?t:Il(!!t),s):r},s.container=function(t){return arguments.length?(i="function"==typeof t?t:Il(t),s):i},s.subject=function(t){return arguments.length?(o="function"==typeof t?t:Il(t),s):o},s.on=function(){var t=u.on.apply(u,arguments);return t===u?s:t},s},t.dragDisable=Rl,t.dragEnable=Ul,t.voronoi=function(){var t=$l,n=Vl,e=null;function r(r){return new Af(r.map(function(e,i){var o=[Math.round(t(e,i,r)/Sf)*Sf,Math.round(n(e,i,r)/Sf)*Sf];return o.index=i,o.data=e,o}),e)}return r.polygons=function(t){return r(t).polygons()},r.links=function(t){return r(t).links()},r.triangles=function(t){return r(t).triangles()},r.x=function(n){return arguments.length?(t="function"==typeof n?n:Xl(+n),r):t},r.y=function(t){return arguments.length?(n="function"==typeof t?t:Xl(+t),r):n},r.extent=function(t){return arguments.length?(e=null==t?null:[[+t[0][0],+t[0][1]],[+t[1][0],+t[1][1]]],r):e&&[[e[0][0],e[0][1]],[e[1][0],e[1][1]]]},r.size=function(t){return arguments.length?(e=null==t?null:[[0,0],[+t[0],+t[1]]],r):e&&[e[1][0]-e[0][0],e[1][1]-e[0][1]]},r},t.zoom=function(){var n,e,r=jf,i=Df,o=0,a=1/0,u=-a,c=a,s=u,l=c,f=250,h=[],d=Qr("start","zoom","end"),p=500,v=150;function g(t){t.on("wheel.zoom",k).on("mousedown.zoom",S).on("dblclick.zoom",N).on("touchstart.zoom",T).on("touchmove.zoom",A).on("touchend.zoom touchcancel.zoom",E).style("-webkit-tap-highlight-color","rgba(0,0,0,0)").property("__zoom",Rf)}function y(t,n){return(n=Math.max(o,Math.min(a,n)))===t.k?t:new zf(n,t.x,t.y)}function _(t,n,e){var r=n[0]-e[0]*t.k,i=n[1]-e[1]*t.k;return r===t.x&&i===t.y?t:new zf(t.k,r,i)}function m(t,n){var e=Math.min(0,t.invertX(n[0][0])-u)||Math.max(0,t.invertX(n[1][0])-c),r=Math.min(0,t.invertY(n[0][1])-s)||Math.max(0,t.invertY(n[1][1])-l);return e||r?t.translate(e,r):t}function x(t){return[(+t[0][0]+ +t[1][0])/2,(+t[0][1]+ +t[1][1])/2]}function b(t,n,e){t.on("start.zoom",function(){w(this,arguments).start()}).on("interrupt.zoom end.zoom",function(){w(this,arguments).end()}).tween("zoom",function(){var t=arguments,r=w(this,t),o=i.apply(this,t),a=e||x(o),u=Math.max(o[1][0]-o[0][0],o[1][1]-o[0][1]),c=this.__zoom,s="function"==typeof n?n.apply(this,t):n,l=Fr(c.invert(a).concat(u/c.k),s.invert(a).concat(u/s.k));return function(t){if(1===t)t=s;else{var n=l(t),e=u/n[2];t=new zf(e,a[0]-n[0]*e,a[1]-n[1]*e)}r.zoom(null,t)}})}function w(t,n){for(var e,r=0,i=h.length;r<i;++r)if((e=h[r]).that===t)return e;return new M(t,n)}function M(t,n){this.that=t,this.args=n,this.index=-1,this.active=0,this.extent=i.apply(t,n)}function k(){if(r.apply(this,arguments)){var n=w(this,arguments),e=this.__zoom,i=Math.max(o,Math.min(a,e.k*Math.pow(2,-t.event.deltaY*(t.event.deltaMode?120:1)/500))),u=Cc(this);if(n.wheel)n.mouse[0][0]===u[0]&&n.mouse[0][1]===u[1]||(n.mouse[1]=e.invert(n.mouse[0]=u)),clearTimeout(n.wheel);else{if(e.k===i)return;n.mouse=[u,e.invert(u)],ys(this),n.start()}Lf(),n.wheel=setTimeout(function(){n.wheel=null,n.end()},v),n.zoom("mouse",m(_(y(e,i),n.mouse[0],n.mouse[1]),n.extent))}}function S(){if(!e&&r.apply(this,arguments)){var n=w(this,arguments),i=rs(t.event.view).on("mousemove.zoom",function(){Lf(),n.moved=!0,n.zoom("mouse",m(_(n.that.__zoom,n.mouse[0]=Cc(n.that),n.mouse[1]),n.extent))},!0).on("mouseup.zoom",function(){i.on("mousemove.zoom mouseup.zoom",null),Ul(t.event.view,n.moved),Lf(),n.end()},!0),o=Cc(this);Rl(t.event.view),qf(),n.mouse=[o,this.__zoom.invert(o)],ys(this),n.start()}}function N(){if(r.apply(this,arguments)){var n=this.__zoom,e=Cc(this),o=n.invert(e),a=n.k*(t.event.shiftKey?.5:2),u=m(_(y(n,a),e,o),i.apply(this,arguments));Lf(),f>0?rs(this).transition().duration(f).call(b,u,e):rs(this).call(g.transform,u)}}function T(){if(r.apply(this,arguments)){var e,i,o,a=w(this,arguments),u=t.event.changedTouches,c=u.length;for(qf(),e=0;e<c;++e)i=u[e],o=[o=is(this,u,i.identifier),this.__zoom.invert(o),i.identifier],a.touch0?a.touch1||(a.touch1=o):a.touch0=o;if(n&&(n=clearTimeout(n),!a.touch1))return a.end(),N.apply(this,arguments);t.event.touches.length===c&&(n=setTimeout(function(){n=null},p),ys(this),a.start())}}function A(){var e,r,i,o,a=w(this,arguments),u=t.event.changedTouches,c=u.length;for(Lf(),n&&(n=clearTimeout(n)),e=0;e<c;++e)r=u[e],i=is(this,u,r.identifier),a.touch0&&a.touch0[2]===r.identifier?a.touch0[0]=i:a.touch1&&a.touch1[2]===r.identifier&&(a.touch1[0]=i);if(r=a.that.__zoom,a.touch1){var s=a.touch0[0],l=a.touch0[1],f=a.touch1[0],h=a.touch1[1],d=(d=f[0]-s[0])*d+(d=f[1]-s[1])*d,p=(p=h[0]-l[0])*p+(p=h[1]-l[1])*p;r=y(r,Math.sqrt(d/p)),i=[(s[0]+f[0])/2,(s[1]+f[1])/2],o=[(l[0]+h[0])/2,(l[1]+h[1])/2]}else{if(!a.touch0)return;i=a.touch0[0],o=a.touch0[1]}a.zoom("touch",m(_(r,i,o),a.extent))}function E(){var n,r,i=w(this,arguments),o=t.event.changedTouches,a=o.length;for(qf(),e&&clearTimeout(e),e=setTimeout(function(){e=null},p),n=0;n<a;++n)r=o[n],i.touch0&&i.touch0[2]===r.identifier?delete i.touch0:i.touch1&&i.touch1[2]===r.identifier&&delete i.touch1;i.touch1&&!i.touch0&&(i.touch0=i.touch1,delete i.touch1),i.touch0||i.end()}return g.transform=function(t,n){var e=t.selection?t.selection():t;e.property("__zoom",Rf),t!==e?b(t,n):e.interrupt().each(function(){w(this,arguments).start().zoom(null,"function"==typeof n?n.apply(this,arguments):n).end()})},g.scaleBy=function(t,n){g.scaleTo(t,function(){return this.__zoom.k*("function"==typeof n?n.apply(this,arguments):n)})},g.scaleTo=function(t,n){g.transform(t,function(){var t=i.apply(this,arguments),e=this.__zoom,r=x(t),o=e.invert(r);return m(_(y(e,"function"==typeof n?n.apply(this,arguments):n),r,o),t)})},g.translateBy=function(t,n,e){g.transform(t,function(){return m(this.__zoom.translate("function"==typeof n?n.apply(this,arguments):n,"function"==typeof e?e.apply(this,arguments):e),i.apply(this,arguments))})},M.prototype={start:function(){return 1==++this.active&&(this.index=h.push(this)-1,this.emit("start")),this},zoom:function(t,n){return this.mouse&&"mouse"!==t&&(this.mouse[1]=n.invert(this.mouse[0])),this.touch0&&"touch"!==t&&(this.touch0[1]=n.invert(this.touch0[0])),this.touch1&&"touch"!==t&&(this.touch1[1]=n.invert(this.touch1[0])),this.that.__zoom=n,this.emit("zoom"),this},end:function(){return 0==--this.active&&(h.splice(this.index,1),this.index=-1,this.emit("end")),this},emit:function(t){Tc(new Cf(g,t,this.that.__zoom),d.apply,d,[t,this.that,this.args])}},g.filter=function(t){return arguments.length?(r="function"==typeof t?t:Ef(!!t),g):r},g.extent=function(t){return arguments.length?(i="function"==typeof t?t:Ef([[+t[0][0],+t[0][1]],[+t[1][0],+t[1][1]]]),g):i},g.scaleExtent=function(t){return arguments.length?(o=+t[0],a=+t[1],g):[o,a]},g.translateExtent=function(t){return arguments.length?(u=+t[0][0],c=+t[1][0],s=+t[0][1],l=+t[1][1],g):[[u,s],[c,l]]},g.duration=function(t){return arguments.length?(f=+t,g):f},g.on=function(){var t=d.on.apply(d,arguments);return t===d?g:t},g},t.zoomIdentity=Pf,t.zoomTransform=Of,t.brush=function(){return ah(Zf)},t.brushX=function(){return ah(Vf)},t.brushY=function(){return ah(Wf)},t.brushSelection=function(t){var n=t.__brush;return n?n.dim.output(n.selection):null},t.chord=function(){var t=0,n=null,e=null,r=null;function i(i){var o,a,u,c,s,l,f=i.length,h=[],d=v(f),p=[],g=[],y=g.groups=new Array(f),_=new Array(f*f);for(o=0,s=-1;++s<f;){for(a=0,l=-1;++l<f;)a+=i[s][l];h.push(a),p.push(v(f)),o+=a}for(n&&d.sort(function(t,e){return n(h[t],h[e])}),e&&p.forEach(function(t,n){t.sort(function(t,r){return e(i[n][t],i[n][r])})}),o=hh(0,fh-t*f)/o,c=o?t:fh/f,a=0,s=-1;++s<f;){for(u=a,l=-1;++l<f;){var m=d[s],x=p[m][l],b=i[m][x],w=a,M=a+=b*o;_[x*f+m]={index:m,subindex:x,startAngle:w,endAngle:M,value:b}}y[m]={index:m,startAngle:u,endAngle:a,value:h[m]},a+=c}for(s=-1;++s<f;)for(l=s-1;++l<f;){var k=_[l*f+s],S=_[s*f+l];(k.value||S.value)&&g.push(k.value<S.value?{source:S,target:k}:{source:k,target:S})}return r?g.sort(r):g}return i.padAngle=function(n){return arguments.length?(t=hh(0,n),i):t},i.sortGroups=function(t){return arguments.length?(n=t,i):n},i.sortSubgroups=function(t){return arguments.length?(e=t,i):e},i.sortChords=function(t){return arguments.length?(null==t?r=null:(n=t,r=function(t,e){return n(t.source.value+t.target.value,e.source.value+e.target.value)})._=t,i):r&&r._;var n},i},t.ribbon=function(){var t=vh,n=gh,e=yh,r=_h,i=mh,o=null;function a(){var a,u=dh.call(arguments),c=t.apply(this,u),s=n.apply(this,u),l=+e.apply(this,(u[0]=c,u)),f=r.apply(this,u)-lh,h=i.apply(this,u)-lh,d=l*uh(f),p=l*ch(f),v=+e.apply(this,(u[0]=s,u)),g=r.apply(this,u)-lh,y=i.apply(this,u)-lh;if(o||(o=a=_t()),o.moveTo(d,p),o.arc(0,0,l,f,h),f===g&&h===y||(o.quadraticCurveTo(0,0,v*uh(g),v*ch(g)),o.arc(0,0,v,g,y)),o.quadraticCurveTo(0,0,d,p),o.closePath(),a)return o=null,a+""||null}return a.radius=function(t){return arguments.length?(e="function"==typeof t?t:ph(+t),a):e},a.startAngle=function(t){return arguments.length?(r="function"==typeof t?t:ph(+t),a):r},a.endAngle=function(t){return arguments.length?(i="function"==typeof t?t:ph(+t),a):i},a.source=function(n){return arguments.length?(t=n,a):t},a.target=function(t){return arguments.length?(n=t,a):n},a.context=function(t){return arguments.length?(o=null==t?null:t,a):o},a},t.geoAlbers=Qv,t.geoAlbersUsa=function(){var t,n,e,r,i,o,a=Qv(),u=Jv().rotate([154,0]).center([-2,58.5]).parallels([55,65]),c=Jv().rotate([157,0]).center([-3,19.9]).parallels([8,18]),s={point:function(t,n){o=[t,n]}};function l(t){var n=t[0],a=t[1];return o=null,e.point(n,a),o||(r.point(n,a),o)||(i.point(n,a),o)}return l.invert=function(t){var n=a.scale(),e=a.translate(),r=(t[0]-e[0])/n,i=(t[1]-e[1])/n;return(i>=.12&&i<.234&&r>=-.425&&r<-.214?u:i>=.166&&i<.234&&r>=-.214&&r<-.115?c:a).invert(t)},l.stream=function(e){return t&&n===e?t:(r=[a.stream(n=e),u.stream(e),c.stream(e)],i=r.length,t={point:function(t,n){for(var e=-1;++e<i;)r[e].point(t,n)},sphere:function(){for(var t=-1;++t<i;)r[t].sphere()},lineStart:function(){for(var t=-1;++t<i;)r[t].lineStart()},lineEnd:function(){for(var t=-1;++t<i;)r[t].lineEnd()},polygonStart:function(){for(var t=-1;++t<i;)r[t].polygonStart()},polygonEnd:function(){for(var t=-1;++t<i;)r[t].polygonEnd()}});var r,i},l.precision=function(t){return arguments.length?(a.precision(t),u.precision(t),c.precision(t),l):a.precision()},l.scale=function(t){return arguments.length?(a.scale(t),u.scale(.35*t),c.scale(t),l.translate(a.translate())):a.scale()},l.translate=function(t){if(!arguments.length)return a.translate();var n=a.scale(),o=+t[0],f=+t[1];return e=a.translate(t).clipExtent([[o-.455*n,f-.238*n],[o+.455*n,f+.238*n]]).stream(s),r=u.translate([o-.307*n,f+.201*n]).clipExtent([[o-.425*n+kh,f+.12*n+kh],[o-.214*n-kh,f+.234*n-kh]]).stream(s),i=c.translate([o-.205*n,f+.212*n]).clipExtent([[o-.214*n+kh,f+.166*n+kh],[o-.115*n-kh,f+.234*n-kh]]).stream(s),l},l.fitExtent=Yv(l),l.fitSize=Fv(l),l.scale(1070)},t.geoArea=function(t){return pd.reset(),Kh(t,vd),2*pd},t.geoAzimuthalEqualArea=function(){return Vv(ng).scale(124.75).clipAngle(179.999)},t.geoAzimuthalEqualAreaRaw=ng,t.geoAzimuthalEquidistant=function(){return Vv(eg).scale(79.4188).clipAngle(179.999)},t.geoAzimuthalEquidistantRaw=eg,t.geoBounds=function(t){var n,e,r,i,o,a,u;if(cd=ud=-(od=ad=1/0),Td=[],Kh(t,$d),e=Td.length){for(Td.sort(np),n=1,r=Td[0],o=[r];n<e;++n)i=Td[n],ep(r,i[0])||ep(r,i[1])?(tp(r[0],i[1])>tp(r[0],r[1])&&(r[1]=i[1]),tp(i[0],r[1])>tp(r[0],r[1])&&(r[0]=i[0])):o.push(r=i);for(a=-1/0,e=o.length-1,n=0,r=o[e];n<=e;r=i,++n)i=o[n],(u=tp(r[1],i[0]))>a&&(a=u,od=i[0],ud=r[1])}return Td=Ad=null,od===1/0||ad===1/0?[[NaN,NaN],[NaN,NaN]]:[[od,ad],[ud,cd]]},t.geoCentroid=function(t){Ed=Cd=zd=Pd=Od=qd=Ld=jd=Dd=Rd=Ud=0,Kh(t,rp);var n=Dd,e=Rd,r=Ud,i=n*n+e*e+r*r;return i<Sh&&(n=qd,e=Ld,r=jd,Cd<kh&&(n=zd,e=Pd,r=Od),(i=n*n+e*e+r*r)<Sh)?[NaN,NaN]:[qh(e,n)*Ch,Xh(r/Yh(i))*Ch]},t.geoCircle=function(){var t,n,e=pp([0,0]),r=pp(90),i=pp(6),o={point:function(e,r){t.push(e=n(e,r)),e[0]*=Ch,e[1]*=Ch}};function a(){var a=e.apply(this,arguments),u=r.apply(this,arguments)*zh,c=i.apply(this,arguments)*zh;return t=[],n=yp(-a[0]*zh,-a[1]*zh,0).invert,bp(o,u,c,1),a={type:"Polygon",coordinates:[t]},t=n=null,a}return a.center=function(t){return arguments.length?(e="function"==typeof t?t:pp([+t[0],+t[1]]),a):e},a.radius=function(t){return arguments.length?(r="function"==typeof t?t:pp(+t),a):r},a.precision=function(t){return arguments.length?(i="function"==typeof t?t:pp(+t),a):i},a},t.geoClipExtent=function(){var t,n,e,r=0,i=0,o=960,a=500;return e={stream:function(e){return t&&n===e?t:t=Cp(r,i,o,a)(n=e)},extent:function(u){return arguments.length?(r=+u[0][0],i=+u[0][1],o=+u[1][0],a=+u[1][1],t=n=null,e):[[r,i],[o,a]]}}},t.geoConicConformal=function(){return Zv(ag).scale(109.5).parallels([30,30])},t.geoConicConformalRaw=ag,t.geoConicEqualArea=Jv,t.geoConicEqualAreaRaw=Gv,t.geoConicEquidistant=function(){return Zv(cg).scale(131.154).center([0,13.9389])},t.geoConicEquidistantRaw=cg,t.geoDistance=function(t,n){return Ip[0]=t,Ip[1]=n,Up(Fp)},t.geoEquirectangular=function(){return Vv(ug).scale(152.63)},t.geoEquirectangularRaw=ug,t.geoGnomonic=function(){return Vv(sg).scale(144.049).clipAngle(60)},t.geoGnomonicRaw=sg,t.geoGraticule=function(){var t,n,e,r,i,o,a,u,c,s,l,f,h=10,d=h,p=90,g=360,y=2.5;function _(){return{type:"MultiLineString",coordinates:m()}}function m(){return v(jh(r/p)*p,e,p).map(l).concat(v(jh(u/g)*g,a,g).map(f)).concat(v(jh(n/h)*h,t,h).filter(function(t){return Ph(t%p)>kh}).map(c)).concat(v(jh(o/d)*d,i,d).filter(function(t){return Ph(t%g)>kh}).map(s))}return _.lines=function(){return m().map(function(t){return{type:"LineString",coordinates:t}})},_.outline=function(){return{type:"Polygon",coordinates:[l(r).concat(f(a).slice(1),l(e).reverse().slice(1),f(u).reverse().slice(1))]}},_.extent=function(t){return arguments.length?_.extentMajor(t).extentMinor(t):_.extentMinor()},_.extentMajor=function(t){return arguments.length?(r=+t[0][0],e=+t[1][0],u=+t[0][1],a=+t[1][1],r>e&&(t=r,r=e,e=t),u>a&&(t=u,u=a,a=t),_.precision(y)):[[r,u],[e,a]]},_.extentMinor=function(e){return arguments.length?(n=+e[0][0],t=+e[1][0],o=+e[0][1],i=+e[1][1],n>t&&(e=n,n=t,t=e),o>i&&(e=o,o=i,i=e),_.precision(y)):[[n,o],[t,i]]},_.step=function(t){return arguments.length?_.stepMajor(t).stepMinor(t):_.stepMinor()},_.stepMajor=function(t){return arguments.length?(p=+t[0],g=+t[1],_):[p,g]},_.stepMinor=function(t){return arguments.length?(h=+t[0],d=+t[1],_):[h,d]},_.precision=function(h){return arguments.length?(y=+h,c=Yp(o,i,90),s=Bp(n,t,y),l=Yp(u,a,90),f=Bp(r,e,y),_):y},_.extentMajor([[-180,-90+kh],[180,90-kh]]).extentMinor([[-180,-80-kh],[180,80+kh]])},t.geoInterpolate=function(t,n){var e=t[0]*zh,r=t[1]*zh,i=n[0]*zh,o=n[1]*zh,a=Lh(r),u=Ih(r),c=Lh(o),s=Ih(o),l=a*Lh(e),f=a*Ih(e),h=c*Lh(i),d=c*Ih(i),p=2*Xh(Yh($h(o-r)+a*c*$h(i-e))),v=Ih(p),g=p?function(t){var n=Ih(t*=p)/v,e=Ih(p-t)/v,r=e*l+n*h,i=e*f+n*d,o=e*u+n*s;return[qh(i,r)*Ch,qh(o,Yh(r*r+i*i))*Ch]}:function(){return[e*Ch,r*Ch]};return g.distance=p,g},t.geoLength=Up,t.geoMercator=function(){return ig(rg).scale(961/Eh)},t.geoMercatorRaw=rg,t.geoOrthographic=function(){return Vv(lg).scale(249.5).clipAngle(90+kh)},t.geoOrthographicRaw=lg,t.geoPath=function(){var t,n,e,r,i=4.5;function o(t){return t&&("function"==typeof i&&r.pointRadius(+i.apply(this,arguments)),Kh(t,n(r))),r.result()}return o.area=function(t){return Kh(t,n(Jp)),Jp.result()},o.bounds=function(t){return Kh(t,n(lv)),lv.result()},o.centroid=function(t){return Kh(t,n(xv)),xv.result()},o.projection=function(e){return arguments.length?(n=null==(t=e)?Hp:e.stream,o):t},o.context=function(t){return arguments.length?(r=null==(e=t)?new zv:new Cv(t),"function"!=typeof i&&r.pointRadius(i),o):e},o.pointRadius=function(t){return arguments.length?(i="function"==typeof t?t:(r.pointRadius(+t),+t),o):i},o.projection(null).context(null)},t.geoProjection=Vv,t.geoProjectionMutator=Wv,t.geoRotation=function(t){function n(n){return(n=t(n[0]*zh,n[1]*zh))[0]*=Ch,n[1]*=Ch,n}return t=yp(t[0]*zh,t[1]*zh,t.length>2?t[2]*zh:0),n.invert=function(n){return(n=t.invert(n[0]*zh,n[1]*zh))[0]*=Ch,n[1]*=Ch,n},n},t.geoStereographic=function(){return Vv(fg).scale(250).clipAngle(142)},t.geoStereographicRaw=fg,t.geoStream=Kh,t.geoTransform=function(t){return{stream:Rv(t)}},t.geoTransverseMercator=function(){var t=ig(hg),n=t.center,e=t.rotate;return t.center=function(t){return arguments.length?n([-t[1],t[0]]):[(t=n())[1],-t[0]]},t.rotate=function(t){return arguments.length?e([t[0],t[1],t.length>2?t[2]+90:90]):[(t=e())[0],t[1],t[2]-90]},e([0,0,90]).scale(159.155)},t.geoTransverseMercatorRaw=hg,Object.defineProperty(t,"__esModule",{value:!0})}(n)},function(t,n,e){"use strict";Object.defineProperty(n,"__esModule",{value:!0});var r=Object.assign||function(t){for(var n=1;n<arguments.length;n++){var e=arguments[n];for(var r in e)Object.prototype.hasOwnProperty.call(e,r)&&(t[r]=e[r])}return t};n.default=function(t,n){var e=r({},u,n),i=t.append("g"),o=e.r,c=e.g,s=e.b,l=e.a,f=function(t){var n=t.x,e=t.y,r=t.z,i=t.length,o=t.height,u=t.width,c=a.default.iso(n+u,e,r),s=(a.default.iso(n-u,e,r),a.default.iso(n+u,e+i,r)),l=a.default.iso(n,e+i,r),f=a.default.iso(n,e,r+o),h=a.default.iso(n+u,e,r+o),d=a.default.iso(n+u,e+i,r+o),p=a.default.iso(n,e+i,r+o),v=a.default.iso(n,e,r);return{shadow:[l,s,c,v,l],face_left:[c,h,d,s],face_right:[d,p,l,s],face_top:[f,p,d,h],inline:[p,d,s,d,h],outline:[f,p,l,s,c,h,f]}}(e),h=a.default.isoColor(o,c,s,l),d={};Object.keys(f).forEach(function(t){if("shadow"!==t||e.shadow){var n=f[t],r=i.append("polyline").attr("points",function(){return a.default.generatePoints(n)}).attr("class",t);"outline"!==t&&"inline"!==t?(r.attr("fill",h[t]),"shadow"===t&&r.attr("style",'filter:url("#blur")')):r.attr("stroke",h[t]).attr("fill","rgba(0,0,0,0)"),d[t]=r}});i.append("rect").attr("transform","translate(0, "+2*-e.height+")").attr("stroke","rgb(125,0,0)").attr("stroke-width",1).attr("fill","rgba(255,255,255,0.8)"),i.append("text").attr("text-anchor","middle").attr("transform","translate(0, "+2*-e.height+")");var p=a.default.iso(-e.width/2,-e.length/2);return i.attr("transform","translate("+p[0]+", "+p[1]+")"),i};var i,o=e(0),a=(i=o)&&i.__esModule?i:{default:i};var u={x:0,y:0,z:0,length:20,height:30,width:15,r:180,g:180,b:180,a:1,shadow:!0};t.exports=n.default},function(t,n,e){"use strict";var r,i=e(4),o=(r=i)&&r.__esModule?r:{default:r};window.acintro=o.default},function(t,n,e){"use strict";Object.defineProperty(n,"__esModule",{value:!0});var r=Object.assign||function(t){for(var n=1;n<arguments.length;n++){var e=arguments[n];for(var r in e)Object.prototype.hasOwnProperty.call(e,r)&&(t[r]=e[r])}return t},i=e(1),o=v(e(0)),a=(v(e(2)),v(e(5))),u=v(e(6)),c=v(e(7)),s=v(e(8)),l=v(e(9)),f=v(e(15)),h=v(e(16)),d=v(e(17)),p=v(e(18));function v(t){return t&&t.__esModule?t:{default:t}}n.default=function(t){var n=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{width:600,height:400},e=document.querySelector(t);console.log(e);var v=n.width,g=n.height,y=o.default.createSvg(v,g);e.appendChild(y);var _=(0,i.select)(y),m={unit:10},x=0,b=0;function w(){var t=arguments.length>0&&void 0!==arguments[0]?arguments[0]:x-40,n=arguments.length>1&&void 0!==arguments[1]?arguments[1]:b,e=arguments[2],i=(0,d.default)(_,r({},m,{callback:e}));return o.default.transform(i.root,t,n,0),setInterval(function(){return i.update()},100),i}function M(){var t=arguments.length>0&&void 0!==arguments[0]?arguments[0]:x+300,n=arguments.length>1&&void 0!==arguments[1]?arguments[1]:b-180,e=arguments[2],i=(0,l.default)(_,r({},m,{callback:e}));return o.default.transform(i.root,t,n,0),i}function k(){var t=arguments.length>0&&void 0!==arguments[0]?arguments[0]:x+370,n=arguments.length>1&&void 0!==arguments[1]?arguments[1]:b-180,e=arguments[2],i=(0,s.default)(_,r({},m,{callback:e}));return o.default.transform(i.root,t,n,0),i}function S(){var t=arguments.length>0&&void 0!==arguments[0]?arguments[0]:x+450,n=arguments.length>1&&void 0!==arguments[1]?arguments[1]:b-180,e=arguments[2],i=(0,a.default)(_,r({},m,{callback:e}));return o.default.transform(i.root,t,n,0),i}function N(){var t=arguments.length>0&&void 0!==arguments[0]?arguments[0]:x+300,n=arguments.length>1&&void 0!==arguments[1]?arguments[1]:b+200,e=arguments[2],i=(0,f.default)(_,r({},m,{callback:e}));return o.default.transform(i.root,t,n,0),setInterval(function(){return i.update()},Math.floor(600+400*Math.random())),i}function T(){var t=arguments.length>0&&void 0!==arguments[0]?arguments[0]:x+440,n=arguments.length>1&&void 0!==arguments[1]?arguments[1]:b-20,e=arguments[2],i=(0,h.default)(_,r({},m,{callback:e}));return o.default.transform(i.root,t,n,0),i}function A(){var t=arguments.length>0&&void 0!==arguments[0]?arguments[0]:x+440,n=arguments.length>1&&void 0!==arguments[1]?arguments[1]:b+40,e=arguments[2],i=(0,c.default)(_,r({},m,{callback:e}));return o.default.transform(i.root,t,n,0),i}function E(){var t=arguments.length>0&&void 0!==arguments[0]?arguments[0]:x+440,n=arguments.length>1&&void 0!==arguments[1]?arguments[1]:b+100,e=arguments[2],i=(0,u.default)(_,r({},m,{callback:e}));return o.default.transform(i.root,t,n,0),setInterval(function(){return i.update()},100),i}function C(){var t=arguments.length>0&&void 0!==arguments[0]?arguments[0]:x+300,n=arguments.length>1&&void 0!==arguments[1]?arguments[1]:b+130,e=(0,p.default)(_,m);return o.default.transform(e.root,t,n,0),e}var z={constructArchitecture:w,constructData:M,constructVisualization:k,constructML:S,constructClient:N,constructDevOPS:T,constructQA:A,constructDev:E,constructFirewall:C};if(n.component){var P=n.x,O=n.y,q=n.component,L=n.interval,j=void 0===L?400:L,D=z[q](P,O);setInterval(function(){D.update()},j)}else{!function(){o.default.rect(_,400,-50,0,80,180,"rgba(240,80,50,0.2)","rgba(240,80,50, 0)").on("mouseenter",function(){(0,i.select)(this).transition().duration(300).attr("fill","rgba(240,80,50, .1)")}).on("mouseleave",function(){(0,i.select)(this).transition().duration(300).attr("fill","rgba(240,80,50, 0)")}),o.default.rect(_,250,-110,0,120,240,"rgba(60, 60, 140, .1)","rgba(60, 60, 140, 0)").on("mouseenter",function(){(0,i.select)(this).transition().duration(300).attr("fill","rgba(60, 60, 140, .1)")}).on("mouseleave",function(){(0,i.select)(this).transition().duration(300).attr("fill","rgba(60, 60, 140, 0)")}),o.default.rect(_,250,-210,0,230,90,"rgba(0, 180, 10, .1)","rgba(0, 180, 10, 0)").on("mouseenter",function(){(0,i.select)(this).transition().duration(300).attr("fill","rgba(0, 180, 10, .1)")}).on("mouseleave",function(){(0,i.select)(this).transition().duration(300).attr("fill","rgba(0, 180, 10, 0)")}),o.default.text(_,"Security",285,145,0,1).text.attr("font-family","monospace").attr("font-size",8).attr("pointer-events","none"),o.default.text(_,"Delivery",475,50,0,2).text.attr("font-family","monospace").attr("font-size",8).attr("pointer-events","none"),o.default.text(_,"Data Science",345,-125,0,1).text.attr("font-family","monospace").attr("font-size",8).attr("pointer-events","none"),o.default.text(_,"Architecture",365,30,0,2).text.attr("font-family","monospace").attr("font-size",8).attr("pointer-events","none");var t=[[x+300,b+200,0],[x+300,b+35,0],[x+270,b+35,0],[x+270,b+-20,0],[x+300,b+-20,0],[x+300,b+-65,0],[x+270,b+-65,0],[x+270,b+-100,0],[x+300,b+-100,0],[x+300,b+-160,0]],n=[[x+300,b+200,0],[x+300,b+35,0],[x+330,b+35,0],[x+330,b+-20,0],[x+300,b+-20,0],[x+300,b+-65,0],[x+330,b+-65,0],[x+330,b+-100,0],[x+300,b+-100,0],[x+300,b+-160,0]],e=[[x+300,b+200,0],[x+300,b+35,0]];o.default.drawPoly(_,[[x+440,b+100,0],[x+440,b-65,0],[x+340,b-65,0]],"rgba(200,200,200,1)"),o.default.drawPoly(_,[[x+300,b-180,0],[x+460,b-180,0]],"rgba(200,200,200,1)"),o.default.drawPoly(_,t,"rgba(200,200,200,1)"),o.default.drawPoly(_,n,"rgba(200,200,200,1)"),o.default.drawPoly(_,e,"rgba(200,200,200,1)")}();var R=M(void 0,void 0,k(void 0,void 0,S().update).update);w(void 0,void 0,R.update),N(void 0,void 0,R.update),E(void 0,void 0,A(void 0,void 0,T().update).update),C()}return(0,i.select)(y)},t.exports=n.default},function(t,n,e){"use strict";Object.defineProperty(n,"__esModule",{value:!0});var r=e(1),i=a(e(0)),o=a(e(2));function a(t){return t&&t.__esModule?t:{default:t}}function u(t){if(Array.isArray(t)){for(var n=0,e=Array(t.length);n<t.length;n++)e[n]=t[n];return e}return Array.from(t)}n.default=function(t,n){var e=t.append("g").attr("id","ml"),a=n.unit;(0,o.default)(e,{x:0,y:0,z:0,height:2,length:4*a,width:4*a,r:220,g:220,b:220,shadow:!1});var c=i.default.text(e,"Machine",-13,27,0,1).text,s=i.default.text(e,"Learning",-15,33,0,1).text;c.attr("font-family","monospace").attr("font-size",8).attr("pointer-events","none"),s.attr("font-family","monospace").attr("font-size",8).attr("pointer-events","none");for(var l=[],f=0;f<100;f++)l.push([-15+Math.floor(30*Math.random()),-15+Math.floor(30*Math.random()),Math.floor(10*Math.random()),Math.floor(100+Math.floor(150*Math.random())),Math.floor(100+Math.floor(150*Math.random())),Math.floor(100+Math.floor(150*Math.random()))]);var h=e.append("g").attr("transform","translate("+i.default.iso(0,0,3).join(",")+")").selectAll("circle").data(l).enter().append("circle").attr("r",2).attr("fill","rgba(0,0,0,0.3)").attr("transform",function(t){var n=i.default.iso.apply(i.default,u(t));return"translate("+n[0]+", "+n[1]+")"});return{root:e,update:function(t){for(var n=[],e=0;e<2+Math.floor(4*Math.random());e++)n.push([-15+Math.floor(30*Math.random()),-15+Math.floor(30*Math.random()),4+Math.floor(1*Math.random()),Math.floor(10+Math.floor(150*Math.random())),Math.floor(10+Math.floor(150*Math.random())),Math.floor(10+Math.floor(150*Math.random()))]);l.forEach(function(t){var e=n[Math.floor(Math.random()*n.length)];t[0]=e[0]-4+Math.floor(8*Math.random()),t[1]=e[1]-4+Math.floor(8*Math.random()),t[2]=e[2]-4+Math.floor(8*Math.random()),t[3]=e[3],t[4]=e[4],t[5]=e[5]}),h.transition().ease(r.easeSin).duration(400).attr("fill",function(t){return"rgba("+t[3]+", "+t[4]+", "+t[5]+", 0.3)"}).attr("transform",function(t){var n=i.default.iso.apply(i.default,u(t));return"translate("+n[0]+", "+n[1]+")"})}}},t.exports=n.default},function(t,n,e){"use strict";Object.defineProperty(n,"__esModule",{value:!0});var r=e(1),i=a(e(0)),o=a(e(2));function a(t){return t&&t.__esModule?t:{default:t}}n.default=function(t,n){var e=t.append("g").attr("id","development"),a=n.unit,u=n.callback;(0,o.default)(e,{x:0,y:0,z:0,height:2,length:4*a,width:6*a,r:220,g:220,b:220,shadow:!1}),i.default.text(e,"Development",-20,27,0,1).text.attr("font-family","monospace").attr("font-size",8).attr("pointer-events","none");for(var c=i.default.drawPoly(e,[[3*-a,2*-a,0],[3*a,2*-a,0],[3*a,2*a,0],[3*-a,2*a,0],[3*-a,2*-a,0]],"rgba(0,0,0, 0.1)","rgba(120,240,0,.1)"),s=[],l=[],f=0;f<3;f++)for(var h=0;h<3;h++){(0,o.default)(e,{y:f*a*1.2-a,x:1.8*-a+h*a*2,z:3,height:3,width:.8*a,length:.5*a,r:190,g:120,b:70,shadow:!0});var d=2.6*-a+h*a*2,p=1.3*-a+f*a*1.25;s.push(i.default.drawPoly(e,[[.2*a+d,0+p,4],[.8*a+d,0+p,4],[.8*a+d,0+p,7],[.2*a+d,0+p,7]],"rgb(0,0,0)","rgb(0,0,0)"));for(var v=0;v<5;v++){var g=Math.random()*a*.8;l.push({dx:d,dy:p,k:v,length:g,poly:i.default.drawPoly(e,[[.2*a+d,0+p,9+1.4*v],[.2*a+g+d,0+p,9+1.4*v]],"rgba(0,0,0, 0.6)")})}}return{root:e,update:function(){for(var t=l.length-1;t>=0;t--){var n=l[t],e=n.dx,o=n.dy,s=n.k,f=n.poly,h=void 0;0===s?(h=Math.random()*a*.8,n.length=h):n.length=h=l[t-1].length,f.attr("points",i.default.getIsoPoints([[.2*a+e,0+o,9+1.4*s],[.2*a+h+e,0+o,9+1.4*s]]))}Math.random()<.05&&u&&(c.transition().duration(150).ease(r.easeSin).attr("points",i.default.getIsoPoints([[5*-a,3*-a,0],[5*a,3*-a,0],[5*a,3*a,0],[5*-a,3*a,0],[5*-a,3*-a,0]])).on("end",function(){c.attr("points",i.default.getIsoPoints([[3*-a,2*-a,0],[3*a,2*-a,0],[3*a,2*a,0],[3*-a,2*a,0],[3*-a,2*-a,0]]))}),u())}}},t.exports=n.default},function(t,n,e){"use strict";Object.defineProperty(n,"__esModule",{value:!0});var r=e(1),i=a(e(0)),o=a(e(2));function a(t){return t&&t.__esModule?t:{default:t}}n.default=function(t,n){var e=t.append("g").attr("id","qa"),a=n.unit,u=n.callback;(0,o.default)(e,{x:0,y:0,z:0,height:2,length:3*a,width:2*a,r:220,g:220,b:220,shadow:!1}),i.default.text(e,"QA",17,4,0,2).text.attr("font-family","monospace").attr("font-size",8).attr("pointer-events","none"),(0,o.default)(e,{x:1.8*-a+2*a,y:.3*a,z:3,height:1.4*a,width:a,length:1.6*a,r:100,g:100,b:100,shadow:!0});for(var c=[],s=0;s<5;s++)c.push(i.default.drawPoly(e,[[.8*-a,3*s-a,1*a],[.8*-a+6,3*s-a,1*a],[.8*-a+6,3*s-a,2*a],[.8*-a,3*s-a,2*a],[.8*-a,3*s-a,1*a]],"rgba(100,100,100,0.8)","rgba(255,255,255,0.8)"));return{root:e,update:function(){var t=!0;c.forEach(function(n,e){var i=Math.random()>.2;t=i&&t,n.transition().delay(500-100*e).ease(r.easeSin).duration(200).attr("transform","translate(0, -5)").attr("fill",i>.2?"rgba(160,255,160,0.8)":"rgba(255,160,160,0.8)").on("end",function(){n.transition().delay(100).ease(r.easeSin).duration(200).attr("transform","translate(0, 0)")})}),t&&u&&setTimeout(function(){u()},1e3)}}},t.exports=n.default},function(t,n,e){"use strict";Object.defineProperty(n,"__esModule",{value:!0});var r=e(1),i=a(e(0)),o=a(e(2));function a(t){return t&&t.__esModule?t:{default:t}}n.default=function(t,n){var e=t.append("g").attr("id","vis"),a=n.unit,u=n.callback;(0,o.default)(e,{x:0,y:0,z:0,height:2,length:4*a,width:4*a,r:220,g:220,b:220,shadow:!1}),i.default.text(e,"Visualization",-24,27,0,1).text.attr("font-family","monospace").attr("font-size",8).attr("pointer-events","none");for(var c=[],s=e.append("g").attr("transform","translate("+i.default.iso(0,0,3).join(",")+")"),l=0;l<7;l++){for(var f=[],h=0;h<10;h++)f.push([3*h,5*l,0===h?0:2+Math.floor(10*Math.random())]);f.push([30,5*l,0]),c.push(i.default.drawPoly(s,f,"rgba(128, 0, 0,0.6)").attr("fill","rgba(243,"+(200-20*l)+","+(54+5*l)+",0.6)").attr("transform","translate(0,-12)"))}return{root:e,update:function(){for(var t=0;t<7;t++){for(var n=[],e=0;e<10;e++)n.push([3*e,5*t,0===e?0:2+Math.floor(10*Math.random())]);n.push([30,5*t,0]),c[t].transition().ease(r.easeSin).duration(400).attr("points",i.default.getIsoPoints(n))}u&&Math.random()<.1&&u()}}},t.exports=n.default},function(t,n,e){"use strict";Object.defineProperty(n,"__esModule",{value:!0});e(1),i(e(0));var r=i(e(2));e(10);function i(t){return t&&t.__esModule?t:{default:t}}n.default=function(t,n){var e=t.append("g").attr("id","data"),i=n.unit,o=n.callback;(0,r.default)(e,{x:0,y:0,z:0,height:2,length:4*i,width:4*i,r:220,g:220,b:220,shadow:!1}),(0,r.default)(e,{x:0,y:0,z:0,height:2.5*i,length:2.5*i,width:2.5*i,r:220,g:220,b:220,shadow:!1});var a="0100100110",u=e.append("g").attr("transform","translate(-25,-40)").append("text").attr("font-family","monospace").attr("font-size",8).text(a);return{root:e,update:function(){a=""+a.substr(1)+(Math.random()<.5?0:1),u.text(a),o&&Math.random()>.4&&o()}}},t.exports=n.default},function(t,n,e){(function(t,r){var i=/%[sdj%]/g;n.format=function(t){if(!y(t)){for(var n=[],e=0;e<arguments.length;e++)n.push(u(arguments[e]));return n.join(" ")}e=1;for(var r=arguments,o=r.length,a=String(t).replace(i,function(t){if("%%"===t)return"%";if(e>=o)return t;switch(t){case"%s":return String(r[e++]);case"%d":return Number(r[e++]);case"%j":try{return JSON.stringify(r[e++])}catch(t){return"[Circular]"}default:return t}}),c=r[e];e<o;c=r[++e])v(c)||!x(c)?a+=" "+c:a+=" "+u(c);return a},n.deprecate=function(e,i){if(_(t.process))return function(){return n.deprecate(e,i).apply(this,arguments)};if(!0===r.noDeprecation)return e;var o=!1;return function(){if(!o){if(r.throwDeprecation)throw new Error(i);r.traceDeprecation?console.trace(i):console.error(i),o=!0}return e.apply(this,arguments)}};var o,a={};function u(t,e){var r={seen:[],stylize:s};return arguments.length>=3&&(r.depth=arguments[2]),arguments.length>=4&&(r.colors=arguments[3]),p(e)?r.showHidden=e:e&&n._extend(r,e),_(r.showHidden)&&(r.showHidden=!1),_(r.depth)&&(r.depth=2),_(r.colors)&&(r.colors=!1),_(r.customInspect)&&(r.customInspect=!0),r.colors&&(r.stylize=c),l(r,t,r.depth)}function c(t,n){var e=u.styles[n];return e?"["+u.colors[e][0]+"m"+t+"["+u.colors[e][1]+"m":t}function s(t,n){return t}function l(t,e,r){if(t.customInspect&&e&&M(e.inspect)&&e.inspect!==n.inspect&&(!e.constructor||e.constructor.prototype!==e)){var i=e.inspect(r,t);return y(i)||(i=l(t,i,r)),i}var o=function(t,n){if(_(n))return t.stylize("undefined","undefined");if(y(n)){var e="'"+JSON.stringify(n).replace(/^"|"$/g,"").replace(/'/g,"\\'").replace(/\\"/g,'"')+"'";return t.stylize(e,"string")}if(g(n))return t.stylize(""+n,"number");if(p(n))return t.stylize(""+n,"boolean");if(v(n))return t.stylize("null","null")}(t,e);if(o)return o;var a=Object.keys(e),u=function(t){var n={};return t.forEach(function(t,e){n[t]=!0}),n}(a);if(t.showHidden&&(a=Object.getOwnPropertyNames(e)),w(e)&&(a.indexOf("message")>=0||a.indexOf("description")>=0))return f(e);if(0===a.length){if(M(e)){var c=e.name?": "+e.name:"";return t.stylize("[Function"+c+"]","special")}if(m(e))return t.stylize(RegExp.prototype.toString.call(e),"regexp");if(b(e))return t.stylize(Date.prototype.toString.call(e),"date");if(w(e))return f(e)}var s,x="",k=!1,S=["{","}"];(d(e)&&(k=!0,S=["[","]"]),M(e))&&(x=" [Function"+(e.name?": "+e.name:"")+"]");return m(e)&&(x=" "+RegExp.prototype.toString.call(e)),b(e)&&(x=" "+Date.prototype.toUTCString.call(e)),w(e)&&(x=" "+f(e)),0!==a.length||k&&0!=e.length?r<0?m(e)?t.stylize(RegExp.prototype.toString.call(e),"regexp"):t.stylize("[Object]","special"):(t.seen.push(e),s=k?function(t,n,e,r,i){for(var o=[],a=0,u=n.length;a<u;++a)T(n,String(a))?o.push(h(t,n,e,r,String(a),!0)):o.push("");return i.forEach(function(i){i.match(/^\d+$/)||o.push(h(t,n,e,r,i,!0))}),o}(t,e,r,u,a):a.map(function(n){return h(t,e,r,u,n,k)}),t.seen.pop(),function(t,n,e){if(t.reduce(function(t,n){return 0,n.indexOf("\n")>=0&&0,t+n.replace(/\u001b\[\d\d?m/g,"").length+1},0)>60)return e[0]+(""===n?"":n+"\n ")+" "+t.join(",\n  ")+" "+e[1];return e[0]+n+" "+t.join(", ")+" "+e[1]}(s,x,S)):S[0]+x+S[1]}function f(t){return"["+Error.prototype.toString.call(t)+"]"}function h(t,n,e,r,i,o){var a,u,c;if((c=Object.getOwnPropertyDescriptor(n,i)||{value:n[i]}).get?u=c.set?t.stylize("[Getter/Setter]","special"):t.stylize("[Getter]","special"):c.set&&(u=t.stylize("[Setter]","special")),T(r,i)||(a="["+i+"]"),u||(t.seen.indexOf(c.value)<0?(u=v(e)?l(t,c.value,null):l(t,c.value,e-1)).indexOf("\n")>-1&&(u=o?u.split("\n").map(function(t){return"  "+t}).join("\n").substr(2):"\n"+u.split("\n").map(function(t){return"   "+t}).join("\n")):u=t.stylize("[Circular]","special")),_(a)){if(o&&i.match(/^\d+$/))return u;(a=JSON.stringify(""+i)).match(/^"([a-zA-Z_][a-zA-Z_0-9]*)"$/)?(a=a.substr(1,a.length-2),a=t.stylize(a,"name")):(a=a.replace(/'/g,"\\'").replace(/\\"/g,'"').replace(/(^"|"$)/g,"'"),a=t.stylize(a,"string"))}return a+": "+u}function d(t){return Array.isArray(t)}function p(t){return"boolean"==typeof t}function v(t){return null===t}function g(t){return"number"==typeof t}function y(t){return"string"==typeof t}function _(t){return void 0===t}function m(t){return x(t)&&"[object RegExp]"===k(t)}function x(t){return"object"==typeof t&&null!==t}function b(t){return x(t)&&"[object Date]"===k(t)}function w(t){return x(t)&&("[object Error]"===k(t)||t instanceof Error)}function M(t){return"function"==typeof t}function k(t){return Object.prototype.toString.call(t)}function S(t){return t<10?"0"+t.toString(10):t.toString(10)}n.debuglog=function(t){if(_(o)&&(o=r.env.NODE_DEBUG||""),t=t.toUpperCase(),!a[t])if(new RegExp("\\b"+t+"\\b","i").test(o)){var e=r.pid;a[t]=function(){var r=n.format.apply(n,arguments);console.error("%s %d: %s",t,e,r)}}else a[t]=function(){};return a[t]},n.inspect=u,u.colors={bold:[1,22],italic:[3,23],underline:[4,24],inverse:[7,27],white:[37,39],grey:[90,39],black:[30,39],blue:[34,39],cyan:[36,39],green:[32,39],magenta:[35,39],red:[31,39],yellow:[33,39]},u.styles={special:"cyan",number:"yellow",boolean:"yellow",undefined:"grey",null:"bold",string:"green",date:"magenta",regexp:"red"},n.isArray=d,n.isBoolean=p,n.isNull=v,n.isNullOrUndefined=function(t){return null==t},n.isNumber=g,n.isString=y,n.isSymbol=function(t){return"symbol"==typeof t},n.isUndefined=_,n.isRegExp=m,n.isObject=x,n.isDate=b,n.isError=w,n.isFunction=M,n.isPrimitive=function(t){return null===t||"boolean"==typeof t||"number"==typeof t||"string"==typeof t||"symbol"==typeof t||void 0===t},n.isBuffer=e(13);var N=["Jan","Feb","Mar","Apr","May","Jun","Jul","Aug","Sep","Oct","Nov","Dec"];function T(t,n){return Object.prototype.hasOwnProperty.call(t,n)}n.log=function(){var t,e;console.log("%s - %s",(t=new Date,e=[S(t.getHours()),S(t.getMinutes()),S(t.getSeconds())].join(":"),[t.getDate(),N[t.getMonth()],e].join(" ")),n.format.apply(n,arguments))},n.inherits=e(14),n._extend=function(t,n){if(!n||!x(n))return t;for(var e=Object.keys(n),r=e.length;r--;)t[e[r]]=n[e[r]];return t}}).call(this,e(11),e(12))},function(t,n){var e;e=function(){return this}();try{e=e||new Function("return this")()}catch(t){"object"==typeof window&&(e=window)}t.exports=e},function(t,n){var e,r,i=t.exports={};function o(){throw new Error("setTimeout has not been defined")}function a(){throw new Error("clearTimeout has not been defined")}function u(t){if(e===setTimeout)return setTimeout(t,0);if((e===o||!e)&&setTimeout)return e=setTimeout,setTimeout(t,0);try{return e(t,0)}catch(n){try{return e.call(null,t,0)}catch(n){return e.call(this,t,0)}}}!function(){try{e="function"==typeof setTimeout?setTimeout:o}catch(t){e=o}try{r="function"==typeof clearTimeout?clearTimeout:a}catch(t){r=a}}();var c,s=[],l=!1,f=-1;function h(){l&&c&&(l=!1,c.length?s=c.concat(s):f=-1,s.length&&d())}function d(){if(!l){var t=u(h);l=!0;for(var n=s.length;n;){for(c=s,s=[];++f<n;)c&&c[f].run();f=-1,n=s.length}c=null,l=!1,function(t){if(r===clearTimeout)return clearTimeout(t);if((r===a||!r)&&clearTimeout)return r=clearTimeout,clearTimeout(t);try{r(t)}catch(n){try{return r.call(null,t)}catch(n){return r.call(this,t)}}}(t)}}function p(t,n){this.fun=t,this.array=n}function v(){}i.nextTick=function(t){var n=new Array(arguments.length-1);if(arguments.length>1)for(var e=1;e<arguments.length;e++)n[e-1]=arguments[e];s.push(new p(t,n)),1!==s.length||l||u(d)},p.prototype.run=function(){this.fun.apply(null,this.array)},i.title="browser",i.browser=!0,i.env={},i.argv=[],i.version="",i.versions={},i.on=v,i.addListener=v,i.once=v,i.off=v,i.removeListener=v,i.removeAllListeners=v,i.emit=v,i.prependListener=v,i.prependOnceListener=v,i.listeners=function(t){return[]},i.binding=function(t){throw new Error("process.binding is not supported")},i.cwd=function(){return"/"},i.chdir=function(t){throw new Error("process.chdir is not supported")},i.umask=function(){return 0}},function(t,n){t.exports=function(t){return t&&"object"==typeof t&&"function"==typeof t.copy&&"function"==typeof t.fill&&"function"==typeof t.readUInt8}},function(t,n){"function"==typeof Object.create?t.exports=function(t,n){t.super_=n,t.prototype=Object.create(n.prototype,{constructor:{value:t,enumerable:!1,writable:!0,configurable:!0}})}:t.exports=function(t,n){t.super_=n;var e=function(){};e.prototype=n.prototype,t.prototype=new e,t.prototype.constructor=t}},function(t,n,e){"use strict";Object.defineProperty(n,"__esModule",{value:!0});var r=e(1),i=a(e(0)),o=a(e(2));function a(t){return t&&t.__esModule?t:{default:t}}n.default=function(t,n){var e=t.append("g").attr("id","client"),a=n.unit,u=n.callback;(0,o.default)(e,{x:0,y:1,z:0,height:20,length:1,width:30,r:120,g:120,b:120,shadow:!1}),i.default.text(e,"UI/UX",-8,10,0,1).text.attr("font-family","monospace").attr("font-size",8).attr("pointer-events","none");for(var c=e.append("clipPath").attr("id","clip"),s=(i.default.drawPoly(c,[[-16,0,0],[13,0,0],[13,0,18],[-16,0,18],[-16,0,0]],"rgb(120,120,120)","rgb(255,255,255)"),e.append("g").attr("clip-path","url(#clip)").append("g")),l=0;l<3;l++){i.default.drawPoly(s,[[-12,0,20*-l],[10,0,20*-l],[10,0,18-20*l],[-12,0,18-20*l],[-12,0,20*-l]],"none","rgb("+(160+40*l)+","+(120+80*l)+","+(200+20*l)+")");for(var f=0;f<8;f++){var h=.5*a+Math.random()*a*1.2;i.default.drawPoly(s,[[-10,0,2-20*l+2*f],[-10+h,0,2-20*l+2*f]],"rgb("+40*l+","+80*l+","+20*l+")")}}return s.transition().duration(500).attr("transform","translate(0,-10)"),{root:e,update:function(){s.transition().ease(r.easeSin).duration(Math.floor(200+500*Math.random())).on("end",function(){u&&u()}).attr("transform","translate(0,"+-30*Math.random()+")")}}},t.exports=n.default},function(t,n,e){"use strict";Object.defineProperty(n,"__esModule",{value:!0});var r=e(1),i=a(e(0)),o=a(e(2));function a(t){return t&&t.__esModule?t:{default:t}}n.default=function(t,n){var e=t.append("g").attr("id","devops"),a=n.unit;n.callback;(0,o.default)(e,{x:0,y:0,z:0,height:2,length:3*a,width:2*a,r:220,g:220,b:220,shadow:!1}),i.default.text(e,"DevOPS",17,12,0,2).text.attr("font-family","monospace").attr("font-size",8).attr("pointer-events","none");for(var u=[],c=0;c<3;c++){var s=(0,o.default)(e,{x:0,y:0,z:2,height:a/2,length:a/2,width:a/2,r:240,g:150,b:55,shadow:!0});s.attr("transform",""+i.default.getTranslate(-a/2-1+c*(a/2+1),10,2)),u.push(s)}return{root:e,update:function(){u.forEach(function(t,n){t.transition().ease(r.easeSin).duration(Math.floor(500+400*Math.random())).attr("opacity",1).on("end",function(){t.transition().duration(Math.floor(400+200*Math.random())).attr("transform",""+i.default.getTranslate(-a/2+n*(a/2+1),-12,2)).attr("opacity",0).on("end",function(){t.attr("transform",""+i.default.getTranslate(-a/2-1+n*(a/2+1),10,2)),t.transition().duration(400).attr("opacity",.4)})})})}}},t.exports=n.default},function(t,n,e){"use strict";Object.defineProperty(n,"__esModule",{value:!0});var r=function(){return function(t,n){if(Array.isArray(t))return t;if(Symbol.iterator in Object(t))return function(t,n){var e=[],r=!0,i=!1,o=void 0;try{for(var a,u=t[Symbol.iterator]();!(r=(a=u.next()).done)&&(e.push(a.value),!n||e.length!==n);r=!0);}catch(t){i=!0,o=t}finally{try{!r&&u.return&&u.return()}finally{if(i)throw o}}return e}(t,n);throw new TypeError("Invalid attempt to destructure non-iterable instance")}}(),i=(e(1),a(e(0))),o=a(e(2));function a(t){return t&&t.__esModule?t:{default:t}}function u(t){if(Array.isArray(t)){for(var n=0,e=Array(t.length);n<t.length;n++)e[n]=t[n];return e}return Array.from(t)}var c=[100,100,100],s=[160,160,160],l=function(t,n,e){return[310+60*n,100*t-60,7*e,5,20,20]},f=[[].concat(u(l(0,0,0)),c,[!0]),[].concat(u(l(0,0,1)),c,[!1]),[].concat(u(l(0,0,2)),c,[!1]),[].concat(u(l(0,1,0)),c,[!0]),[].concat(u(l(0,1,1)),c,[!1]),[].concat(u(l(0,1,2)),c,[!1]),[340,-20,0,10,20,20].concat(s,[!0]),[].concat(u(l(1,0,0)),c,[!0]),[].concat(u(l(1,0,1)),c,[!1]),[].concat(u(l(1,0,2)),c,[!1]),[].concat(u(l(1,1,0)),c,[!0]),[].concat(u(l(1,1,1)),c,[!1]),[].concat(u(l(1,1,2)),c,[!1]),[340,80,0,10,20,20].concat(s,[!0])],h=[];n.default=function(t,n){var e=t.append("g").attr("id","arch"),a=(n.unit,n.callback);return f.forEach(function(t){var n=r(t,10),a=n[0],u=n[1],c=n[2],s=n[3],l=n[4],f=n[5],d=n[6],p=n[7],v=n[8],g=n[9];(0,o.default)(e,{x:a,y:u,z:c,height:s,length:l,width:f,r:d,g:p,b:v,shadow:g}),h.push(i.default.drawPoly(e,[[a-2,u,c-7],[a-4,u,c-7],[a-4,u,c-9],[a-2,u,c-9]],"none","rgb(0, 255, 0)"))}),{root:e,update:function(){h.forEach(function(t){t.attr("fill",Math.random()>.5?"rgb(0, 255, 0)":"rgb(0, 0, 0)")}),a&&a()}}},t.exports=n.default},function(t,n,e){"use strict";Object.defineProperty(n,"__esModule",{value:!0});e(1),i(e(0));var r=i(e(2));function i(t){return t&&t.__esModule?t:{default:t}}n.default=function(t,n){var e=t.append("g").attr("id","firewall"),i=n.unit;return(0,r.default)(e,{x:0,y:0,z:0,height:2.5*i,length:1.5*i,width:3*i,r:220,g:160,b:160,shadow:!0}),{root:e,update:function(t){}}},t.exports=n.default},function(t,n,e){"use strict";e.r(n);var r=function(t,n,e){t.prototype=n.prototype=e,e.constructor=t};function i(t,n){var e=Object.create(t.prototype);for(var r in n)e[r]=n[r];return e}function o(){}var a=/^#([0-9a-f]{3})$/,u=/^#([0-9a-f]{6})$/,c=/^rgb\(\s*([-+]?\d+)\s*,\s*([-+]?\d+)\s*,\s*([-+]?\d+)\s*\)$/,s=/^rgb\(\s*([-+]?\d+(?:\.\d+)?)%\s*,\s*([-+]?\d+(?:\.\d+)?)%\s*,\s*([-+]?\d+(?:\.\d+)?)%\s*\)$/,l=/^rgba\(\s*([-+]?\d+)\s*,\s*([-+]?\d+)\s*,\s*([-+]?\d+)\s*,\s*([-+]?\d+(?:\.\d+)?)\s*\)$/,f=/^rgba\(\s*([-+]?\d+(?:\.\d+)?)%\s*,\s*([-+]?\d+(?:\.\d+)?)%\s*,\s*([-+]?\d+(?:\.\d+)?)%\s*,\s*([-+]?\d+(?:\.\d+)?)\s*\)$/,h=/^hsl\(\s*([-+]?\d+(?:\.\d+)?)\s*,\s*([-+]?\d+(?:\.\d+)?)%\s*,\s*([-+]?\d+(?:\.\d+)?)%\s*\)$/,d=/^hsla\(\s*([-+]?\d+(?:\.\d+)?)\s*,\s*([-+]?\d+(?:\.\d+)?)%\s*,\s*([-+]?\d+(?:\.\d+)?)%\s*,\s*([-+]?\d+(?:\.\d+)?)\s*\)$/,p={aliceblue:15792383,antiquewhite:16444375,aqua:65535,aquamarine:8388564,azure:15794175,beige:16119260,bisque:16770244,black:0,blanchedalmond:16772045,blue:255,blueviolet:9055202,brown:10824234,burlywood:14596231,cadetblue:6266528,chartreuse:8388352,chocolate:13789470,coral:16744272,cornflowerblue:6591981,cornsilk:16775388,crimson:14423100,cyan:65535,darkblue:139,darkcyan:35723,darkgoldenrod:12092939,darkgray:11119017,darkgreen:25600,darkgrey:11119017,darkkhaki:12433259,darkmagenta:9109643,darkolivegreen:5597999,darkorange:16747520,darkorchid:10040012,darkred:9109504,darksalmon:15308410,darkseagreen:9419919,darkslateblue:4734347,darkslategray:3100495,darkslategrey:3100495,darkturquoise:52945,darkviolet:9699539,deeppink:16716947,deepskyblue:49151,dimgray:6908265,dimgrey:6908265,dodgerblue:2003199,firebrick:11674146,floralwhite:16775920,forestgreen:2263842,fuchsia:16711935,gainsboro:14474460,ghostwhite:16316671,gold:16766720,goldenrod:14329120,gray:8421504,green:32768,greenyellow:11403055,grey:8421504,honeydew:15794160,hotpink:16738740,indianred:13458524,indigo:4915330,ivory:16777200,khaki:15787660,lavender:15132410,lavenderblush:16773365,lawngreen:8190976,lemonchiffon:16775885,lightblue:11393254,lightcoral:15761536,lightcyan:14745599,lightgoldenrodyellow:16448210,lightgray:13882323,lightgreen:9498256,lightgrey:13882323,lightpink:16758465,lightsalmon:16752762,lightseagreen:2142890,lightskyblue:8900346,lightslategray:7833753,lightslategrey:7833753,lightsteelblue:11584734,lightyellow:16777184,lime:65280,limegreen:3329330,linen:16445670,magenta:16711935,maroon:8388608,mediumaquamarine:6737322,mediumblue:205,mediumorchid:12211667,mediumpurple:9662683,mediumseagreen:3978097,mediumslateblue:8087790,mediumspringgreen:64154,mediumturquoise:4772300,mediumvioletred:13047173,midnightblue:1644912,mintcream:16121850,mistyrose:16770273,moccasin:16770229,navajowhite:16768685,navy:128,oldlace:16643558,olive:8421376,olivedrab:7048739,orange:16753920,orangered:16729344,orchid:14315734,palegoldenrod:15657130,palegreen:10025880,paleturquoise:11529966,palevioletred:14381203,papayawhip:16773077,peachpuff:16767673,peru:13468991,pink:16761035,plum:14524637,powderblue:11591910,purple:8388736,rebeccapurple:6697881,red:16711680,rosybrown:12357519,royalblue:4286945,saddlebrown:9127187,salmon:16416882,sandybrown:16032864,seagreen:3050327,seashell:16774638,sienna:10506797,silver:12632256,skyblue:8900331,slateblue:6970061,slategray:7372944,slategrey:7372944,snow:16775930,springgreen:65407,steelblue:4620980,tan:13808780,teal:32896,thistle:14204888,tomato:16737095,turquoise:4251856,violet:15631086,wheat:16113331,white:16777215,whitesmoke:16119285,yellow:16776960,yellowgreen:10145074};function v(t){var n;return t=(t+"").trim().toLowerCase(),(n=a.exec(t))?new x((n=parseInt(n[1],16))>>8&15|n>>4&240,n>>4&15|240&n,(15&n)<<4|15&n,1):(n=u.exec(t))?g(parseInt(n[1],16)):(n=c.exec(t))?new x(n[1],n[2],n[3],1):(n=s.exec(t))?new x(255*n[1]/100,255*n[2]/100,255*n[3]/100,1):(n=l.exec(t))?y(n[1],n[2],n[3],n[4]):(n=f.exec(t))?y(255*n[1]/100,255*n[2]/100,255*n[3]/100,n[4]):(n=h.exec(t))?b(n[1],n[2]/100,n[3]/100,1):(n=d.exec(t))?b(n[1],n[2]/100,n[3]/100,n[4]):p.hasOwnProperty(t)?g(p[t]):"transparent"===t?new x(NaN,NaN,NaN,0):null}function g(t){return new x(t>>16&255,t>>8&255,255&t,1)}function y(t,n,e,r){return r<=0&&(t=n=e=NaN),new x(t,n,e,r)}function _(t){return t instanceof o||(t=v(t)),t?new x((t=t.rgb()).r,t.g,t.b,t.opacity):new x}function m(t,n,e,r){return 1===arguments.length?_(t):new x(t,n,e,null==r?1:r)}function x(t,n,e,r){this.r=+t,this.g=+n,this.b=+e,this.opacity=+r}function b(t,n,e,r){return r<=0?t=n=e=NaN:e<=0||e>=1?t=n=NaN:n<=0&&(t=NaN),new M(t,n,e,r)}function w(t,n,e,r){return 1===arguments.length?function(t){if(t instanceof M)return new M(t.h,t.s,t.l,t.opacity);if(t instanceof o||(t=v(t)),!t)return new M;if(t instanceof M)return t;var n=(t=t.rgb()).r/255,e=t.g/255,r=t.b/255,i=Math.min(n,e,r),a=Math.max(n,e,r),u=NaN,c=a-i,s=(a+i)/2;return c?(u=n===a?(e-r)/c+6*(e<r):e===a?(r-n)/c+2:(n-e)/c+4,c/=s<.5?a+i:2-a-i,u*=60):c=s>0&&s<1?0:u,new M(u,c,s,t.opacity)}(t):new M(t,n,e,null==r?1:r)}function M(t,n,e,r){this.h=+t,this.s=+n,this.l=+e,this.opacity=+r}function k(t,n,e){return 255*(t<60?n+(e-n)*t/60:t<180?e:t<240?n+(e-n)*(240-t)/60:n)}r(o,v,{displayable:function(){return this.rgb().displayable()},toString:function(){return this.rgb()+""}}),r(x,m,i(o,{brighter:function(t){return t=null==t?1/.7:Math.pow(1/.7,t),new x(this.r*t,this.g*t,this.b*t,this.opacity)},darker:function(t){return t=null==t?.7:Math.pow(.7,t),new x(this.r*t,this.g*t,this.b*t,this.opacity)},rgb:function(){return this},displayable:function(){return 0<=this.r&&this.r<=255&&0<=this.g&&this.g<=255&&0<=this.b&&this.b<=255&&0<=this.opacity&&this.opacity<=1},toString:function(){var t=this.opacity;return(1===(t=isNaN(t)?1:Math.max(0,Math.min(1,t)))?"rgb(":"rgba(")+Math.max(0,Math.min(255,Math.round(this.r)||0))+", "+Math.max(0,Math.min(255,Math.round(this.g)||0))+", "+Math.max(0,Math.min(255,Math.round(this.b)||0))+(1===t?")":", "+t+")")}})),r(M,w,i(o,{brighter:function(t){return t=null==t?1/.7:Math.pow(1/.7,t),new M(this.h,this.s,this.l*t,this.opacity)},darker:function(t){return t=null==t?.7:Math.pow(.7,t),new M(this.h,this.s,this.l*t,this.opacity)},rgb:function(){var t=this.h%360+360*(this.h<0),n=isNaN(t)||isNaN(this.s)?0:this.s,e=this.l,r=e+(e<.5?e:1-e)*n,i=2*e-r;return new x(k(t>=240?t-240:t+120,i,r),k(t,i,r),k(t<120?t+240:t-120,i,r),this.opacity)},displayable:function(){return(0<=this.s&&this.s<=1||isNaN(this.s))&&0<=this.l&&this.l<=1&&0<=this.opacity&&this.opacity<=1}}));var S=Math.PI/180,N=180/Math.PI,T=.95047,A=1,E=1.08883,C=4/29,z=6/29,P=3*z*z,O=z*z*z;function q(t){if(t instanceof j)return new j(t.l,t.a,t.b,t.opacity);if(t instanceof Y){var n=t.h*S;return new j(t.l,Math.cos(n)*t.c,Math.sin(n)*t.c,t.opacity)}t instanceof x||(t=_(t));var e=I(t.r),r=I(t.g),i=I(t.b),o=D((.4124564*e+.3575761*r+.1804375*i)/T),a=D((.2126729*e+.7151522*r+.072175*i)/A);return new j(116*a-16,500*(o-a),200*(a-D((.0193339*e+.119192*r+.9503041*i)/E)),t.opacity)}function L(t,n,e,r){return 1===arguments.length?q(t):new j(t,n,e,null==r?1:r)}function j(t,n,e,r){this.l=+t,this.a=+n,this.b=+e,this.opacity=+r}function D(t){return t>O?Math.pow(t,1/3):t/P+C}function R(t){return t>z?t*t*t:P*(t-C)}function U(t){return 255*(t<=.0031308?12.92*t:1.055*Math.pow(t,1/2.4)-.055)}function I(t){return(t/=255)<=.04045?t/12.92:Math.pow((t+.055)/1.055,2.4)}function F(t,n,e,r){return 1===arguments.length?function(t){if(t instanceof Y)return new Y(t.h,t.c,t.l,t.opacity);t instanceof j||(t=q(t));var n=Math.atan2(t.b,t.a)*N;return new Y(n<0?n+360:n,Math.sqrt(t.a*t.a+t.b*t.b),t.l,t.opacity)}(t):new Y(t,n,e,null==r?1:r)}function Y(t,n,e,r){this.h=+t,this.c=+n,this.l=+e,this.opacity=+r}r(j,L,i(o,{brighter:function(t){return new j(this.l+18*(null==t?1:t),this.a,this.b,this.opacity)},darker:function(t){return new j(this.l-18*(null==t?1:t),this.a,this.b,this.opacity)},rgb:function(){var t=(this.l+16)/116,n=isNaN(this.a)?t:t+this.a/500,e=isNaN(this.b)?t:t-this.b/200;return t=A*R(t),new x(U(3.2404542*(n=T*R(n))-1.5371385*t-.4985314*(e=E*R(e))),U(-.969266*n+1.8760108*t+.041556*e),U(.0556434*n-.2040259*t+1.0572252*e),this.opacity)}})),r(Y,F,i(o,{brighter:function(t){return new Y(this.h,this.c,this.l+18*(null==t?1:t),this.opacity)},darker:function(t){return new Y(this.h,this.c,this.l-18*(null==t?1:t),this.opacity)},rgb:function(){return q(this).rgb()}}));var B=-.14861,H=1.78277,X=-.29227,$=-.90649,V=1.97294,W=V*$,Z=V*H,G=H*X-$*B;function J(t,n,e,r){return 1===arguments.length?function(t){if(t instanceof Q)return new Q(t.h,t.s,t.l,t.opacity);t instanceof x||(t=_(t));var n=t.r/255,e=t.g/255,r=t.b/255,i=(G*r+W*n-Z*e)/(G+W-Z),o=r-i,a=(V*(e-i)-X*o)/$,u=Math.sqrt(a*a+o*o)/(V*i*(1-i)),c=u?Math.atan2(a,o)*N-120:NaN;return new Q(c<0?c+360:c,u,i,t.opacity)}(t):new Q(t,n,e,null==r?1:r)}function Q(t,n,e,r){this.h=+t,this.s=+n,this.l=+e,this.opacity=+r}r(Q,J,i(o,{brighter:function(t){return t=null==t?1/.7:Math.pow(1/.7,t),new Q(this.h,this.s,this.l*t,this.opacity)},darker:function(t){return t=null==t?.7:Math.pow(.7,t),new Q(this.h,this.s,this.l*t,this.opacity)},rgb:function(){var t=isNaN(this.h)?0:(this.h+120)*S,n=+this.l,e=isNaN(this.s)?0:this.s*n*(1-n),r=Math.cos(t),i=Math.sin(t);return new x(255*(n+e*(B*r+H*i)),255*(n+e*(X*r+$*i)),255*(n+e*(V*r)),this.opacity)}})),e.d(n,"color",function(){return v}),e.d(n,"rgb",function(){return m}),e.d(n,"hsl",function(){return w}),e.d(n,"lab",function(){return L}),e.d(n,"hcl",function(){return F}),e.d(n,"cubehelix",function(){return J})}]);
//# sourceMappingURL=data:application/json;charset=utf-8;base64,